Reserved 0xf7000000 bytes of guest address space
host mmap_min_addr=0x10000
guest_base  0x7f6571a86000
start    end      size     prot
08048000-08049000 00001000 r-x
08049000-0804b000 00002000 rw-
f67da000-f67fc000 00022000 r-x
f67fc000-f67fd000 00001000 ---
f67fd000-f67ff000 00002000 rw-
f67ff000-f6800000 00001000 ---
f6800000-f7000000 00800000 rw-
start_brk   0x00000000
end_code    0x08048878
start_code  0x08048000
start_data  0x08049f08
end_data    0x0804a034
start_stack 0xf6ffef70
brk         0x0804a038
entry       0xf67daac0
----------------
IN: 
0xf67daac0:  mov    %esp,%eax
0xf67daac2:  call   0xf67de820


call [pc: f67daac7, cc: f67daac7]
----------------
IN: 
0xf67de820:  push   %ebp
0xf67de821:  mov    %esp,%ebp
0xf67de823:  push   %edi
0xf67de824:  push   %esi
0xf67de825:  push   %ebx
0xf67de826:  call   0xf67f3609


call [pc: f67de82b, cc: 000042ec]
----------------
IN: 
0xf67f3609:  mov    (%esp),%ebx
0xf67f360c:  ret    


ret [pc: f67de82b, cc: f67daac7]
----------------
IN: 
0xf67de82b:  add    $0x1f7d5,%ebx
0xf67de831:  sub    $0x3c,%esp
0xf67de834:  mov    %eax,-0x40(%ebp)
0xf67de837:  rdtsc  
0xf67de839:  mov    %edx,-0x31c(%ebx)
0xf67de83f:  lea    -0xc4(%ebx),%edx
0xf67de845:  mov    %eax,-0x320(%ebx)
0xf67de84b:  mov    -0xc4(%ebx),%eax
0xf67de851:  mov    $0x6fffffff,%edi
0xf67de856:  mov    %edx,%esi
0xf67de858:  sub    0x0(%ebx),%esi
0xf67de85e:  mov    %edx,0x544(%ebx)
0xf67de864:  test   %eax,%eax
0xf67de866:  mov    %esi,0x53c(%ebx)
0xf67de86c:  jne    0xf67de889

----------------
IN: 
0xf67de889:  cmp    $0x21,%eax
0xf67de88c:  jbe    0xf67de879

----------------
IN: 
0xf67de879:  mov    %edx,0x55c(%ebx,%eax,4)
0xf67de880:  add    $0x8,%edx
0xf67de883:  mov    (%edx),%eax
0xf67de885:  test   %eax,%eax
0xf67de887:  je     0xf67de8c0

----------------
IN: 
0xf67de88e:  mov    %edi,%ecx
0xf67de890:  sub    %eax,%ecx
0xf67de892:  cmp    $0xf,%ecx
0xf67de895:  jbe    0xf67de870

----------------
IN: 
0xf67de897:  lea    (%eax,%eax,1),%ecx
0xf67de89a:  sar    %ecx
0xf67de89c:  cmp    $0xfffffffc,%ecx
0xf67de89f:  jbe    0xf67dea58

----------------
IN: 
0xf67dea58:  mov    $0x6ffffdff,%ecx
0xf67dea5d:  sub    %eax,%ecx
0xf67dea5f:  cmp    $0xb,%ecx
0xf67dea62:  ja     0xf67debb0

----------------
IN: 
0xf67debb0:  mov    $0x6ffffeff,%ecx
0xf67debb5:  sub    %eax,%ecx
0xf67debb7:  cmp    $0xa,%ecx
0xf67debba:  ja     0xf67de880

----------------
IN: 
0xf67debc0:  neg    %eax
0xf67debc2:  mov    %edx,-0x3ffffda4(%ebx,%eax,4)
0xf67debc9:  jmp    0xf67de880

----------------
IN: 
0xf67de880:  add    $0x8,%edx
0xf67de883:  mov    (%edx),%eax
0xf67de885:  test   %eax,%eax
0xf67de887:  je     0xf67de8c0

----------------
IN: 
0xf67de870:  mov    $0x70000021,%ecx
0xf67de875:  sub    %eax,%ecx
0xf67de877:  mov    %ecx,%eax
0xf67de879:  mov    %edx,0x55c(%ebx,%eax,4)
0xf67de880:  add    $0x8,%edx
0xf67de883:  mov    (%edx),%eax
0xf67de885:  test   %eax,%eax
0xf67de887:  je     0xf67de8c0

----------------
IN: 
0xf67de8c0:  test   %esi,%esi
0xf67de8c2:  je     0xf67de92c

----------------
IN: 
0xf67de8c4:  mov    0x56c(%ebx),%eax
0xf67de8ca:  test   %eax,%eax
0xf67de8cc:  je     0xf67de8d1

----------------
IN: 
0xf67de8ce:  add    %esi,0x4(%eax)
0xf67de8d1:  mov    0x568(%ebx),%eax
0xf67de8d7:  test   %eax,%eax
0xf67de8d9:  je     0xf67de8de

----------------
IN: 
0xf67de8db:  add    %esi,0x4(%eax)
0xf67de8de:  mov    0x570(%ebx),%eax
0xf67de8e4:  test   %eax,%eax
0xf67de8e6:  je     0xf67de8eb

----------------
IN: 
0xf67de8e8:  add    %esi,0x4(%eax)
0xf67de8eb:  mov    0x574(%ebx),%eax
0xf67de8f1:  test   %eax,%eax
0xf67de8f3:  je     0xf67de8f8

----------------
IN: 
0xf67de8f5:  add    %esi,0x4(%eax)
0xf67de8f8:  mov    0x5a0(%ebx),%eax
0xf67de8fe:  test   %eax,%eax
0xf67de900:  je     0xf67de905

----------------
IN: 
0xf67de902:  add    %esi,0x4(%eax)
0xf67de905:  mov    0x5b8(%ebx),%eax
0xf67de90b:  test   %eax,%eax
0xf67de90d:  je     0xf67de912

----------------
IN: 
0xf67de90f:  add    %esi,0x4(%eax)
0xf67de912:  mov    0x620(%ebx),%eax
0xf67de918:  test   %eax,%eax
0xf67de91a:  je     0xf67de91f

----------------
IN: 
0xf67de91c:  add    %esi,0x4(%eax)
0xf67de91f:  mov    0x688(%ebx),%eax
0xf67de925:  test   %eax,%eax
0xf67de927:  je     0xf67de92c

----------------
IN: 
0xf67de929:  add    %esi,0x4(%eax)
0xf67de92c:  mov    0x5ac(%ebx),%edx
0xf67de932:  test   %edx,%edx
0xf67de934:  je     0xf67de940

----------------
IN: 
0xf67de936:  cmpl   $0x11,0x4(%edx)
0xf67de93a:  jne    0xf67ded55

----------------
IN: 
0xf67de940:  mov    0x5a0(%ebx),%eax
0xf67de946:  test   %eax,%eax
0xf67de948:  je     0xf67de95a

----------------
IN: 
0xf67de94a:  mov    0x5a8(%ebx),%ecx
0xf67de950:  cmpl   $0x8,0x4(%ecx)
0xf67de954:  jne    0xf67ded36

----------------
IN: 
0xf67de95a:  mov    0x5f4(%ebx),%ecx
0xf67de960:  test   %ecx,%ecx
0xf67de962:  je     0xf67de971

----------------
IN: 
0xf67de971:  mov    0x5d4(%ebx),%ecx
0xf67de977:  test   %ecx,%ecx
0xf67de979:  je     0xf67de988

----------------
IN: 
0xf67de988:  mov    0x5d0(%ebx),%ecx
0xf67de98e:  test   %ecx,%ecx
0xf67de990:  jne    0xf67decd9

----------------
IN: 
0xf67de996:  mov    0x598(%ebx),%edi
0xf67de99c:  test   %edi,%edi
0xf67de99e:  jne    0xf67ded71

----------------
IN: 
0xf67de9a4:  test   %esi,%esi
0xf67de9a6:  jne    0xf67dea80

----------------
IN: 
0xf67dea80:  test   %eax,%eax
0xf67dea82:  je     0xf67dec70

----------------
IN: 
0xf67dea88:  mov    0x4(%eax),%eax
0xf67dea8b:  mov    %eax,-0x38(%ebp)
0xf67dea8e:  mov    0x5a4(%ebx),%eax
0xf67dea94:  mov    0x4(%eax),%eax
0xf67dea97:  mov    %eax,-0x30(%ebp)
0xf67dea9a:  mov    0x5f8(%ebx),%eax
0xf67deaa0:  test   %eax,%eax
0xf67deaa2:  je     0xf67deca5

----------------
IN: 
0xf67deaa8:  mov    -0x38(%ebp),%ecx
0xf67deaab:  mov    -0x30(%ebp),%edi
0xf67deaae:  mov    0x4(%eax),%eax
0xf67deab1:  add    %ecx,%edi
0xf67deab3:  mov    %edi,-0x34(%ebp)
0xf67deab6:  mov    %ecx,%edi
0xf67deab8:  lea    (%ecx,%eax,8),%ecx
0xf67deabb:  mov    %edi,-0x2c(%ebp)
0xf67deabe:  test   %edx,%edx
0xf67deac0:  je     0xf67deaea

----------------
IN: 
0xf67deac2:  mov    0x5b8(%ebx),%eax
0xf67deac8:  mov    0x564(%ebx),%edx
0xf67deace:  mov    0x4(%eax),%edi
0xf67dead1:  mov    0x4(%edx),%edx
0xf67dead4:  mov    -0x30(%ebp),%eax
0xf67dead7:  add    %edx,%edi
0xf67dead9:  sub    %edx,%eax
0xf67deadb:  cmp    -0x34(%ebp),%edi
0xf67deade:  cmovne -0x30(%ebp),%eax
0xf67deae2:  add    -0x38(%ebp),%edx
0xf67deae5:  add    %edx,%eax
0xf67deae7:  mov    %eax,-0x34(%ebp)
0xf67deaea:  mov    0x574(%ebx),%edx
0xf67deaf0:  cmp    %ecx,-0x2c(%ebp)
0xf67deaf3:  mov    0x4(%edx),%eax
0xf67deaf6:  mov    %eax,-0x38(%ebp)
0xf67deaf9:  jae    0xf67deb2f

----------------
IN: 
0xf67deafb:  mov    -0x2c(%ebp),%eax
0xf67deafe:  mov    %esi,%edx
0xf67deb00:  add    (%eax),%edx
0xf67deb02:  cmpb   $0x8,0x4(%eax)
0xf67deb06:  jne    0xf67decba

----------------
IN: 
0xf67deb0c:  mov    -0x2c(%ebp),%eax
0xf67deb0f:  jmp    0xf67deb26

----------------
IN: 
0xf67deb26:  add    $0x8,%eax
0xf67deb29:  add    %esi,(%edx)
0xf67deb2b:  cmp    %ecx,%eax
0xf67deb2d:  jb     0xf67deb18

----------------
IN: 
0xf67deb18:  mov    (%eax),%edx
0xf67deb1a:  add    %esi,%edx
0xf67deb1c:  cmpb   $0x8,0x4(%eax)
0xf67deb20:  jne    0xf67decba

----------------
IN: 
0xf67deb2f:  mov    0x620(%ebx),%eax
0xf67deb35:  test   %eax,%eax
0xf67deb37:  je     0xf67ded90

----------------
IN: 
0xf67deb3d:  lea    0x20,%eax
0xf67deb43:  cmp    %ecx,-0x34(%ebp)
0xf67deb46:  mov    %eax,-0x30(%ebp)
0xf67deb49:  lea    -0xe080(%ebx),%eax
0xf67deb4f:  mov    %eax,-0x44(%ebp)
0xf67deb52:  jbe    0xf67de9ba

----------------
IN: 
0xf67deb58:  mov    %esi,-0x3c(%ebp)
0xf67deb5b:  nop    
0xf67deb5c:  lea    0x0(%esi),%esi
0xf67deb60:  mov    -0x3c(%ebp),%edi
0xf67deb63:  add    (%ecx),%edi
0xf67deb65:  mov    0x4(%ecx),%eax
0xf67deb68:  mov    -0x30(%ebp),%edx
0xf67deb6b:  mov    %edi,-0x2c(%ebp)
0xf67deb6e:  mov    %eax,%edi
0xf67deb70:  movzbl %al,%esi
0xf67deb73:  shr    $0x8,%edi
0xf67deb76:  shl    $0x4,%edi
0xf67deb79:  add    -0x38(%ebp),%edi
0xf67deb7c:  mov    0x4(%edi),%eax
0xf67deb7f:  add    0x51c(%edx,%ebx,1),%eax
0xf67deb86:  movzbl 0xc(%edi),%edx
0xf67deb8a:  and    $0xf,%edx
0xf67deb8d:  cmp    $0xa,%dl
0xf67deb90:  je     0xf67dec58

----------------
IN: 
0xf67deb96:  sub    $0x6,%esi
0xf67deb99:  cmp    $0x23,%esi
0xf67deb9c:  ja     0xf67debe8

----------------
IN: 
0xf67deb9e:  mov    -0xa984(%ebx,%esi,4),%edx
0xf67deba5:  add    %ebx,%edx
0xf67deba7:  jmp    *%edx

----------------
IN: 
0xf67dec20:  mov    -0x2c(%ebp),%edi
0xf67dec23:  mov    %eax,(%edi)
0xf67dec25:  jmp    0xf67debe8

----------------
IN: 
0xf67debe8:  add    $0x8,%ecx
0xf67debeb:  cmp    %ecx,-0x34(%ebp)
0xf67debee:  ja     0xf67deb60

----------------
IN: 
0xf67deb60:  mov    -0x3c(%ebp),%edi
0xf67deb63:  add    (%ecx),%edi
0xf67deb65:  mov    0x4(%ecx),%eax
0xf67deb68:  mov    -0x30(%ebp),%edx
0xf67deb6b:  mov    %edi,-0x2c(%ebp)
0xf67deb6e:  mov    %eax,%edi
0xf67deb70:  movzbl %al,%esi
0xf67deb73:  shr    $0x8,%edi
0xf67deb76:  shl    $0x4,%edi
0xf67deb79:  add    -0x38(%ebp),%edi
0xf67deb7c:  mov    0x4(%edi),%eax
0xf67deb7f:  add    0x51c(%edx,%ebx,1),%eax
0xf67deb86:  movzbl 0xc(%edi),%edx
0xf67deb8a:  and    $0xf,%edx
0xf67deb8d:  cmp    $0xa,%dl
0xf67deb90:  je     0xf67dec58

----------------
IN: 
0xf67debf4:  jmp    0xf67de9ba

----------------
IN: 
0xf67de9ba:  lea    0x53c(%ebx),%eax
0xf67de9c0:  orb    $0x4,0x6d0(%ebx)
0xf67de9c7:  call   0xf67e4830


call [pc: f67de9cc, cc: 0000430b]
----------------
IN: 
0xf67e4830:  push   %ebp
0xf67e4831:  push   %edi
0xf67e4832:  push   %esi
0xf67e4833:  push   %ebx
0xf67e4834:  call   0xf67f360d


call [pc: f67e4839, cc: f67e0b32]
----------------
IN: 
0xf67f360d:  mov    (%esp),%esi
0xf67f3610:  ret    


ret [pc: f67e4839, cc: 0000430b]
----------------
IN: 
0xf67e4839:  add    $0x197c7,%esi
0xf67e483f:  sub    $0xc,%esp
0xf67e4842:  mov    0x14c(%eax),%edx
0xf67e4848:  test   %edx,%edx
0xf67e484a:  je     0xf67e48a0

----------------
IN: 
0xf67e484c:  mov    0x4(%edx),%edx
0xf67e484f:  mov    (%edx),%ecx
0xf67e4851:  mov    %ecx,0x178(%eax)
0xf67e4857:  mov    0x8(%edx),%ebx
0xf67e485a:  mov    0x4(%edx),%ebp
0xf67e485d:  lea    -0x1(%ebx),%edi
0xf67e4860:  test   %edi,%ebx
0xf67e4862:  jne    0xf67e48c6

----------------
IN: 
0xf67e4864:  lea    0x10(%edx),%esi
0xf67e4867:  mov    %edi,0x17c(%eax)
0xf67e486d:  mov    0xc(%edx),%edx
0xf67e4870:  sub    %ebp,%ecx
0xf67e4872:  mov    %esi,0x184(%eax)
0xf67e4878:  mov    %edx,0x180(%eax)
0xf67e487e:  lea    (%esi,%ebx,4),%edx
0xf67e4881:  mov    %edx,0x188(%eax)
0xf67e4887:  lea    (%edx,%ecx,4),%edx
0xf67e488a:  mov    %edx,0x18c(%eax)
0xf67e4890:  add    $0xc,%esp
0xf67e4893:  pop    %ebx
0xf67e4894:  pop    %esi
0xf67e4895:  pop    %edi
0xf67e4896:  pop    %ebp
0xf67e4897:  ret    


ret [pc: f67de9cc, cc: f67daac7]
----------------
IN: 
0xf67de9cc:  lea    0x53c(%ebx),%eax
0xf67de9d2:  mov    %eax,0x550(%ebx)
0xf67de9d8:  lea    -0x24000(%ebx),%eax
0xf67de9de:  mov    %eax,0x6e8(%ebx)
0xf67de9e4:  lea    0x918(%ebx),%eax
0xf67de9ea:  mov    %eax,0x6ec(%ebx)
0xf67de9f0:  lea    -0xa9e3(%ebx),%eax
0xf67de9f6:  mov    %eax,0x6f0(%ebx)
0xf67de9fc:  rdtsc  
0xf67de9fe:  mov    %eax,0x520(%ebx)
0xf67dea04:  lea    -0x22a90(%ebx),%eax
0xf67dea0a:  sub    $0x8,%esp
0xf67dea0d:  mov    %edx,0x524(%ebx)
0xf67dea13:  mov    %ebp,-0xcc(%ebx)
0xf67dea19:  push   %eax
0xf67dea1a:  pushl  -0x40(%ebp)
0xf67dea1d:  call   0xf67f0090


call [pc: f67dea22, cc: 000040e5]
----------------
IN: 
0xf67f0090:  push   %ebp
0xf67f0091:  push   %edi
0xf67f0092:  push   %esi
0xf67f0093:  push   %ebx
0xf67f0094:  call   0xf67f360d


call [pc: f67f0099, cc: f67f407c]

ret [pc: f67f0099, cc: 000040e5]
----------------
IN: 
0xf67f0099:  add    $0xdf67,%esi
0xf67f009f:  sub    $0x5c,%esp
0xf67f00a2:  mov    0x70(%esp),%eax
0xf67f00a6:  mov    (%eax),%edx
0xf67f00a8:  mov    %eax,-0xcc(%esi)
0xf67f00ae:  add    $0x4,%eax
0xf67f00b1:  mov    %eax,-0x308(%esi)
0xf67f00b7:  lea    0x4(%eax,%edx,4),%eax
0xf67f00bb:  mov    %edx,-0x304(%esi)
0xf67f00c1:  mov    %eax,0x8fc(%esi)
0xf67f00c7:  mov    (%eax),%ebx
0xf67f00c9:  test   %ebx,%ebx
0xf67f00cb:  je     0xf67f00d9

----------------
IN: 
0xf67f00cd:  lea    0x0(%esi),%esi
0xf67f00d0:  add    $0x4,%eax
0xf67f00d3:  mov    (%eax),%ecx
0xf67f00d5:  test   %ecx,%ecx
0xf67f00d7:  jne    0xf67f00d0

----------------
IN: 
0xf67f00d0:  add    $0x4,%eax
0xf67f00d3:  mov    (%eax),%ecx
0xf67f00d5:  test   %ecx,%ecx
0xf67f00d7:  jne    0xf67f00d0

----------------
IN: 
0xf67f00d9:  lea    0x4(%eax),%edx
0xf67f00dc:  mov    0x4(%eax),%eax
0xf67f00df:  lea    -0x23540(%esi),%ebx
0xf67f00e5:  movl   $0x0,-0x2f8(%esi)
0xf67f00ef:  mov    %edx,-0x2b0(%esi)
0xf67f00f5:  mov    %ebx,0x4c(%esp)
0xf67f00f9:  test   %eax,%eax
0xf67f00fb:  je     0xf67f03c4

----------------
IN: 
0xf67f0101:  mov    -0x2f0(%esi),%edi
0xf67f0107:  mov    -0x2bc(%esi),%ebp
0xf67f010d:  xor    %ecx,%ecx
0xf67f010f:  movb   $0x0,0x32(%esp)
0xf67f0114:  movb   $0x0,0x30(%esp)
0xf67f0119:  movb   $0x0,0x21(%esp)
0xf67f011e:  movb   $0x0,0x33(%esp)
0xf67f0123:  mov    %edi,0x10(%esp)
0xf67f0127:  mov    -0xc8(%esi),%edi
0xf67f012d:  mov    %ebp,0x3c(%esp)
0xf67f0131:  mov    -0x124(%esi),%ebp
0xf67f0137:  movb   $0x0,0x31(%esp)
0xf67f013c:  movb   $0x0,0x36(%esp)
0xf67f0141:  mov    %edi,0x1c(%esp)
0xf67f0145:  mov    -0x2c0(%esi),%edi
0xf67f014b:  mov    %ebp,0x2c(%esp)
0xf67f014f:  movb   $0x0,0x23(%esp)
0xf67f0154:  mov    -0xd0(%esi),%ebp
0xf67f015a:  movl   $0x0,0x24(%esp)
0xf67f0162:  mov    %edi,0x38(%esp)
0xf67f0166:  mov    -0x128(%esi),%edi
0xf67f016c:  movb   $0x0,0x22(%esp)
0xf67f0171:  movb   $0x0,0x37(%esp)
0xf67f0176:  movl   $0x0,0x4(%esp)
0xf67f017e:  movl   $0x0,(%esp)
0xf67f0185:  mov    %edi,0x28(%esp)
0xf67f0189:  mov    -0x2e0(%esi),%edi
0xf67f018f:  mov    %ecx,0x8(%esp)
0xf67f0193:  mov    %edi,0x18(%esp)
0xf67f0197:  movzwl -0x2c8(%esi),%edi
0xf67f019e:  mov    %di,0x34(%esp)
0xf67f01a3:  mov    -0x130(%esi),%edi
0xf67f01a9:  mov    %edi,0x14(%esp)
0xf67f01ad:  xor    %edi,%edi
0xf67f01af:  mov    %ebx,0xc(%esp)
0xf67f01b3:  nop    
0xf67f01b4:  lea    0x0(%esi),%esi
0xf67f01b8:  sub    $0x3,%eax
0xf67f01bb:  cmp    $0x1e,%eax
0xf67f01be:  ja     0xf67f01e0

----------------
IN: 
0xf67f01c0:  mov    -0x9d60(%esi,%eax,4),%ecx
0xf67f01c7:  add    %esi,%ecx
0xf67f01c9:  jmp    *%ecx

----------------
IN: 
0xf67f0360:  mov    0x4(%edx),%eax
0xf67f0363:  movb   $0x1,0x23(%esp)
0xf67f0368:  mov    %eax,0x24(%esp)
0xf67f036c:  jmp    0xf67f01e0

----------------
IN: 
0xf67f01e0:  add    $0x8,%edx
0xf67f01e3:  mov    (%edx),%eax
0xf67f01e5:  test   %eax,%eax
0xf67f01e7:  jne    0xf67f01b8

----------------
IN: 
0xf67f01b8:  sub    $0x3,%eax
0xf67f01bb:  cmp    $0x1e,%eax
0xf67f01be:  ja     0xf67f01e0

----------------
IN: 
0xf67f02f0:  mov    0x4(%edx),%ebp
0xf67f02f3:  movb   $0x1,0x32(%esp)
0xf67f02f8:  jmp    0xf67f01e0

----------------
IN: 
0xf67f0330:  mov    0x4(%edx),%eax
0xf67f0333:  movb   $0x1,0x33(%esp)
0xf67f0338:  mov    %eax,0x18(%esp)
0xf67f033c:  jmp    0xf67f01e0

----------------
IN: 
0xf67f0348:  mov    0x4(%edx),%ecx
0xf67f034b:  xor    %ebx,%ebx
0xf67f034d:  movb   $0x1,0x36(%esp)
0xf67f0352:  mov    %ebx,0x3c(%esp)
0xf67f0356:  mov    %ecx,0x38(%esp)
0xf67f035a:  jmp    0xf67f01e0

----------------
IN: 
0xf67f0378:  mov    0x4(%edx),%eax
0xf67f037b:  movb   $0x1,0x37(%esp)
0xf67f0380:  mov    %eax,0xc(%esp)
0xf67f0384:  jmp    0xf67f01e0

----------------
IN: 
0xf67f0390:  mov    0x4(%edx),%eax
0xf67f0393:  mov    $0x1,%edi
0xf67f0398:  mov    %eax,0x10(%esp)
0xf67f039c:  jmp    0xf67f01e0

----------------
IN: 
0xf67f03b8:  mov    0x4(%edx),%eax
0xf67f03bb:  mov    %eax,0x4(%esp)
0xf67f03bf:  jmp    0xf67f01e0

----------------
IN: 
0xf67f03a8:  mov    0x4(%edx),%eax
0xf67f03ab:  mov    %eax,(%esp)
0xf67f03ae:  jmp    0xf67f01e0

----------------
IN: 
0xf67f01e9:  mov    %edi,%eax
0xf67f01eb:  mov    0x8(%esp),%ecx
0xf67f01ef:  mov    0xc(%esp),%ebx
0xf67f01f3:  test   %al,%al
0xf67f01f5:  jne    0xf67f08ee

----------------
IN: 
0xf67f08ee:  mov    0x10(%esp),%eax
0xf67f08f2:  mov    %eax,-0x2f0(%esi)
0xf67f08f8:  jmp    0xf67f01fb

----------------
IN: 
0xf67f01fb:  cmpb   $0x0,0x37(%esp)
0xf67f0200:  je     0xf67f0206

----------------
IN: 
0xf67f0202:  mov    %ebx,0x4c(%esp)
0xf67f0206:  cmpb   $0x0,0x22(%esp)
0xf67f020b:  je     0xf67f0217

----------------
IN: 
0xf67f0217:  cmpb   $0x0,0x23(%esp)
0xf67f021c:  je     0xf67f0228

----------------
IN: 
0xf67f021e:  mov    0x24(%esp),%eax
0xf67f0222:  mov    %eax,-0x2f8(%esi)
0xf67f0228:  cmpb   $0x0,0x36(%esp)
0xf67f022d:  je     0xf67f0243

----------------
IN: 
0xf67f022f:  mov    0x38(%esp),%eax
0xf67f0233:  mov    0x3c(%esp),%edx
0xf67f0237:  mov    %eax,-0x2c0(%esi)
0xf67f023d:  mov    %edx,-0x2bc(%esi)
0xf67f0243:  cmpb   $0x0,0x31(%esp)
0xf67f0248:  je     0xf67f025e

----------------
IN: 
0xf67f025e:  cmpb   $0x0,0x33(%esp)
0xf67f0263:  je     0xf67f026f

----------------
IN: 
0xf67f0265:  mov    0x18(%esp),%eax
0xf67f0269:  mov    %eax,-0x2e0(%esi)
0xf67f026f:  cmpb   $0x0,0x21(%esp)
0xf67f0274:  je     0xf67f0282

----------------
IN: 
0xf67f0282:  cmpb   $0x0,0x30(%esp)
0xf67f0287:  je     0xf67f0293

----------------
IN: 
0xf67f0293:  cmpb   $0x0,0x32(%esp)
0xf67f0298:  je     0xf67f02a0

----------------
IN: 
0xf67f029a:  mov    %ebp,-0xd0(%esi)
0xf67f02a0:  test   %ecx,%ecx
0xf67f02a2:  je     0xf67f03d8

----------------
IN: 
0xf67f03d8:  sub    $0xc,%esp
0xf67f03db:  push   $0x0
0xf67f03dd:  call   0xf67f1530


call [pc: f67f03e2, cc: f67f4307]
----------------
IN: 
0xf67f1530:  push   %ebx
0xf67f1531:  mov    $0x2d,%eax
0xf67f1536:  mov    0x8(%esp),%ebx
0xf67f153a:  call   0xf67f3605


call [pc: f67f153f, cc: 00005638]
----------------
IN: 
0xf67f3605:  mov    (%esp),%edx
0xf67f3608:  ret    


ret [pc: f67f153f, cc: f67f4307]
----------------
IN: 
0xf67f153f:  add    $0xcac1,%edx
0xf67f1545:  int    $0x80

----------------
IN: 
0xf67f1547:  cmp    %eax,%ebx
0xf67f1549:  mov    %eax,0x8e8(%edx)
0xf67f154f:  ja     0xf67f1558

----------------
IN: 
0xf67f1551:  xor    %eax,%eax
0xf67f1553:  pop    %ebx
0xf67f1554:  ret    


ret [pc: f67f03e2, cc: 000040e5]
----------------
IN: 
0xf67f03e2:  mov    -0x2f8(%esi),%edi
0xf67f03e8:  add    $0x10,%esp
0xf67f03eb:  test   %edi,%edi
0xf67f03ed:  je     0xf67f0400

----------------
IN: 
0xf67f03ef:  cmpb   $0x0,(%edi)
0xf67f03f2:  jne    0xf67f0400

----------------
IN: 
0xf67f0400:  xor    %eax,%eax
0xf67f0402:  cpuid  
0xf67f0404:  cmp    $0x756e6547,%ebx
0xf67f040a:  mov    %eax,-0x2a8(%esi)
0xf67f0410:  mov    %edx,0x8(%esp)
0xf67f0414:  sete   %al
0xf67f0417:  cmp    $0x6c65746e,%ecx
0xf67f041d:  mov    %eax,%ebp
0xf67f041f:  sete   %al
0xf67f0422:  and    %ebp,%eax
0xf67f0424:  cmp    $0x49656e69,%edx
0xf67f042a:  sete   %dl
0xf67f042d:  and    %al,%dl
0xf67f042f:  mov    %dl,0x18(%esp)
0xf67f0433:  jne    0xf67f0640

----------------
IN: 
0xf67f0640:  mov    $0x1,%eax
0xf67f0645:  cpuid  
0xf67f0647:  mov    %edx,-0x298(%esi)
0xf67f064d:  mov    %eax,%edx
0xf67f064f:  mov    %ebx,-0x2a0(%esi)
0xf67f0655:  shr    $0x8,%edx
0xf67f0658:  mov    %ecx,-0x29c(%esi)
0xf67f065e:  mov    %eax,-0x2a4(%esi)
0xf67f0664:  and    $0xf,%edx
0xf67f0667:  mov    %edx,%ebx
0xf67f0669:  mov    %edx,0xc(%esp)
0xf67f066d:  mov    %eax,%edx
0xf67f066f:  shr    $0x4,%edx
0xf67f0672:  and    $0xf,%edx
0xf67f0675:  mov    %edx,%ebp
0xf67f0677:  mov    %eax,%edx
0xf67f0679:  shr    $0xc,%edx
0xf67f067c:  and    $0xf0,%edx
0xf67f0682:  cmp    $0xf,%ebx
0xf67f0685:  je     0xf67f074b

----------------
IN: 
0xf67f068b:  and    $0xf,%eax
0xf67f068e:  cmpl   $0x6,0xc(%esp)
0xf67f0693:  movb   $0x0,0x8(%esp)
0xf67f0698:  mov    %eax,0x14(%esp)
0xf67f069c:  movl   $0x1,0x10(%esp)
0xf67f06a4:  jne    0xf67f047e

----------------
IN: 
0xf67f06aa:  add    %edx,%ebp
0xf67f06ac:  lea    -0x1a(%ebp),%eax
0xf67f06af:  cmp    $0x43,%eax
0xf67f06b2:  ja     0xf67f0867

----------------
IN: 
0xf67f0867:  testb  $0x10,-0x299(%esi)
0xf67f086e:  jne    0xf67f07f5

----------------
IN: 
0xf67f0870:  movzbl 0x18(%esp),%eax
0xf67f0875:  movl   $0x1,0x10(%esp)
0xf67f087d:  mov    %al,0x8(%esp)
0xf67f0881:  jmp    0xf67f047e

----------------
IN: 
0xf67f047e:  mov    -0x298(%esi),%eax
0xf67f0484:  test   $0x1,%ah
0xf67f0487:  je     0xf67f0493

----------------
IN: 
0xf67f0489:  orl    $0x4000,-0x26c(%esi)
0xf67f0493:  test   $0x80,%ah
0xf67f0496:  je     0xf67f04a2

----------------
IN: 
0xf67f0498:  orl    $0x8000,-0x26c(%esi)
0xf67f04a2:  cmpl   $0x6,-0x2a8(%esi)
0xf67f04a9:  jle    0xf67f04cc

----------------
IN: 
0xf67f04cc:  mov    -0x29c(%esi),%ebx
0xf67f04d2:  test   $0x8000000,%ebx
0xf67f04d8:  je     0xf67f04ed

----------------
IN: 
0xf67f04ed:  cmpb   $0x0,0x8(%esp)
0xf67f04f2:  jne    0xf67f0580

----------------
IN: 
0xf67f0580:  cmp    $0x3f,%ebp
0xf67f0583:  je     0xf67f0898

----------------
IN: 
0xf67f0589:  cmp    $0x3c,%ebp
0xf67f058c:  je     0xf67f08d0

----------------
IN: 
0xf67f0592:  cmp    $0x45,%ebp
0xf67f0595:  je     0xf67f05bf

----------------
IN: 
0xf67f0597:  cmp    $0x46,%ebp
0xf67f059a:  je     0xf67f05bf

----------------
IN: 
0xf67f059c:  cmp    $0x3d,%ebp
0xf67f059f:  jne    0xf67f0886

----------------
IN: 
0xf67f0886:  cmp    $0x47,%ebp
0xf67f0889:  je     0xf67f05bf

----------------
IN: 
0xf67f088f:  cmp    $0x56,%ebp
0xf67f0892:  jne    0xf67f04f8

----------------
IN: 
0xf67f04f8:  mov    0xc(%esp),%eax
0xf67f04fc:  test   %edi,%edi
0xf67f04fe:  mov    %ebp,-0x270(%esi)
0xf67f0504:  mov    %eax,-0x274(%esi)
0xf67f050a:  mov    0x10(%esp),%eax
0xf67f050e:  mov    %eax,-0x2ac(%esi)
0xf67f0514:  je     0xf67f0528

----------------
IN: 
0xf67f0516:  sub    $0xc,%esp
0xf67f0519:  push   %edi
0xf67f051a:  call   0xf67f2d50


call [pc: f67f051f, cc: f67f45fa]
----------------
IN: 
0xf67f2d50:  mov    0x4(%esp),%eax
0xf67f2d54:  mov    $0x3,%edx
0xf67f2d59:  and    %eax,%edx
0xf67f2d5b:  je     0xf67f2d81

----------------
IN: 
0xf67f2d5d:  jp     0xf67f2d76

----------------
IN: 
0xf67f2d76:  cmp    %dh,(%eax)
0xf67f2d78:  je     0xf67f2e06

----------------
IN: 
0xf67f2d7e:  inc    %eax
0xf67f2d7f:  xor    %edx,%edx
0xf67f2d81:  mov    (%eax),%ecx
0xf67f2d83:  add    $0x4,%eax
0xf67f2d86:  sub    %ecx,%edx
0xf67f2d88:  add    $0xfefefeff,%ecx
0xf67f2d8e:  dec    %edx
0xf67f2d8f:  jae    0xf67f2de9

----------------
IN: 
0xf67f2de9:  sub    $0x4,%eax
0xf67f2dec:  sub    $0xfefefeff,%ecx
0xf67f2df2:  cmp    $0x0,%cl
0xf67f2df5:  je     0xf67f2e06

----------------
IN: 
0xf67f2df7:  inc    %eax
0xf67f2df8:  test   %ch,%ch
0xf67f2dfa:  je     0xf67f2e06

----------------
IN: 
0xf67f2dfc:  shr    $0x10,%ecx
0xf67f2dff:  inc    %eax
0xf67f2e00:  cmp    $0x0,%cl
0xf67f2e03:  je     0xf67f2e06

----------------
IN: 
0xf67f2e05:  inc    %eax
0xf67f2e06:  sub    0x4(%esp),%eax
0xf67f2e0a:  ret    


ret [pc: f67f051f, cc: 000040e5]
----------------
IN: 
0xf67f051f:  add    $0x10,%esp
0xf67f0522:  mov    %eax,-0x2f4(%esi)
0xf67f0528:  sub    $0xc,%esp
0xf67f052b:  push   $0x0
0xf67f052d:  call   0xf67f1570


call [pc: f67f0532, cc: f67f45d7]
----------------
IN: 
0xf67f1570:  push   %edi
0xf67f1571:  push   %esi
0xf67f1572:  call   0xf67f360d


call [pc: f67f1577, cc: 000050a0]

ret [pc: f67f1577, cc: f67f45d7]
----------------
IN: 
0xf67f1577:  add    $0xca89,%esi
0xf67f157d:  push   %ebx
0xf67f157e:  mov    0x10(%esp),%edi
0xf67f1582:  mov    0x8e8(%esi),%ebx
0xf67f1588:  test   %ebx,%ebx
0xf67f158a:  je     0xf67f15c0

----------------
IN: 
0xf67f158c:  mov    0x8d8(%esi),%eax
0xf67f1592:  test   %eax,%eax
0xf67f1594:  jne    0xf67f15c0

----------------
IN: 
0xf67f1596:  cmp    $0x0,%edi
0xf67f1599:  je     0xf67f15b7

----------------
IN: 
0xf67f15b7:  mov    %ebx,%eax
0xf67f15b9:  pop    %ebx
0xf67f15ba:  pop    %esi
0xf67f15bb:  pop    %edi
0xf67f15bc:  ret    


ret [pc: f67f0532, cc: 000040e5]
----------------
IN: 
0xf67f0532:  lea    0x918(%esi),%edx
0xf67f0538:  add    $0x10,%esp
0xf67f053b:  cmp    %edx,%eax
0xf67f053d:  je     0xf67f06c3

----------------
IN: 
0xf67f0543:  mov    -0xc8(%esi),%eax
0xf67f0549:  test   %eax,%eax
0xf67f054b:  jne    0xf67f062f

----------------
IN: 
0xf67f0551:  pushl  -0x2b0(%esi)
0xf67f0557:  lea    0x50(%esp),%eax
0xf67f055b:  push   %eax
0xf67f055c:  pushl  0xc(%esp)
0xf67f0560:  pushl  0xc(%esp)
0xf67f0564:  call   *0x84(%esp)


call [pc: f67f056b, cc: f67f458e]
----------------
IN: 
0xf67db570:  push   %ebp
0xf67db571:  mov    $0x9,%edx
0xf67db576:  call   0xf67f3601


call [pc: f67db57b, cc: 0002f0f5]
----------------
IN: 
0xf67f3601:  mov    (%esp),%eax
0xf67f3604:  ret    


ret [pc: f67db57b, cc: f67f458e]
----------------
IN: 
0xf67db57b:  add    $0x22a85,%eax
0xf67db580:  mov    %esp,%ebp
0xf67db582:  push   %edi
0xf67db583:  push   %esi
0xf67db584:  push   %ebx
0xf67db585:  mov    %eax,%edi
0xf67db587:  sub    $0x9c,%esp
0xf67db58d:  mov    %eax,-0x4c(%ebp)
0xf67db590:  lea    -0x234f0(%eax),%eax
0xf67db596:  movl   $0x0,-0x50(%ebp)
0xf67db59d:  movl   $0x0,-0x58(%ebp)
0xf67db5a4:  mov    %eax,0x538(%edi)
0xf67db5aa:  lea    -0x19180(%edi),%eax
0xf67db5b0:  mov    %eax,0x84c(%edi)
0xf67db5b6:  lea    -0x234d0(%edi),%eax
0xf67db5bc:  mov    %eax,0x818(%edi)
0xf67db5c2:  lea    -0x234c0(%edi),%eax
0xf67db5c8:  mov    %eax,0x81c(%edi)
0xf67db5ce:  lea    -0x11840(%edi),%eax
0xf67db5d4:  mov    %eax,0x820(%edi)
0xf67db5da:  mov    0x8fc(%edi),%eax
0xf67db5e0:  mov    %eax,-0x30(%ebp)
0xf67db5e3:  mov    -0xc8(%edi),%eax
0xf67db5e9:  test   %eax,%eax
0xf67db5eb:  cmovne %edx,%eax
0xf67db5ee:  lea    -0xa9e0(%edi,%eax,1),%eax
0xf67db5f5:  mov    %eax,-0x144(%edi)
0xf67db5fb:  lea    -0x30(%ebp),%eax
0xf67db5fe:  mov    %eax,-0x68(%ebp)
0xf67db601:  mov    %edi,%eax
0xf67db603:  lea    -0x9701(%edi),%edi
0xf67db609:  lea    -0x9716(%eax),%eax
0xf67db60f:  mov    %edi,-0x5c(%ebp)
0xf67db612:  mov    %eax,-0x60(%ebp)
0xf67db615:  mov    -0x68(%ebp),%eax
0xf67db618:  call   0xf67f0d00


call [pc: f67db61d, cc: 0002f393]
----------------
IN: 
0xf67f0d00:  mov    (%eax),%ecx
0xf67f0d02:  mov    (%ecx),%edx
0xf67f0d04:  test   %edx,%edx
0xf67f0d06:  jne    0xf67f0d19

----------------
IN: 
0xf67f0d19:  cmpb   $0x4c,(%edx)
0xf67f0d1c:  jne    0xf67f0d10

----------------
IN: 
0xf67f0d10:  add    $0x4,%ecx
0xf67f0d13:  mov    (%ecx),%edx
0xf67f0d15:  test   %edx,%edx
0xf67f0d17:  je     0xf67f0d32

----------------
IN: 
0xf67f0d1e:  cmpb   $0x44,0x1(%edx)
0xf67f0d22:  jne    0xf67f0d10

----------------
IN: 
0xf67f0d32:  mov    %edx,%eax
0xf67f0d34:  ret    


ret [pc: f67db61d, cc: f67f458e]
----------------
IN: 
0xf67db61d:  test   %eax,%eax
0xf67db61f:  mov    %eax,%ebx
0xf67db621:  je     0xf67db663

----------------
IN: 
0xf67db663:  mov    -0x4c(%ebp),%eax
0xf67db666:  mov    -0xc8(%eax),%ecx
0xf67db66c:  test   %ecx,%ecx
0xf67db66e:  jne    0xf67dc70c

----------------
IN: 
0xf67db674:  mov    -0x4c(%ebp),%eax
0xf67db677:  mov    -0x380(%eax),%eax
0xf67db67d:  test   %eax,%eax
0xf67db67f:  je     0xf67db705

----------------
IN: 
0xf67db705:  mov    -0x4c(%ebp),%edi
0xf67db708:  mov    0x10(%ebp),%edx
0xf67db70b:  lea    -0x23540(%edi),%eax
0xf67db711:  cmp    %eax,(%edx)
0xf67db713:  jne    0xf67db936

----------------
IN: 
0xf67db936:  mov    -0x4c(%ebp),%eax
0xf67db939:  sub    $0x4,%esp
0xf67db93c:  xor    %ecx,%ecx
0xf67db93e:  push   $0x0
0xf67db940:  push   $0x20000000
0xf67db945:  push   $0x0
0xf67db947:  lea    -0x953a(%eax),%edx
0xf67db94d:  mov    %edx,%eax
0xf67db94f:  call   0xf67e49a0


call [pc: f67db954, cc: 0002fcda]
----------------
IN: 
0xf67e49a0:  push   %ebp
0xf67e49a1:  push   %edi
0xf67e49a2:  push   %esi
0xf67e49a3:  push   %ebx
0xf67e49a4:  call   0xf67f3609


call [pc: f67e49a9, cc: f67cb573]

ret [pc: f67e49a9, cc: 0002fcda]
----------------
IN: 
0xf67e49a9:  add    $0x19657,%ebx
0xf67e49af:  sub    $0x38,%esp
0xf67e49b2:  mov    %eax,0x1c(%esp)
0xf67e49b6:  mov    %edx,0x20(%esp)
0xf67e49ba:  mov    %ecx,0x24(%esp)
0xf67e49be:  mov    0x4c(%esp),%edi
0xf67e49c2:  push   %edx
0xf67e49c3:  call   0xf67f2d50


call [pc: f67e49c8, cc: f67cb512]
----------------
IN: 
0xf67f2d5f:  cmp    %dh,(%eax)
0xf67f2d61:  je     0xf67f2e06

----------------
IN: 
0xf67f2e06:  sub    0x4(%esp),%eax
0xf67f2e0a:  ret    


ret [pc: f67e49c8, cc: 0002fcda]
----------------
IN: 
0xf67e49c8:  mov    -0xf4(%ebx),%ebp
0xf67e49ce:  add    $0x10,%esp
0xf67e49d1:  mov    %eax,0x8(%esp)
0xf67e49d5:  add    $0x1,%eax
0xf67e49d8:  mov    %eax,0xc(%esp)
0xf67e49dc:  test   %ebp,%ebp
0xf67e49de:  je     0xf67e4bf0

----------------
IN: 
0xf67e4bf0:  mov    0x44(%esp),%eax
0xf67e4bf4:  and    $0x20000000,%eax
0xf67e4bf9:  cmp    $0x1,%eax
0xf67e4bfc:  sbb    %edx,%edx
0xf67e4bfe:  not    %edx
0xf67e4c00:  and    $0x80,%edx
0xf67e4c06:  test   %eax,%eax
0xf67e4c08:  mov    $0x10,%eax
0xf67e4c0d:  cmovne %eax,%ebp
0xf67e4c10:  jmp    0xf67e49eb

----------------
IN: 
0xf67e49eb:  sub    $0x8,%esp
0xf67e49ee:  push   $0x1
0xf67e49f0:  mov    0x14(%esp),%eax
0xf67e49f4:  mov    %edx,0x28(%esp)
0xf67e49f8:  lea    0x26d(%edx,%eax,1),%eax
0xf67e49ff:  push   %eax
0xf67e4a00:  call   0xf67da830


call [pc: f67e4a05, cc: f67cb6df]
----------------
IN: 
0xf67da830:  jmp    *0x14(%ebx)

----------------
IN: 
0xf67f0eb0:  push   %edi
0xf67f0eb1:  push   %esi
0xf67f0eb2:  push   %ebx
0xf67f0eb3:  mov    0x10(%esp),%esi
0xf67f0eb7:  mov    0x14(%esp),%ecx
0xf67f0ebb:  call   0xf67f3609


call [pc: f67f0ec0, cc: 0003b81f]

ret [pc: f67f0ec0, cc: f67cb6df]
----------------
IN: 
0xf67f0ec0:  add    $0xd140,%ebx
0xf67f0ec6:  mov    %esi,%eax
0xf67f0ec8:  mov    %esi,%edi
0xf67f0eca:  or     %ecx,%eax
0xf67f0ecc:  imul   %ecx,%edi
0xf67f0ecf:  cmp    $0xffff,%eax
0xf67f0ed4:  jbe    0xf67f0ef0

----------------
IN: 
0xf67f0ef0:  sub    $0xc,%esp
0xf67f0ef3:  push   %edi
0xf67f0ef4:  call   0xf67da820


call [pc: f67f0ef9, cc: 0003b826]
----------------
IN: 
0xf67da820:  jmp    *0x10(%ebx)

----------------
IN: 
0xf67f0e90:  push   %ebx
0xf67f0e91:  call   0xf67f3609


call [pc: f67f0e96, cc: f67cb6b0]

ret [pc: f67f0e96, cc: 0003b826]
----------------
IN: 
0xf67f0e96:  add    $0xd16a,%ebx
0xf67f0e9c:  sub    $0x10,%esp
0xf67f0e9f:  pushl  0x18(%esp)
0xf67f0ea3:  push   $0x8
0xf67f0ea5:  call   0xf67da810


call [pc: f67f0eaa, cc: f67cb68c]
----------------
IN: 
0xf67da810:  jmp    *0xc(%ebx)

----------------
IN: 
0xf67f0dc0:  push   %edi
0xf67f0dc1:  push   %esi
0xf67f0dc2:  push   %ebx
0xf67f0dc3:  mov    0x10(%esp),%ecx
0xf67f0dc7:  call   0xf67f3609


call [pc: f67f0dcc, cc: 0003bb40]

ret [pc: f67f0dcc, cc: f67cb68c]
----------------
IN: 
0xf67f0dcc:  add    $0xd234,%ebx
0xf67f0dd2:  mov    0x14(%esp),%edi
0xf67f0dd6:  mov    0x8e0(%ebx),%esi
0xf67f0ddc:  test   %esi,%esi
0xf67f0dde:  je     0xf67f0e60

----------------
IN: 
0xf67f0e60:  mov    -0x2f0(%ebx),%edx
0xf67f0e66:  lea    0x918(%ebx),%eax
0xf67f0e6c:  lea    -0x1(%edx,%eax,1),%esi
0xf67f0e70:  neg    %edx
0xf67f0e72:  and    %edx,%esi
0xf67f0e74:  mov    %esi,0x8e0(%ebx)
0xf67f0e7a:  jmp    0xf67f0dea

----------------
IN: 
0xf67f0dea:  lea    -0x1(%eax,%ecx,1),%edx
0xf67f0dee:  neg    %ecx
0xf67f0df0:  and    %ecx,%edx
0xf67f0df2:  lea    (%edx,%edi,1),%eax
0xf67f0df5:  mov    %edx,0x8e4(%ebx)
0xf67f0dfb:  cmp    %esi,%eax
0xf67f0dfd:  jae    0xf67f0e07

----------------
IN: 
0xf67f0dff:  mov    %edx,%ecx
0xf67f0e01:  neg    %ecx
0xf67f0e03:  cmp    %ecx,%edi
0xf67f0e05:  jb     0xf67f0e4e

----------------
IN: 
0xf67f0e4e:  mov    %edx,0x8dc(%ebx)
0xf67f0e54:  mov    %eax,0x8e4(%ebx)
0xf67f0e5a:  pop    %ebx
0xf67f0e5b:  mov    %edx,%eax
0xf67f0e5d:  pop    %esi
0xf67f0e5e:  pop    %edi
0xf67f0e5f:  ret    


ret [pc: f67f0eaa, cc: 0003b826]
----------------
IN: 
0xf67f0eaa:  add    $0x18,%esp
0xf67f0ead:  pop    %ebx
0xf67f0eae:  ret    


ret [pc: f67f0ef9, cc: f67cb6df]
----------------
IN: 
0xf67f0ef9:  add    $0x10,%esp
0xf67f0efc:  pop    %ebx
0xf67f0efd:  pop    %esi
0xf67f0efe:  pop    %edi
0xf67f0eff:  ret    


ret [pc: f67e4a05, cc: 0002fcda]
----------------
IN: 
0xf67e4a05:  add    $0x10,%esp
0xf67e4a08:  test   %eax,%eax
0xf67e4a0a:  mov    %eax,%esi
0xf67e4a0c:  je     0xf67e4d17

----------------
IN: 
0xf67e4a12:  mov    0x1c(%esp),%edx
0xf67e4a16:  mov    %eax,0x14(%esi)
0xf67e4a19:  sub    $0x4,%esp
0xf67e4a1c:  lea    0x25c(%eax,%edx,1),%edx
0xf67e4a23:  mov    %edx,0x164(%eax)
0xf67e4a29:  lea    0x4(%edx),%eax
0xf67e4a2c:  mov    %edx,0x20(%esp)
0xf67e4a30:  mov    %eax,0x1c(%esi)
0xf67e4a33:  lea    0x10(%edx),%eax
0xf67e4a36:  pushl  0x10(%esp)
0xf67e4a3a:  pushl  0x1c(%esp)
0xf67e4a3e:  push   %eax
0xf67e4a3f:  call   0xf67f34a0


call [pc: f67e4a44, cc: f67cb69e]
----------------
IN: 
0xf67f34a0:  mov    %edi,%eax
0xf67f34a2:  mov    0x4(%esp),%edi
0xf67f34a6:  mov    %esi,%edx
0xf67f34a8:  mov    0x8(%esp),%esi
0xf67f34ac:  mov    %edi,%ecx
0xf67f34ae:  xor    %esi,%ecx
0xf67f34b0:  and    $0x3,%ecx
0xf67f34b3:  mov    0xc(%esp),%ecx
0xf67f34b7:  cld    
0xf67f34b8:  jne    0xf67f34f6

----------------
IN: 
0xf67f34f6:  shr    %ecx
0xf67f34f8:  jae    0xf67f34fb

----------------
IN: 
0xf67f34fa:  movsb  %ds:(%esi),%es:(%edi)
0xf67f34fb:  shr    %ecx
0xf67f34fd:  jae    0xf67f3501

----------------
IN: 
0xf67f3501:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0xf67f3503:  jmp    0xf67f34ed

----------------
IN: 
0xf67f34ed:  mov    %eax,%edi
0xf67f34ef:  mov    %edx,%esi
0xf67f34f1:  mov    0x4(%esp),%eax
0xf67f34f5:  ret    


ret [pc: f67e4a44, cc: 0002fcda]
----------------
IN: 
0xf67e4a44:  mov    0x2c(%esp),%edx
0xf67e4a48:  mov    %eax,0x4(%edx)
0xf67e4a4b:  movl   $0x1,0xc(%edx)
0xf67e4a52:  mov    0x20(%esp),%edx
0xf67e4a56:  add    $0x10,%esp
0xf67e4a59:  add    0x8(%esp),%eax
0xf67e4a5d:  movzbl 0x194(%esi),%ecx
0xf67e4a64:  movzbl (%edx),%edx
0xf67e4a67:  test   %dl,%dl
0xf67e4a69:  cmovne 0x10(%esp),%eax
0xf67e4a6e:  and    $0xfffffffc,%ecx
0xf67e4a71:  mov    %eax,0x4(%esi)
0xf67e4a74:  movzbl 0x18(%esp),%eax
0xf67e4a79:  and    $0x3,%eax
0xf67e4a7c:  or     %ecx,%eax
0xf67e4a7e:  testb  $0x1,-0x2ff(%ebx)
0xf67e4a85:  mov    %al,0x194(%esi)
0xf67e4a8b:  je     0xf67e4c18

----------------
IN: 
0xf67e4c18:  movl   $0x1,0x1fc(%esi)
0xf67e4c22:  jmp    0xf67e4a91

----------------
IN: 
0xf67e4a91:  mov    0x48(%esp),%eax
0xf67e4a95:  mov    %edi,0x16c(%esi)
0xf67e4a9b:  mov    %eax,0x18(%esi)
0xf67e4a9e:  xor    %eax,%eax
0xf67e4aa0:  test   %ebp,%ebp
0xf67e4aa2:  je     0xf67e4ab6

----------------
IN: 
0xf67e4aa4:  lea    0x0(%esi),%esi
0xf67e4aa8:  mov    %esi,0x25c(%esi,%eax,8)
0xf67e4aaf:  add    $0x1,%eax
0xf67e4ab2:  cmp    %eax,%ebp
0xf67e4ab4:  jne    0xf67e4aa8

----------------
IN: 
0xf67e4aa8:  mov    %esi,0x25c(%esi,%eax,8)
0xf67e4aaf:  add    $0x1,%eax
0xf67e4ab2:  cmp    %eax,%ebp
0xf67e4ab4:  jne    0xf67e4aa8

----------------
IN: 
0xf67e4ab6:  lea    0x1b8(%esi),%eax
0xf67e4abc:  movl   $0x4,0x1c8(%esi)
0xf67e4ac6:  mov    %eax,0x1cc(%esi)
0xf67e4acc:  imul   $0x4c,0x48(%esp),%eax
0xf67e4ad1:  mov    0x20(%ebx,%eax,1),%eax
0xf67e4ad8:  test   %eax,%eax
0xf67e4ada:  je     0xf67e4cf0

----------------
IN: 
0xf67e4cf0:  test   %edi,%edi
0xf67e4cf2:  je     0xf67e4d28

----------------
IN: 
0xf67e4d28:  lea    0x15c(%esi),%edi
0xf67e4d2e:  mov    %edi,%ecx
0xf67e4d30:  jmp    0xf67e4b20

----------------
IN: 
0xf67e4b20:  xor    %eax,%eax
0xf67e4b22:  testb  $0x8,0x44(%esp)
0xf67e4b27:  jne    0xf67e4b2c

----------------
IN: 
0xf67e4b29:  shl    $0x2,%eax
0xf67e4b2c:  mov    %edi,0x1b8(%esi,%eax,1)
0xf67e4b33:  test   %dl,%dl
0xf67e4b35:  mov    %ecx,0x1d0(%esi)
0xf67e4b3b:  mov    %esi,%eax
0xf67e4b3d:  mov    %dl,0x8(%esp)
0xf67e4b41:  je     0xf67e4be5

----------------
IN: 
0xf67e4be5:  add    $0x2c,%esp
0xf67e4be8:  pop    %ebx
0xf67e4be9:  pop    %esi
0xf67e4bea:  pop    %edi
0xf67e4beb:  pop    %ebp
0xf67e4bec:  ret    $0xc


ret [pc: f67db954, cc: f67f458e]
----------------
IN: 
0xf67db954:  test   %eax,%eax
0xf67db956:  mov    %eax,%ebx
0xf67db958:  pop    %edi
0xf67db959:  je     0xf67de568

----------------
IN: 
0xf67db95f:  mov    0x8(%ebp),%eax
0xf67db962:  xor    %edx,%edx
0xf67db964:  mov    %eax,0x150(%ebx)
0xf67db96a:  movzwl 0xc(%ebp),%eax
0xf67db96e:  mov    %ax,0x158(%ebx)
0xf67db975:  mov    0x10(%ebp),%eax
0xf67db978:  mov    (%eax),%eax
0xf67db97a:  mov    %eax,0x154(%ebx)
0xf67db980:  mov    %ebx,%eax
0xf67db982:  call   0xf67e48f0


call [pc: f67db987, cc: 0002fc09]
----------------
IN: 
0xf67e48f0:  push   %ebp
0xf67e48f1:  push   %edi
0xf67e48f2:  mov    %eax,%edi
0xf67e48f4:  push   %esi
0xf67e48f5:  push   %ebx
0xf67e48f6:  call   0xf67f360d


call [pc: f67e48fb, cc: f67cb4f2]

ret [pc: f67e48fb, cc: 0002fc09]
----------------
IN: 
0xf67e48fb:  add    $0x19705,%esi
0xf67e4901:  sub    $0x28,%esp
0xf67e4904:  lea    0x4fc(%esi),%ebp
0xf67e490a:  mov    %edx,0x18(%esp)
0xf67e490e:  push   %ebp
0xf67e490f:  call   *0x818(%esi)


call [pc: f67e4915, cc: f67cb51c]
----------------
IN: 
0xf67dab30:  mov    0x4(%esp),%eax
0xf67dab34:  addl   $0x1,0x4(%eax)
0xf67dab38:  ret    


ret [pc: f67e4915, cc: 0002fc09]
----------------
IN: 
0xf67e4915:  mov    0x1c(%esp),%edx
0xf67e4919:  add    $0x10,%esp
0xf67e491c:  lea    0x20,%eax
0xf67e4922:  imul   $0x4c,%edx,%ecx
0xf67e4925:  lea    0x20(%esi,%ecx,1),%ecx
0xf67e492c:  mov    (%ecx),%ebx
0xf67e492e:  test   %ebx,%ebx
0xf67e4930:  jne    0xf67e493a

----------------
IN: 
0xf67e4932:  jmp    0xf67e4990

----------------
IN: 
0xf67e4990:  mov    %edi,(%ecx)
0xf67e4992:  jmp    0xf67e4947

----------------
IN: 
0xf67e4947:  imul   $0x4c,%edx,%edx
0xf67e494a:  mov    0x514(%esi),%ecx
0xf67e4950:  mov    0x518(%esi),%ebx
0xf67e4956:  add    %esi,%edx
0xf67e4958:  addl   $0x1,0x4(%eax,%edx,1)
0xf67e495d:  mov    %ecx,0x254(%edi)
0xf67e4963:  add    $0x1,%ecx
0xf67e4966:  mov    %ebx,0x258(%edi)
0xf67e496c:  adc    $0x0,%ebx
0xf67e496f:  sub    $0xc,%esp
0xf67e4972:  push   %ebp
0xf67e4973:  mov    %ebx,0x518(%esi)
0xf67e4979:  mov    %ecx,0x514(%esi)
0xf67e497f:  call   *0x81c(%esi)


call [pc: f67e4985, cc: f67cb58c]
----------------
IN: 
0xf67dab40:  mov    0x4(%esp),%eax
0xf67dab44:  subl   $0x1,0x4(%eax)
0xf67dab48:  ret    


ret [pc: f67e4985, cc: 0002fc09]
----------------
IN: 
0xf67e4985:  add    $0x2c,%esp
0xf67e4988:  pop    %ebx
0xf67e4989:  pop    %esi
0xf67e498a:  pop    %edi
0xf67e498b:  pop    %ebp
0xf67e498c:  ret    


ret [pc: f67db987, cc: f67f458e]
----------------
IN: 
0xf67db987:  mov    -0x4c(%ebp),%eax
0xf67db98a:  mov    0x20(%eax),%eax
0xf67db990:  cmp    %eax,%ebx
0xf67db992:  mov    %eax,-0x50(%ebp)
0xf67db995:  jne    0xf67de53d

----------------
IN: 
0xf67db99b:  xor    %esi,%esi
0xf67db99d:  mov    0xc(%ebp),%ebx
0xf67db9a0:  mov    -0x50(%ebp),%edx
0xf67db9a3:  shl    $0x5,%ebx
0xf67db9a6:  add    0x8(%ebp),%ebx
0xf67db9a9:  addl   $0x1,0x190(%edx)
0xf67db9b0:  cmp    %ebx,0x8(%ebp)
0xf67db9b3:  movl   $0x0,0x1b0(%edx)
0xf67db9bd:  movl   $0x0,0x1b4(%edx)
0xf67db9c7:  movl   $0xffffffff,0x1ac(%edx)
0xf67db9d1:  jae    0xf67de523

----------------
IN: 
0xf67db9d7:  mov    -0x4c(%ebp),%ecx
0xf67db9da:  mov    -0x2f0(%ecx),%eax
0xf67db9e0:  lea    0x884(%ecx),%edi
0xf67db9e6:  lea    0x878(%ecx),%ecx
0xf67db9ec:  mov    %ecx,-0x70(%ebp)
0xf67db9ef:  mov    %esi,%ecx
0xf67db9f1:  mov    %edi,-0x78(%ebp)
0xf67db9f4:  mov    %eax,-0x5c(%ebp)
0xf67db9f7:  neg    %eax
0xf67db9f9:  movb   $0x0,-0x5c(%ebp)
0xf67db9fd:  mov    %eax,-0x6c(%ebp)
0xf67dba00:  mov    %cl,-0x60(%ebp)
0xf67dba03:  mov    %ebx,%edi
0xf67dba05:  mov    0x8(%ebp),%eax
0xf67dba08:  jmp    0xf67dba30

----------------
IN: 
0xf67dba30:  mov    (%eax),%ecx
0xf67dba32:  cmp    $0x6,%ecx
0xf67dba35:  je     0xf67dc1e4

----------------
IN: 
0xf67dc1e4:  mov    0x8(%ebp),%ecx
0xf67dc1e7:  sub    0x8(%eax),%ecx
0xf67dc1ea:  mov    %ecx,(%edx)
0xf67dc1ec:  jmp    0xf67dba25

----------------
IN: 
0xf67dba25:  add    $0x20,%eax
0xf67dba28:  cmp    %edi,%eax
0xf67dba2a:  jae    0xf67dbab6

----------------
IN: 
0xf67dba3b:  jbe    0xf67dba0a

----------------
IN: 
0xf67dba0a:  cmp    $0x2,%ecx
0xf67dba0d:  je     0xf67dc320

----------------
IN: 
0xf67dba13:  cmp    $0x3,%ecx
0xf67dba16:  je     0xf67dc2a5

----------------
IN: 
0xf67dc2a5:  mov    -0x4c(%ebp),%ebx
0xf67dc2a8:  mov    -0x78(%ebp),%esi
0xf67dc2ab:  mov    (%edx),%ecx
0xf67dc2ad:  add    0x8(%eax),%ecx
0xf67dc2b0:  movb   $0x1,-0x5c(%ebp)
0xf67dc2b4:  mov    %esi,0x558(%ebx)
0xf67dc2ba:  mov    0x544(%ebx),%esi
0xf67dc2c0:  mov    %ecx,0x884(%ebx)
0xf67dc2c6:  test   %esi,%esi
0xf67dc2c8:  jne    0xf67dba25

----------------
IN: 
0xf67dba1c:  cmp    $0x1,%ecx
0xf67dba1f:  je     0xf67dc255

----------------
IN: 
0xf67dc255:  mov    (%edx),%ecx
0xf67dc257:  mov    -0x6c(%ebp),%ebx
0xf67dc25a:  mov    %ecx,%esi
0xf67dc25c:  mov    0x8(%eax),%ecx
0xf67dc25f:  and    %ecx,%ebx
0xf67dc261:  add    %esi,%ebx
0xf67dc263:  cmp    0x1ac(%edx),%ebx
0xf67dc269:  jae    0xf67dc271

----------------
IN: 
0xf67dc26b:  mov    %ebx,0x1ac(%edx)
0xf67dc271:  add    0x14(%eax),%ecx
0xf67dc274:  add    %esi,%ecx
0xf67dc276:  cmp    0x1b0(%edx),%ecx
0xf67dc27c:  jbe    0xf67dc284

----------------
IN: 
0xf67dc27e:  mov    %ecx,0x1b0(%edx)
0xf67dc284:  testb  $0x1,0x18(%eax)
0xf67dc288:  je     0xf67dba25

----------------
IN: 
0xf67dc28e:  cmp    0x1b4(%edx),%ecx
0xf67dc294:  jbe    0xf67dba25

----------------
IN: 
0xf67dc29a:  mov    %ecx,0x1b4(%edx)
0xf67dc2a0:  jmp    0xf67dba25

----------------
IN: 
0xf67dc271:  add    0x14(%eax),%ecx
0xf67dc274:  add    %esi,%ecx
0xf67dc276:  cmp    0x1b0(%edx),%ecx
0xf67dc27c:  jbe    0xf67dc284

----------------
IN: 
0xf67dc320:  mov    (%edx),%ecx
0xf67dc322:  add    0x8(%eax),%ecx
0xf67dc325:  mov    %ecx,0x8(%edx)
0xf67dc328:  jmp    0xf67dba25

----------------
IN: 
0xf67dba3d:  cmp    $0x6474e551,%ecx
0xf67dba43:  je     0xf67dc208

----------------
IN: 
0xf67dba49:  cmp    $0x6474e552,%ecx
0xf67dba4f:  je     0xf67dc1f1

----------------
IN: 
0xf67dba55:  cmp    $0x7,%ecx
0xf67dba58:  jne    0xf67dba25

----------------
IN: 
0xf67dc208:  mov    0x18(%eax),%ecx
0xf67dc20b:  mov    -0x4c(%ebp),%esi
0xf67dc20e:  mov    %ecx,0x824(%esi)
0xf67dc214:  jmp    0xf67dba25

----------------
IN: 
0xf67dc1f1:  mov    0x8(%eax),%ecx
0xf67dc1f4:  mov    %ecx,0x24c(%edx)
0xf67dc1fa:  mov    0x14(%eax),%ecx
0xf67dc1fd:  mov    %ecx,0x250(%edx)
0xf67dc203:  jmp    0xf67dba25

----------------
IN: 
0xf67dbab6:  mov    -0x50(%ebp),%eax
0xf67dbab9:  movzbl -0x60(%ebp),%esi
0xf67dbabd:  mov    0x22c(%eax),%eax
0xf67dbac3:  test   %eax,%eax
0xf67dbac5:  je     0xf67de4ed

----------------
IN: 
0xf67de4ed:  mov    -0x50(%ebp),%eax
0xf67de4f0:  mov    0x1b0(%eax),%ecx
0xf67de4f6:  mov    0x1b4(%eax),%edx
0xf67de4fc:  jmp    0xf67dbae5

----------------
IN: 
0xf67dbae5:  test   %ecx,%ecx
0xf67dbae7:  jne    0xf67dbaf6

----------------
IN: 
0xf67dbaf6:  test   %edx,%edx
0xf67dbaf8:  jne    0xf67dbb07

----------------
IN: 
0xf67dbb07:  mov    -0x4c(%ebp),%eax
0xf67dbb0a:  mov    0x558(%eax),%ebx
0xf67dbb10:  test   %ebx,%ebx
0xf67dbb12:  je     0xf67de4ca

----------------
IN: 
0xf67dbb18:  mov    -0x4c(%ebp),%ecx
0xf67dbb1b:  mov    0x594(%ecx),%eax
0xf67dbb21:  test   %eax,%eax
0xf67dbb23:  je     0xf67dbb85

----------------
IN: 
0xf67dbb25:  mov    0x4(%eax),%edi
0xf67dbb28:  mov    0x570(%ecx),%eax
0xf67dbb2e:  sub    $0x8,%esp
0xf67dbb31:  mov    0x558(%ecx),%edx
0xf67dbb37:  mov    %ecx,%ebx
0xf67dbb39:  add    0x4(%eax),%edi
0xf67dbb3c:  push   %edi
0xf67dbb3d:  pushl  (%edx)
0xf67dbb3f:  mov    %edx,-0x60(%ebp)
0xf67dbb42:  mov    %ecx,-0x4c(%ebp)
0xf67dbb45:  call   0xf67f2cd0


call [pc: f67dbb4a, cc: 0002fec4]
----------------
IN: 
0xf67f2cd0:  mov    0x4(%esp),%ecx
0xf67f2cd4:  mov    0x8(%esp),%edx
0xf67f2cd8:  mov    (%ecx),%al
0xf67f2cda:  cmp    (%edx),%al
0xf67f2cdc:  jne    0xf67f2ce7

----------------
IN: 
0xf67f2ce7:  mov    $0x1,%eax
0xf67f2cec:  mov    $0xffffffff,%ecx
0xf67f2cf1:  cmovb  %ecx,%eax
0xf67f2cf4:  ret    


ret [pc: f67dbb4a, cc: f67f458e]
----------------
IN: 
0xf67dbb4a:  add    $0x10,%esp
0xf67dbb4d:  test   %eax,%eax
0xf67dbb4f:  je     0xf67dbb85

----------------
IN: 
0xf67dbb51:  mov    -0x60(%ebp),%edx
0xf67dbb54:  movl   $0x0,0x860(%ebx)
0xf67dbb5e:  mov    %edi,0x85c(%ebx)
0xf67dbb64:  movl   $0x1,0x864(%ebx)
0xf67dbb6e:  mov    0x4(%edx),%ecx
0xf67dbb71:  test   %ecx,%ecx
0xf67dbb73:  jne    0xf67de40e

----------------
IN: 
0xf67dbb79:  mov    -0x4c(%ebp),%eax
0xf67dbb7c:  lea    0x85c(%eax),%eax
0xf67dbb82:  mov    %eax,0x4(%edx)
0xf67dbb85:  mov    -0x4c(%ebp),%eax
0xf67dbb88:  testb  $0x4,0x6d0(%eax)
0xf67dbb8f:  je     0xf67de3ed

----------------
IN: 
0xf67dbb95:  mov    %esi,%eax
0xf67dbb97:  test   %al,%al
0xf67dbb99:  jne    0xf67dbd64

----------------
IN: 
0xf67dbb9f:  mov    -0x50(%ebp),%eax
0xf67dbba2:  mov    0x8(%eax),%edx
0xf67dbba5:  test   %edx,%edx
0xf67dbba7:  je     0xf67dbd5c

----------------
IN: 
0xf67dbbad:  lea    0x20(%eax),%ebx
0xf67dbbb0:  mov    (%edx),%eax
0xf67dbbb2:  mov    $0x6fffffff,%edi
0xf67dbbb7:  mov    $0x6ffffdff,%esi
0xf67dbbbc:  test   %eax,%eax
0xf67dbbbe:  jne    0xf67dbbdd

----------------
IN: 
0xf67dbbdd:  cmp    $0x21,%eax
0xf67dbbe0:  jbe    0xf67dbbd1

----------------
IN: 
0xf67dbbd1:  mov    %edx,(%ebx,%eax,4)
0xf67dbbd4:  add    $0x8,%edx
0xf67dbbd7:  mov    (%edx),%eax
0xf67dbbd9:  test   %eax,%eax
0xf67dbbdb:  je     0xf67dbc0b

----------------
IN: 
0xf67dbbe2:  mov    %edi,%ecx
0xf67dbbe4:  sub    %eax,%ecx
0xf67dbbe6:  cmp    $0xf,%ecx
0xf67dbbe9:  jbe    0xf67dbbc8

----------------
IN: 
0xf67dbbeb:  lea    (%eax,%eax,1),%ecx
0xf67dbbee:  sar    %ecx
0xf67dbbf0:  cmp    $0xfffffffc,%ecx
0xf67dbbf3:  jbe    0xf67dc5e0

----------------
IN: 
0xf67dc5e0:  mov    %esi,%ecx
0xf67dc5e2:  sub    %eax,%ecx
0xf67dc5e4:  cmp    $0xb,%ecx
0xf67dc5e7:  ja     0xf67dc640

----------------
IN: 
0xf67dc640:  mov    $0x6ffffeff,%ecx
0xf67dc645:  sub    %eax,%ecx
0xf67dc647:  cmp    $0xa,%ecx
0xf67dc64a:  ja     0xf67dbbd4

----------------
IN: 
0xf67dc650:  neg    %eax
0xf67dc652:  mov    %edx,-0x40000300(%ebx,%eax,4)
0xf67dc659:  jmp    0xf67dbbd4

----------------
IN: 
0xf67dbbd4:  add    $0x8,%edx
0xf67dbbd7:  mov    (%edx),%eax
0xf67dbbd9:  test   %eax,%eax
0xf67dbbdb:  je     0xf67dbc0b

----------------
IN: 
0xf67dbbc8:  mov    $0x70000021,%ecx
0xf67dbbcd:  sub    %eax,%ecx
0xf67dbbcf:  mov    %ecx,%eax
0xf67dbbd1:  mov    %edx,(%ebx,%eax,4)
0xf67dbbd4:  add    $0x8,%edx
0xf67dbbd7:  mov    (%edx),%eax
0xf67dbbd9:  test   %eax,%eax
0xf67dbbdb:  je     0xf67dbc0b

----------------
IN: 
0xf67dbc0b:  mov    -0x50(%ebp),%eax
0xf67dbc0e:  mov    (%eax),%eax
0xf67dbc10:  test   %eax,%eax
0xf67dbc12:  je     0xf67dbc8f

----------------
IN: 
0xf67dbc8f:  mov    -0x50(%ebp),%eax
0xf67dbc92:  mov    0x70(%eax),%eax
0xf67dbc95:  test   %eax,%eax
0xf67dbc97:  je     0xf67dbcaa

----------------
IN: 
0xf67dbc99:  mov    0x4(%eax),%eax
0xf67dbc9c:  cmp    $0x11,%eax
0xf67dbc9f:  je     0xf67dbcaa

----------------
IN: 
0xf67dbcaa:  mov    -0x50(%ebp),%eax
0xf67dbcad:  mov    0x3c(%eax),%edi
0xf67dbcb0:  test   %edi,%edi
0xf67dbcb2:  je     0xf67dbcc1

----------------
IN: 
0xf67dbcc1:  mov    -0x50(%ebp),%eax
0xf67dbcc4:  mov    0x64(%eax),%esi
0xf67dbcc7:  test   %esi,%esi
0xf67dbcc9:  je     0xf67dbcd8

----------------
IN: 
0xf67dbccb:  mov    0x6c(%eax),%eax
0xf67dbcce:  cmpl   $0x8,0x4(%eax)
0xf67dbcd2:  jne    0xf67de351

----------------
IN: 
0xf67dbcd8:  mov    -0x50(%ebp),%ecx
0xf67dbcdb:  mov    0x98(%ecx),%eax
0xf67dbce1:  test   %eax,%eax
0xf67dbce3:  je     0xf67dbd0f

----------------
IN: 
0xf67dbd0f:  mov    -0x50(%ebp),%esi
0xf67dbd12:  mov    0xb8(%esi),%eax
0xf67dbd18:  test   %eax,%eax
0xf67dbd1a:  je     0xf67dbd48

----------------
IN: 
0xf67dbd48:  mov    -0x50(%ebp),%eax
0xf67dbd4b:  mov    0x94(%eax),%ebx
0xf67dbd51:  test   %ebx,%ebx
0xf67dbd53:  je     0xf67dbd5c

----------------
IN: 
0xf67dbd5c:  mov    -0x50(%ebp),%eax
0xf67dbd5f:  call   0xf67e4830


call [pc: f67dbd64, cc: 0002f8ea]

call [pc: f67e4839, cc: f67cb0d3]

ret [pc: f67e4839, cc: 0002f8ea]

ret [pc: f67dbd64, cc: f67f458e]
----------------
IN: 
0xf67dbd64:  cmpl   $0x2,-0x58(%ebp)
0xf67dbd68:  je     0xf67de42d

----------------
IN: 
0xf67dbd6e:  mov    -0x4c(%ebp),%eax
0xf67dbd71:  mov    -0x130(%eax),%eax
0xf67dbd77:  test   %eax,%eax
0xf67dbd79:  je     0xf67de3d3

----------------
IN: 
0xf67de3d3:  mov    -0x4c(%ebp),%eax
0xf67de3d6:  lea    0x548(%eax),%edx
0xf67de3dc:  lea    0x53c(%eax),%eax
0xf67de3e2:  mov    %edx,-0x7c(%ebp)
0xf67de3e5:  mov    %eax,-0x5c(%ebp)
0xf67de3e8:  jmp    0xf67dc187

----------------
IN: 
0xf67dc187:  call   0xf67f0b20


call [pc: f67dc18c, cc: 00028402]
----------------
IN: 
0xf67f0b20:  push   %ebp
0xf67f0b21:  push   %edi
0xf67f0b22:  push   %esi
0xf67f0b23:  push   %ebx
0xf67f0b24:  call   0xf67f3601


call [pc: f67f0b29, cc: f67d8f2b]

ret [pc: f67f0b29, cc: 00028402]
----------------
IN: 
0xf67f0b29:  add    $0xd4d7,%eax
0xf67f0b2e:  sub    $0x1fc,%esp
0xf67f0b34:  mov    %eax,%edi
0xf67f0b36:  mov    %eax,0x1c(%esp)
0xf67f0b3a:  mov    -0x12c(%eax),%eax
0xf67f0b40:  test   %eax,%eax
0xf67f0b42:  mov    %eax,0x14(%esp)
0xf67f0b46:  je     0xf67f0c08

----------------
IN: 
0xf67f0c08:  sub    $0xc,%esp
0xf67f0c0b:  lea    0x76(%esp),%eax
0xf67f0c0f:  push   %eax
0xf67f0c10:  call   0xf67f2910


call [pc: f67f0c15, cc: f67d8817]
----------------
IN: 
0xf67f2910:  mov    %ebx,%edx
0xf67f2912:  mov    0x4(%esp),%ebx
0xf67f2916:  mov    $0x7a,%eax
0xf67f291b:  int    $0x80

----------------
IN: 
0xf67f291d:  mov    %edx,%ebx
0xf67f291f:  cmp    $0xfffff001,%eax
0xf67f2924:  jae    0xf67f1de0

----------------
IN: 
0xf67f292a:  ret    


ret [pc: f67f0c15, cc: 00028402]
----------------
IN: 
0xf67f0c15:  add    $0x10,%esp
0xf67f0c18:  test   %eax,%eax
0xf67f0c1a:  lea    0xec(%esp),%ebx
0xf67f0c21:  jne    0xf67f0c9d

----------------
IN: 
0xf67f0c23:  xor    %edi,%edi
0xf67f0c25:  xor    %eax,%eax
0xf67f0c27:  movsbl (%ebx),%ecx
0xf67f0c2a:  lea    -0x30(%ecx),%edx
0xf67f0c2d:  cmp    $0x9,%dl
0xf67f0c30:  ja     0xf67f0c86

----------------
IN: 
0xf67f0c32:  movsbl 0x1(%ebx),%edx
0xf67f0c36:  lea    0x1(%ebx),%esi
0xf67f0c39:  sub    $0x30,%ecx
0xf67f0c3c:  lea    -0x30(%edx),%ebx
0xf67f0c3f:  cmp    $0x9,%bl
0xf67f0c42:  ja     0xf67f0c5d

----------------
IN: 
0xf67f0c5d:  shl    $0x8,%eax
0xf67f0c60:  add    $0x1,%edi
0xf67f0c63:  lea    0x1(%esi),%ebx
0xf67f0c66:  or     %ecx,%eax
0xf67f0c68:  cmp    $0x2e,%dl
0xf67f0c6b:  jne    0xf67f0c7d

----------------
IN: 
0xf67f0c6d:  cmp    $0x3,%edi
0xf67f0c70:  jne    0xf67f0c27

----------------
IN: 
0xf67f0c27:  movsbl (%ebx),%ecx
0xf67f0c2a:  lea    -0x30(%ecx),%edx
0xf67f0c2d:  cmp    $0x9,%dl
0xf67f0c30:  ja     0xf67f0c86

----------------
IN: 
0xf67f0c7d:  cmp    $0x3,%edi
0xf67f0c80:  je     0xf67f0be6

----------------
IN: 
0xf67f0be6:  add    $0x1fc,%esp
0xf67f0bec:  pop    %ebx
0xf67f0bed:  pop    %esi
0xf67f0bee:  pop    %edi
0xf67f0bef:  pop    %ebp
0xf67f0bf0:  ret    


ret [pc: f67dc18c, cc: f67f458e]
----------------
IN: 
0xf67dc18c:  test   %eax,%eax
0xf67dc18e:  js     0xf67de24a

----------------
IN: 
0xf67dc194:  mov    -0x4c(%ebp),%esi
0xf67dc197:  mov    -0x2fc(%esi),%edx
0xf67dc19d:  test   %edx,%edx
0xf67dc19f:  jne    0xf67dcbec

----------------
IN: 
0xf67dc1a5:  mov    -0x4c(%ebp),%esi
0xf67dc1a8:  mov    %eax,-0x2fc(%esi)
0xf67dc1ae:  cmp    $0x2061f,%eax
0xf67dc1b3:  jg     0xf67dc92a

----------------
IN: 
0xf67dc92a:  mov    -0x4c(%ebp),%edi
0xf67dc92d:  mov    -0x374(%edi),%eax
0xf67dc933:  call   0xf67e1cb0


call [pc: f67dc938, cc: 00028cb6]
----------------
IN: 
0xf67e1cb0:  push   %ebp
0xf67e1cb1:  mov    %esp,%ebp
0xf67e1cb3:  push   %edi
0xf67e1cb4:  push   %esi
0xf67e1cb5:  push   %ebx
0xf67e1cb6:  call   0xf67f3609


call [pc: f67e1cbb, cc: f67c900d]

ret [pc: f67e1cbb, cc: 00028cb6]
----------------
IN: 
0xf67e1cbb:  add    $0x1c345,%ebx
0xf67e1cc1:  sub    $0x38,%esp
0xf67e1cc4:  mov    %eax,-0x34(%ebp)
0xf67e1cc7:  lea    -0xe8(%ebx),%eax
0xf67e1ccd:  mov    -0x2f4(%ebx),%edx
0xf67e1cd3:  lea    -0xe4(%ebx),%ecx
0xf67e1cd9:  push   %eax
0xf67e1cda:  mov    -0x2f8(%ebx),%eax
0xf67e1ce0:  call   0xf67e7f10


call [pc: f67e1ce5, cc: f67c9053]
----------------
IN: 
0xf67e7f10:  push   %ebp
0xf67e7f11:  mov    %esp,%ebp
0xf67e7f13:  push   %edi
0xf67e7f14:  push   %esi
0xf67e7f15:  call   0xf67f3611


call [pc: f67e7f1a, cc: 0002ef49]
----------------
IN: 
0xf67f3611:  mov    (%esp),%edi
0xf67f3614:  ret    


ret [pc: f67e7f1a, cc: f67c9053]
----------------
IN: 
0xf67e7f1a:  add    $0x160e6,%edi
0xf67e7f20:  push   %ebx
0xf67e7f21:  mov    %eax,%esi
0xf67e7f23:  sub    $0x5c,%esp
0xf67e7f26:  mov    %eax,-0x4c(%ebp)
0xf67e7f29:  mov    -0x2c0(%edi),%eax
0xf67e7f2f:  and    -0x2b8(%edi),%eax
0xf67e7f35:  mov    %edi,-0x24(%ebp)
0xf67e7f38:  mov    %edx,-0x50(%ebp)
0xf67e7f3b:  mov    %ecx,-0x48(%ebp)
0xf67e7f3e:  mov    %eax,-0x30(%ebp)
0xf67e7f41:  mov    -0x2bc(%edi),%eax
0xf67e7f47:  and    -0x2b4(%edi),%eax
0xf67e7f4d:  mov    %eax,-0x2c(%ebp)
0xf67e7f50:  mov    -0x2c(%ebp),%edi
0xf67e7f53:  xor    %eax,%eax
0xf67e7f55:  test   %esi,%esi
0xf67e7f57:  mov    -0x30(%ebp),%esi
0xf67e7f5a:  setne  %al
0xf67e7f5d:  mov    %edi,%edx
0xf67e7f5f:  mov    %eax,-0x44(%ebp)
0xf67e7f62:  or     %esi,%edx
0xf67e7f64:  je     0xf67e7fb9

----------------
IN: 
0xf67e7f66:  xor    %ecx,%ecx
0xf67e7f68:  mov    %eax,%ebx
0xf67e7f6a:  lea    0x0(%esi),%esi
0xf67e7f70:  mov    %edi,%edx
0xf67e7f72:  mov    %esi,%eax
0xf67e7f74:  shrd   %cl,%edx,%eax
0xf67e7f77:  shr    %cl,%edx
0xf67e7f79:  test   $0x20,%cl
0xf67e7f7c:  je     0xf67e7f80

----------------
IN: 
0xf67e7f80:  and    $0x1,%eax
0xf67e7f83:  mov    $0xffffffff,%edx
0xf67e7f88:  cmp    $0x1,%eax
0xf67e7f8b:  mov    $0xffffffff,%eax
0xf67e7f90:  sbb    $0xffffffff,%ebx
0xf67e7f93:  add    $0x1,%ecx
0xf67e7f96:  shl    %cl,%eax
0xf67e7f98:  test   $0x20,%cl
0xf67e7f9b:  je     0xf67e7fa1

----------------
IN: 
0xf67e7fa1:  mov    %edx,-0x1c(%ebp)
0xf67e7fa4:  mov    %eax,%edx
0xf67e7fa6:  mov    %eax,-0x20(%ebp)
0xf67e7fa9:  and    %esi,%edx
0xf67e7fab:  mov    %edx,%eax
0xf67e7fad:  mov    -0x1c(%ebp),%edx
0xf67e7fb0:  and    %edi,%edx
0xf67e7fb2:  or     %eax,%edx
0xf67e7fb4:  jne    0xf67e7f70

----------------
IN: 
0xf67e7f70:  mov    %edi,%edx
0xf67e7f72:  mov    %esi,%eax
0xf67e7f74:  shrd   %cl,%edx,%eax
0xf67e7f77:  shr    %cl,%edx
0xf67e7f79:  test   $0x20,%cl
0xf67e7f7c:  je     0xf67e7f80

----------------
IN: 
0xf67e7fb6:  mov    %ebx,-0x44(%ebp)
0xf67e7fb9:  mov    -0x24(%ebp),%edi
0xf67e7fbc:  mov    -0x12c(%edi),%eax
0xf67e7fc2:  test   %eax,%eax
0xf67e7fc4:  mov    %eax,-0x40(%ebp)
0xf67e7fc7:  je     0xf67e8230

----------------
IN: 
0xf67e8230:  mov    -0x24(%ebp),%eax
0xf67e8233:  sub    $0x8,%esp
0xf67e8236:  push   $0x0
0xf67e8238:  lea    -0x903b(%eax),%eax
0xf67e823e:  push   %eax
0xf67e823f:  call   0xf67f27c0


call [pc: f67e8244, cc: 00021217]
----------------
IN: 
0xf67f27c0:  mov    %ebx,%edx
0xf67f27c2:  mov    0x8(%esp),%ecx
0xf67f27c6:  mov    0x4(%esp),%ebx
0xf67f27ca:  mov    $0x21,%eax
0xf67f27cf:  int    $0x80

----------------
IN: 
0xf67f27d1:  mov    %edx,%ebx
0xf67f27d3:  cmp    $0xfffff001,%eax
0xf67f27d8:  jae    0xf67f1de0

----------------
IN: 
0xf67f1de0:  call   0xf67f3605


call [pc: f67f1de5, cc: f67d0ff2]

ret [pc: f67f1de5, cc: 00021217]
----------------
IN: 
0xf67f1de5:  add    $0xc21b,%edx
0xf67f1deb:  neg    %eax
0xf67f1ded:  mov    %eax,0x900(%edx)
0xf67f1df3:  mov    $0xffffffff,%eax
0xf67f1df8:  ret    


ret [pc: f67e8244, cc: f67c9053]
----------------
IN: 
0xf67e8244:  add    $0x10,%esp
0xf67e8247:  test   %eax,%eax
0xf67e8249:  jne    0xf67e85e0

----------------
IN: 
0xf67e85e0:  mov    -0x44(%ebp),%eax
0xf67e85e3:  mov    $0x1,%edx
0xf67e85e8:  xor    %esi,%esi
0xf67e85ea:  add    $0x1,%eax
0xf67e85ed:  mov    %eax,-0x54(%ebp)
0xf67e85f0:  lea    0x1e(,%eax,8),%eax
0xf67e85f7:  and    $0xfffffff0,%eax
0xf67e85fa:  sub    %eax,%esp
0xf67e85fc:  lea    0xf(%esp),%eax
0xf67e8600:  and    $0xfffffff0,%eax
0xf67e8603:  mov    %eax,-0x38(%ebp)
0xf67e8606:  xor    %eax,%eax
0xf67e8608:  jmp    0xf67e815c

----------------
IN: 
0xf67e815c:  mov    -0x2c(%ebp),%ebx
0xf67e815f:  mov    -0x30(%ebp),%ecx
0xf67e8162:  mov    %ebx,%edi
0xf67e8164:  or     %ecx,%edi
0xf67e8166:  je     0xf67e8296

----------------
IN: 
0xf67e816c:  mov    -0x24(%ebp),%eax
0xf67e816f:  xor    %ebx,%ebx
0xf67e8171:  lea    -0x300(%eax),%eax
0xf67e8177:  mov    %eax,-0x28(%ebp)
0xf67e817a:  lea    0x0(%esi),%esi
0xf67e8180:  mov    -0x2c(%ebp),%edx
0xf67e8183:  mov    -0x30(%ebp),%eax
0xf67e8186:  mov    %ebx,%ecx
0xf67e8188:  shrd   %cl,%edx,%eax
0xf67e818b:  shr    %cl,%edx
0xf67e818d:  test   $0x20,%bl
0xf67e8190:  cmovne %edx,%eax
0xf67e8193:  and    $0x1,%eax
0xf67e8196:  test   %eax,%eax
0xf67e8198:  je     0xf67e8288

----------------
IN: 
0xf67e8288:  add    $0x1,%ebx
0xf67e828b:  jmp    0xf67e8180

----------------
IN: 
0xf67e8180:  mov    -0x2c(%ebp),%edx
0xf67e8183:  mov    -0x30(%ebp),%eax
0xf67e8186:  mov    %ebx,%ecx
0xf67e8188:  shrd   %cl,%edx,%eax
0xf67e818b:  shr    %cl,%edx
0xf67e818d:  test   $0x20,%bl
0xf67e8190:  cmovne %edx,%eax
0xf67e8193:  and    $0x1,%eax
0xf67e8196:  test   %eax,%eax
0xf67e8198:  je     0xf67e8288

----------------
IN: 
0xf67e819e:  mov    -0x28(%ebp),%ecx
0xf67e81a1:  mov    -0x38(%ebp),%edi
0xf67e81a4:  sub    $0xc,%esp
0xf67e81a7:  lea    0x98(%ecx,%ebx,8),%eax
0xf67e81ae:  lea    (%edi,%esi,8),%edi
0xf67e81b1:  mov    %eax,(%edi)
0xf67e81b3:  push   %eax
0xf67e81b4:  call   0xf67f2d50


call [pc: f67e81b9, cc: 000211ea]
----------------
IN: 
0xf67f2d81:  mov    (%eax),%ecx
0xf67f2d83:  add    $0x4,%eax
0xf67f2d86:  sub    %ecx,%edx
0xf67f2d88:  add    $0xfefefeff,%ecx
0xf67f2d8e:  dec    %edx
0xf67f2d8f:  jae    0xf67f2de9

----------------
IN: 
0xf67f2d91:  xor    %ecx,%edx
0xf67f2d93:  and    $0x1010100,%edx
0xf67f2d99:  jne    0xf67f2de9

----------------
IN: 
0xf67f2d9b:  mov    (%eax),%ecx
0xf67f2d9d:  add    $0x4,%eax
0xf67f2da0:  sub    %ecx,%edx
0xf67f2da2:  add    $0xfefefeff,%ecx
0xf67f2da8:  dec    %edx
0xf67f2da9:  jae    0xf67f2de9


ret [pc: f67e81b9, cc: f67c9053]
----------------
IN: 
0xf67e81b9:  mov    %eax,0x4(%edi)
0xf67e81bc:  xor    %edx,%edx
0xf67e81be:  xor    %eax,%eax
0xf67e81c0:  add    $0x10,%esp
0xf67e81c3:  test   $0x20,%bl
0xf67e81c6:  mov    %ebx,%ecx
0xf67e81c8:  setne  %dl
0xf67e81cb:  sete   %al
0xf67e81ce:  add    $0x1,%ebx
0xf67e81d1:  shl    %cl,%edx
0xf67e81d3:  shl    %cl,%eax
0xf67e81d5:  mov    -0x2c(%ebp),%ecx
0xf67e81d8:  mov    %edx,-0x1c(%ebp)
0xf67e81db:  mov    -0x1c(%ebp),%edi
0xf67e81de:  mov    -0x30(%ebp),%edx
0xf67e81e1:  mov    %eax,-0x20(%ebp)
0xf67e81e4:  mov    -0x20(%ebp),%eax
0xf67e81e7:  xor    %ecx,%edi
0xf67e81e9:  mov    %edi,-0x2c(%ebp)
0xf67e81ec:  mov    -0x2c(%ebp),%ecx
0xf67e81ef:  xor    %edx,%eax
0xf67e81f1:  mov    %eax,-0x30(%ebp)
0xf67e81f4:  mov    -0x30(%ebp),%edx
0xf67e81f7:  lea    0x1(%esi),%eax
0xf67e81fa:  mov    %ecx,%edi
0xf67e81fc:  or     %edx,%edi
0xf67e81fe:  je     0xf67e8290

----------------
IN: 
0xf67e8204:  mov    %eax,%esi
0xf67e8206:  jmp    0xf67e8180


call [pc: f67e81b9, cc: 000211ea]

ret [pc: f67e81b9, cc: f67c9053]
----------------
IN: 
0xf67e8290:  lea    0x2(%esi),%edx
0xf67e8293:  shl    $0x3,%eax
0xf67e8296:  mov    -0x4c(%ebp),%edi
0xf67e8299:  test   %edi,%edi
0xf67e829b:  je     0xf67e82b2

----------------
IN: 
0xf67e829d:  add    -0x38(%ebp),%eax
0xf67e82a0:  mov    %edi,(%eax)
0xf67e82a2:  mov    -0x50(%ebp),%edi
0xf67e82a5:  mov    %edi,0x4(%eax)
0xf67e82a8:  lea    0x0(,%edx,8),%eax
0xf67e82af:  add    $0x1,%edx
0xf67e82b2:  mov    -0x24(%ebp),%edi
0xf67e82b5:  add    -0x38(%ebp),%eax
0xf67e82b8:  cmp    %edx,-0x54(%ebp)
0xf67e82bb:  lea    -0x9028(%edi),%ecx
0xf67e82c1:  movl   $0x3,0x4(%eax)
0xf67e82c8:  mov    %ecx,(%eax)
0xf67e82ca:  jne    0xf67e86ba

----------------
IN: 
0xf67e82d0:  cmpl   $0x1,-0x54(%ebp)
0xf67e82d4:  mov    -0x38(%ebp),%eax
0xf67e82d7:  mov    0x4(%eax),%edi
0xf67e82da:  je     0xf67e8597

----------------
IN: 
0xf67e82e0:  mov    -0x54(%ebp),%ecx
0xf67e82e3:  mov    %edi,-0x40(%ebp)
0xf67e82e6:  lea    -0x8(,%ecx,8),%esi
0xf67e82ed:  cmp    $0x2,%ecx
0xf67e82f0:  lea    (%eax,%esi,1),%edx
0xf67e82f3:  mov    %edx,-0x20(%ebp)
0xf67e82f6:  mov    0x4(%edx),%edx
0xf67e82f9:  mov    %edx,-0x3c(%ebp)
0xf67e82fc:  lea    0x2(%edi,%edx,1),%edx
0xf67e8300:  jbe    0xf67e834a

----------------
IN: 
0xf67e8302:  mov    %eax,%edi
0xf67e8304:  add    %edx,%edx
0xf67e8306:  add    $0xc,%eax
0xf67e8309:  lea    0x4(%edi,%esi,1),%ebx
0xf67e830d:  lea    0x0(%esi),%esi
0xf67e8310:  mov    (%eax),%ecx
0xf67e8312:  add    $0x8,%eax
0xf67e8315:  cmp    %ebx,%eax
0xf67e8317:  lea    0x1(%edx,%ecx,1),%edx
0xf67e831b:  jne    0xf67e8310

----------------
IN: 
0xf67e8310:  mov    (%eax),%ecx
0xf67e8312:  add    $0x8,%eax
0xf67e8315:  cmp    %ebx,%eax
0xf67e8317:  lea    0x1(%edx,%ecx,1),%edx
0xf67e831b:  jne    0xf67e8310

----------------
IN: 
0xf67e831d:  mov    -0x54(%ebp),%edi
0xf67e8320:  cmp    $0x3,%edi
0xf67e8323:  je     0xf67e8342

----------------
IN: 
0xf67e8325:  cmp    $0x1f,%edi
0xf67e8328:  ja     0xf67e85c5

----------------
IN: 
0xf67e832e:  lea    0x40(%edx),%eax
0xf67e8331:  mov    $0x23,%ecx
0xf67e8336:  sub    %edi,%ecx
0xf67e8338:  shr    %cl,%eax
0xf67e833a:  test   %eax,%eax
0xf67e833c:  jne    0xf67e85c5

----------------
IN: 
0xf67e8342:  mov    -0x54(%ebp),%eax
0xf67e8345:  lea    -0x3(%eax),%ecx
0xf67e8348:  shl    %cl,%edx
0xf67e834a:  movzbl -0x54(%ebp),%ecx
0xf67e834e:  mov    $0x1,%eax
0xf67e8353:  mov    -0x48(%ebp),%edi
0xf67e8356:  sub    $0xc,%esp
0xf67e8359:  mov    -0x24(%ebp),%ebx
0xf67e835c:  shl    %cl,%eax
0xf67e835e:  lea    0x0(,%eax,8),%ecx
0xf67e8365:  mov    %eax,(%edi)
0xf67e8367:  mov    %eax,-0x34(%ebp)
0xf67e836a:  add    %ecx,%edx
0xf67e836c:  mov    %ecx,-0x30(%ebp)
0xf67e836f:  push   %edx
0xf67e8370:  call   0xf67da820


call [pc: f67e8375, cc: 00021326]

call [pc: f67f0e96, cc: f67d1db0]

ret [pc: f67f0e96, cc: 00021326]

call [pc: f67f0eaa, cc: f67d1d8c]

call [pc: f67f0dcc, cc: 00021040]

ret [pc: f67f0dcc, cc: f67d1d8c]
----------------
IN: 
0xf67f0de4:  mov    0x8e4(%ebx),%eax
0xf67f0dea:  lea    -0x1(%eax,%ecx,1),%edx
0xf67f0dee:  neg    %ecx
0xf67f0df0:  and    %ecx,%edx
0xf67f0df2:  lea    (%edx,%edi,1),%eax
0xf67f0df5:  mov    %edx,0x8e4(%ebx)
0xf67f0dfb:  cmp    %esi,%eax
0xf67f0dfd:  jae    0xf67f0e07


ret [pc: f67f0eaa, cc: 00021326]

ret [pc: f67e8375, cc: f67c9053]
----------------
IN: 
0xf67e8375:  add    $0x10,%esp
0xf67e8378:  test   %eax,%eax
0xf67e837a:  mov    %eax,-0x28(%ebp)
0xf67e837d:  mov    -0x30(%ebp),%ecx
0xf67e8380:  je     0xf67e85c5

----------------
IN: 
0xf67e8386:  mov    -0x28(%ebp),%edi
0xf67e8389:  mov    %edi,%eax
0xf67e838b:  add    %ecx,%eax
0xf67e838d:  cmpl   $0x2,-0x54(%ebp)
0xf67e8391:  mov    %eax,(%edi)
0xf67e8393:  mov    %eax,0x8(%edi)
0xf67e8396:  je     0xf67e860d

----------------
IN: 
0xf67e839c:  mov    -0x54(%ebp),%ebx
0xf67e839f:  mov    $0x1,%edx
0xf67e83a4:  mov    %ebx,%edi
0xf67e83a6:  sub    $0x1,%edi
0xf67e83a9:  mov    %edi,%ecx
0xf67e83ab:  mov    %edi,-0x58(%ebp)
0xf67e83ae:  mov    %edi,-0x5c(%ebp)
0xf67e83b1:  shl    %cl,%edx
0xf67e83b3:  mov    -0x20(%ebp),%ecx
0xf67e83b6:  mov    %edx,%edi
0xf67e83b8:  mov    (%ecx),%ecx
0xf67e83ba:  mov    %ecx,-0x48(%ebp)
0xf67e83bd:  mov    %ebx,%ecx
0xf67e83bf:  sub    $0x2,%ecx
0xf67e83c2:  mov    %ecx,-0x4c(%ebp)
0xf67e83c5:  mov    -0x38(%ebp),%ecx
0xf67e83c8:  mov    (%ecx),%ebx
0xf67e83ca:  lea    -0x4(%ecx,%esi,1),%ecx
0xf67e83ce:  mov    %ecx,-0x44(%ebp)
0xf67e83d1:  mov    -0x24(%ebp),%ecx
0xf67e83d4:  mov    %ebx,-0x50(%ebp)
0xf67e83d7:  lea    -0x916e(%ecx),%ecx
0xf67e83dd:  mov    %ecx,-0x30(%ebp)
0xf67e83e0:  mov    -0x24(%ebp),%esi
0xf67e83e3:  sub    $0x4,%esp
0xf67e83e6:  pushl  -0x3c(%ebp)
0xf67e83e9:  pushl  -0x48(%ebp)
0xf67e83ec:  push   %eax
0xf67e83ed:  sub    $0x2,%edi
0xf67e83f0:  mov    %esi,%ebx
0xf67e83f2:  call   0xf67f33e0


call [pc: f67e83f7, cc: 000213a4]
----------------
IN: 
0xf67f33e0:  mov    0xc(%esp),%ecx
0xf67f33e4:  mov    %edi,%eax
0xf67f33e6:  mov    0x4(%esp),%edi
0xf67f33ea:  mov    %esi,%edx
0xf67f33ec:  mov    0x8(%esp),%esi
0xf67f33f0:  cld    
0xf67f33f1:  shr    %ecx
0xf67f33f3:  jae    0xf67f33f6

----------------
IN: 
0xf67f33f5:  movsb  %ds:(%esi),%es:(%edi)
0xf67f33f6:  shr    %ecx
0xf67f33f8:  jae    0xf67f33fc

----------------
IN: 
0xf67f33fa:  movsw  %ds:(%esi),%es:(%edi)
0xf67f33fc:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0xf67f33fe:  xchg   %eax,%edi
0xf67f33ff:  mov    %edx,%esi
0xf67f3401:  ret    


ret [pc: f67e83f7, cc: f67c9053]
----------------
IN: 
0xf67e83f7:  add    $0xc,%esp
0xf67e83fa:  push   $0x1
0xf67e83fc:  pushl  -0x30(%ebp)
0xf67e83ff:  push   %eax
0xf67e8400:  call   0xf67f33e0


call [pc: f67e8405, cc: 00021456]
----------------
IN: 
0xf67f33fc:  rep movsl %ds:(%esi),%es:(%edi)


ret [pc: f67e8405, cc: f67c9053]
----------------
IN: 
0xf67e8405:  add    $0x10,%esp
0xf67e8408:  mov    -0x44(%ebp),%esi
0xf67e840b:  mov    -0x4c(%ebp),%ecx
0xf67e840e:  jmp    0xf67e8418

----------------
IN: 
0xf67e8418:  mov    $0x1,%edx
0xf67e841d:  shl    %cl,%edx
0xf67e841f:  test   %edi,%edx
0xf67e8421:  je     0xf67e8410

----------------
IN: 
0xf67e8423:  sub    $0x4,%esp
0xf67e8426:  mov    -0x24(%ebp),%ebx
0xf67e8429:  pushl  (%esi)
0xf67e842b:  pushl  -0x4(%esi)
0xf67e842e:  push   %eax
0xf67e842f:  sub    $0x8,%esi
0xf67e8432:  mov    %ecx,-0x20(%ebp)
0xf67e8435:  call   0xf67f33e0


call [pc: f67e843a, cc: 00021469]
----------------
IN: 
0xf67f33f6:  shr    %ecx
0xf67f33f8:  jae    0xf67f33fc


ret [pc: f67e843a, cc: f67c9053]
----------------
IN: 
0xf67e843a:  add    $0xc,%esp
0xf67e843d:  mov    -0x24(%ebp),%ebx
0xf67e8440:  push   $0x1
0xf67e8442:  pushl  -0x30(%ebp)
0xf67e8445:  push   %eax
0xf67e8446:  call   0xf67f33e0


call [pc: f67e844b, cc: 00021418]

ret [pc: f67e844b, cc: f67c9053]
----------------
IN: 
0xf67e844b:  mov    -0x20(%ebp),%ecx
0xf67e844e:  add    $0x10,%esp
0xf67e8451:  sub    $0x1,%ecx
0xf67e8454:  jne    0xf67e8418


call [pc: f67e843a, cc: 00021469]

ret [pc: f67e843a, cc: f67c9053]

call [pc: f67e844b, cc: 00021418]

ret [pc: f67e844b, cc: f67c9053]
----------------
IN: 
0xf67e8456:  mov    -0x24(%ebp),%esi
0xf67e8459:  sub    $0x4,%esp
0xf67e845c:  pushl  -0x40(%ebp)
0xf67e845f:  pushl  -0x50(%ebp)
0xf67e8462:  push   %eax
0xf67e8463:  mov    %esi,%ebx
0xf67e8465:  call   0xf67f33e0


call [pc: f67e846a, cc: 00021439]

ret [pc: f67e846a, cc: f67c9053]
----------------
IN: 
0xf67e846a:  add    $0xc,%esp
0xf67e846d:  push   $0x1
0xf67e846f:  pushl  -0x30(%ebp)
0xf67e8472:  push   %eax
0xf67e8473:  call   0xf67f33e0


call [pc: f67e8478, cc: 0002142b]

ret [pc: f67e8478, cc: f67c9053]
----------------
IN: 
0xf67e8478:  add    $0x10,%esp
0xf67e847b:  test   %edi,%edi
0xf67e847d:  jne    0xf67e83e0

----------------
IN: 
0xf67e83e0:  mov    -0x24(%ebp),%esi
0xf67e83e3:  sub    $0x4,%esp
0xf67e83e6:  pushl  -0x3c(%ebp)
0xf67e83e9:  pushl  -0x48(%ebp)
0xf67e83ec:  push   %eax
0xf67e83ed:  sub    $0x2,%edi
0xf67e83f0:  mov    %esi,%ebx
0xf67e83f2:  call   0xf67f33e0


call [pc: f67e83f7, cc: 000213a4]

ret [pc: f67e83f7, cc: f67c9053]

call [pc: f67e8405, cc: 00021456]

ret [pc: f67e8405, cc: f67c9053]

call [pc: f67e843a, cc: 00021469]

ret [pc: f67e843a, cc: f67c9053]

call [pc: f67e844b, cc: 00021418]

ret [pc: f67e844b, cc: f67c9053]
----------------
IN: 
0xf67e8410:  sub    $0x8,%esi
0xf67e8413:  sub    $0x1,%ecx
0xf67e8416:  je     0xf67e8456


call [pc: f67e846a, cc: 00021439]

ret [pc: f67e846a, cc: f67c9053]

call [pc: f67e8478, cc: 0002142b]

ret [pc: f67e8478, cc: f67c9053]

call [pc: f67e83f7, cc: 000213a4]

ret [pc: f67e83f7, cc: f67c9053]

call [pc: f67e8405, cc: 00021456]

ret [pc: f67e8405, cc: f67c9053]

call [pc: f67e843a, cc: 00021469]

ret [pc: f67e843a, cc: f67c9053]

call [pc: f67e844b, cc: 00021418]

ret [pc: f67e844b, cc: f67c9053]

call [pc: f67e846a, cc: 00021439]

ret [pc: f67e846a, cc: f67c9053]

call [pc: f67e8478, cc: 0002142b]

ret [pc: f67e8478, cc: f67c9053]

call [pc: f67e83f7, cc: 000213a4]

ret [pc: f67e83f7, cc: f67c9053]

call [pc: f67e8405, cc: 00021456]

ret [pc: f67e8405, cc: f67c9053]

call [pc: f67e846a, cc: 00021439]

ret [pc: f67e846a, cc: f67c9053]

call [pc: f67e8478, cc: 0002142b]

ret [pc: f67e8478, cc: f67c9053]
----------------
IN: 
0xf67e8483:  movzbl -0x54(%ebp),%ecx
0xf67e8487:  mov    $0x1,%eax
0xf67e848c:  mov    -0x5c(%ebp),%edi
0xf67e848f:  shl    %cl,%eax
0xf67e8491:  test   %eax,%eax
0xf67e8493:  mov    %eax,%ecx
0xf67e8495:  je     0xf67e84af

----------------
IN: 
0xf67e8497:  mov    -0x28(%ebp),%edx
0xf67e849a:  xor    %eax,%eax
0xf67e849c:  lea    0x0(%esi),%esi
0xf67e84a0:  movl   $0x0,0x4(%edx,%eax,8)
0xf67e84a8:  add    $0x1,%eax
0xf67e84ab:  cmp    %ecx,%eax
0xf67e84ad:  jb     0xf67e84a0

----------------
IN: 
0xf67e84a0:  movl   $0x0,0x4(%edx,%eax,8)
0xf67e84a8:  add    $0x1,%eax
0xf67e84ab:  cmp    %ecx,%eax
0xf67e84ad:  jb     0xf67e84a0

----------------
IN: 
0xf67e84af:  mov    %edi,%ecx
0xf67e84b1:  mov    -0x38(%ebp),%edi
0xf67e84b4:  mov    $0x1,%edx
0xf67e84b9:  lea    0x0(%esi),%esi
0xf67e84c0:  mov    %edx,%eax
0xf67e84c2:  shl    %cl,%eax
0xf67e84c4:  mov    %eax,-0x20(%ebp)
0xf67e84c7:  mov    -0x34(%ebp),%eax
0xf67e84ca:  test   %eax,%eax
0xf67e84cc:  je     0xf67e84fc

----------------
IN: 
0xf67e84ce:  mov    -0x28(%ebp),%ebx
0xf67e84d1:  lea    0x0(%esi),%esi
0xf67e84d8:  sub    $0x1,%eax
0xf67e84db:  test   %eax,-0x20(%ebp)
0xf67e84de:  je     0xf67e84f5

----------------
IN: 
0xf67e84e0:  mov    0x4(%edi,%ecx,8),%esi
0xf67e84e4:  sub    $0x1,%eax
0xf67e84e7:  add    $0x1,%esi
0xf67e84ea:  add    %esi,0x4(%ebx)
0xf67e84ed:  add    $0x8,%ebx
0xf67e84f0:  test   %eax,-0x20(%ebp)
0xf67e84f3:  jne    0xf67e84e0

----------------
IN: 
0xf67e84f5:  add    $0x8,%ebx
0xf67e84f8:  test   %eax,%eax
0xf67e84fa:  jne    0xf67e84d8

----------------
IN: 
0xf67e84d8:  sub    $0x1,%eax
0xf67e84db:  test   %eax,-0x20(%ebp)
0xf67e84de:  je     0xf67e84f5

----------------
IN: 
0xf67e84fc:  test   %ecx,%ecx
0xf67e84fe:  je     0xf67e8505

----------------
IN: 
0xf67e8500:  sub    $0x1,%ecx
0xf67e8503:  jmp    0xf67e84c0

----------------
IN: 
0xf67e84c0:  mov    %edx,%eax
0xf67e84c2:  shl    %cl,%eax
0xf67e84c4:  mov    %eax,-0x20(%ebp)
0xf67e84c7:  mov    -0x34(%ebp),%eax
0xf67e84ca:  test   %eax,%eax
0xf67e84cc:  je     0xf67e84fc

----------------
IN: 
0xf67e8505:  mov    -0x34(%ebp),%eax
0xf67e8508:  movzbl -0x58(%ebp),%ecx
0xf67e850c:  lea    -0x2(%eax),%ebx
0xf67e850f:  mov    -0x28(%ebp),%eax
0xf67e8512:  lea    0x10(%eax),%edx
0xf67e8515:  mov    $0x1,%eax
0xf67e851a:  shl    %cl,%eax
0xf67e851c:  cmp    %eax,%ebx
0xf67e851e:  je     0xf67e8556

----------------
IN: 
0xf67e8520:  mov    %edx,%ecx
0xf67e8522:  jmp    0xf67e8538

----------------
IN: 
0xf67e8538:  sub    $0x1,%ebx
0xf67e853b:  test   $0x1,%bl
0xf67e853e:  jne    0xf67e8528

----------------
IN: 
0xf67e8528:  mov    -0xc(%ecx),%esi
0xf67e852b:  add    -0x10(%ecx),%esi
0xf67e852e:  add    $0x8,%ecx
0xf67e8531:  mov    %esi,-0x8(%ecx)
0xf67e8534:  cmp    %eax,%ebx
0xf67e8536:  je     0xf67e854d

----------------
IN: 
0xf67e8540:  mov    -0x8(%ecx),%esi
0xf67e8543:  add    $0x8,%ecx
0xf67e8546:  mov    %esi,-0x8(%ecx)
0xf67e8549:  cmp    %eax,%ebx
0xf67e854b:  jne    0xf67e8538

----------------
IN: 
0xf67e854d:  mov    -0x34(%ebp),%ecx
0xf67e8550:  sub    %eax,%ecx
0xf67e8552:  lea    -0x10(%edx,%ecx,8),%edx
0xf67e8556:  movzbl -0x58(%ebp),%ecx
0xf67e855a:  mov    -0x3c(%ebp),%esi
0xf67e855d:  mov    $0xfffffff8,%ebx
0xf67e8562:  add    $0x1,%esi
0xf67e8565:  shl    %cl,%ebx
0xf67e8567:  mov    %esi,%esi
0xf67e8569:  lea    0x0(%edi),%edi
0xf67e8570:  mov    (%edx,%ebx,1),%ecx
0xf67e8573:  add    $0x8,%edx
0xf67e8576:  add    %esi,%ecx
0xf67e8578:  mov    %ecx,-0x8(%edx)
0xf67e857b:  sub    $0x1,%eax
0xf67e857e:  jne    0xf67e8570

----------------
IN: 
0xf67e8570:  mov    (%edx,%ebx,1),%ecx
0xf67e8573:  add    $0x8,%edx
0xf67e8576:  add    %esi,%ecx
0xf67e8578:  mov    %ecx,-0x8(%edx)
0xf67e857b:  sub    $0x1,%eax
0xf67e857e:  jne    0xf67e8570

----------------
IN: 
0xf67e8580:  mov    -0x28(%ebp),%edi
0xf67e8583:  mov    0x8(%ebp),%edx
0xf67e8586:  mov    0x4(%edi),%eax
0xf67e8589:  mov    %eax,(%edx)
0xf67e858b:  lea    -0xc(%ebp),%esp
0xf67e858e:  mov    %edi,%eax
0xf67e8590:  pop    %ebx
0xf67e8591:  pop    %esi
0xf67e8592:  pop    %edi
0xf67e8593:  pop    %ebp
0xf67e8594:  ret    $0x4


ret [pc: f67e1ce5, cc: 00028cb6]
----------------
IN: 
0xf67e1ce5:  push   $0x14
0xf67e1ce7:  mov    %eax,-0xe0(%ebx)
0xf67e1ced:  call   0xf67da820


call [pc: f67e1cf2, cc: f67c9044]

call [pc: f67f0e96, cc: 00039ed2]

ret [pc: f67f0e96, cc: f67c9044]

call [pc: f67f0eaa, cc: 00039eee]

call [pc: f67f0dcc, cc: f67c9322]

ret [pc: f67f0dcc, cc: 00039eee]

ret [pc: f67f0eaa, cc: f67c9044]

ret [pc: f67e1cf2, cc: 00028cb6]
----------------
IN: 
0xf67e1cf2:  add    $0x10,%esp
0xf67e1cf5:  test   %eax,%eax
0xf67e1cf7:  mov    %eax,-0xf0(%ebx)
0xf67e1cfd:  je     0xf67e2117

----------------
IN: 
0xf67e1d03:  mov    -0xe4(%ebx),%esi
0xf67e1d09:  mov    %eax,%edi
0xf67e1d0b:  mov    $0xcccccccd,%edx
0xf67e1d10:  sub    $0xc,%esp
0xf67e1d13:  lea    0x27(,%esi,4),%eax
0xf67e1d1a:  mul    %edx
0xf67e1d1c:  shr    $0x4,%edx
0xf67e1d1f:  imul   $0x4d8,%edx,%eax
0xf67e1d25:  mov    %edx,-0x1c(%ebp)
0xf67e1d28:  push   %eax
0xf67e1d29:  call   0xf67da820


call [pc: f67e1d2e, cc: f67c9198]

call [pc: f67f0e96, cc: 00039f0e]

ret [pc: f67f0e96, cc: f67c9198]

call [pc: f67f0eaa, cc: 00039f32]

call [pc: f67f0dcc, cc: f67c92fe]

ret [pc: f67f0dcc, cc: 00039f32]
----------------
IN: 
0xf67f0e07:  mov    -0x2f0(%ebx),%edx
0xf67f0e0d:  lea    -0x1(%edx,%edi,1),%esi
0xf67f0e11:  mov    %edx,%eax
0xf67f0e13:  neg    %eax
0xf67f0e15:  and    %eax,%esi
0xf67f0e17:  je     0xf67f0e80

----------------
IN: 
0xf67f0e19:  sub    $0x8,%esp
0xf67f0e1c:  push   $0x0
0xf67f0e1e:  push   $0xffffffff
0xf67f0e20:  push   $0x22
0xf67f0e22:  push   $0x3
0xf67f0e24:  push   %esi
0xf67f0e25:  push   $0x0
0xf67f0e27:  call   0xf67f2840


call [pc: f67f0e2c, cc: f67c911e]
----------------
IN: 
0xf67f2840:  push   %ebp
0xf67f2841:  push   %edi
0xf67f2842:  push   %esi
0xf67f2843:  push   %ebx
0xf67f2844:  call   0xf67f3601


call [pc: f67f2849, cc: 0003b957]

ret [pc: f67f2849, cc: f67c911e]
----------------
IN: 
0xf67f2849:  add    $0xb7b7,%eax
0xf67f284e:  sub    $0x1c,%esp
0xf67f2851:  mov    %eax,0xc(%esp)
0xf67f2855:  mov    0x44(%esp),%eax
0xf67f2859:  mov    0x30(%esp),%ebx
0xf67f285d:  mov    0x34(%esp),%ecx
0xf67f2861:  mov    0x38(%esp),%edx
0xf67f2865:  mov    0x3c(%esp),%esi
0xf67f2869:  test   $0xfff,%eax
0xf67f286e:  mov    0x40(%esp),%edi
0xf67f2872:  jne    0xf67f2890

----------------
IN: 
0xf67f2874:  shr    $0xc,%eax
0xf67f2877:  mov    %eax,%ebp
0xf67f2879:  mov    $0xc0,%eax
0xf67f287e:  int    $0x80

----------------
IN: 
0xf67f2880:  cmp    $0xfffff000,%eax
0xf67f2885:  ja     0xf67f28a8

----------------
IN: 
0xf67f2887:  add    $0x1c,%esp
0xf67f288a:  pop    %ebx
0xf67f288b:  pop    %esi
0xf67f288c:  pop    %edi
0xf67f288d:  pop    %ebp
0xf67f288e:  ret    


ret [pc: f67f0e2c, cc: 00039f32]
----------------
IN: 
0xf67f0e2c:  add    $0x20,%esp
0xf67f0e2f:  cmp    $0xffffffff,%eax
0xf67f0e32:  je     0xf67f0e86

----------------
IN: 
0xf67f0e34:  cmp    0x8e0(%ebx),%eax
0xf67f0e3a:  mov    %eax,%edx
0xf67f0e3c:  cmove  0x8e4(%ebx),%edx
0xf67f0e43:  add    %eax,%esi
0xf67f0e45:  mov    %esi,0x8e0(%ebx)
0xf67f0e4b:  lea    (%edx,%edi,1),%eax
0xf67f0e4e:  mov    %edx,0x8dc(%ebx)
0xf67f0e54:  mov    %eax,0x8e4(%ebx)
0xf67f0e5a:  pop    %ebx
0xf67f0e5b:  mov    %edx,%eax
0xf67f0e5d:  pop    %esi
0xf67f0e5e:  pop    %edi
0xf67f0e5f:  ret    


ret [pc: f67f0eaa, cc: f67c9198]

ret [pc: f67e1d2e, cc: 00028cb6]
----------------
IN: 
0xf67e1d2e:  add    $0x10,%esp
0xf67e1d31:  test   %eax,%eax
0xf67e1d33:  mov    %eax,(%edi)
0xf67e1d35:  mov    -0x1c(%ebp),%edx
0xf67e1d38:  je     0xf67e212f

----------------
IN: 
0xf67e1d3e:  lea    -0x920b(%ebx),%ecx
0xf67e1d44:  lea    (%edx,%edx,4),%edx
0xf67e1d47:  mov    %edi,-0x20(%ebp)
0xf67e1d4a:  lea    -0xa494(%ebx),%edi
0xf67e1d50:  movl   $0x0,-0xec(%ebx)
0xf67e1d5a:  mov    %eax,0x534(%ebx)
0xf67e1d60:  mov    %ecx,-0x30(%ebp)
0xf67e1d63:  mov    %ecx,0x4(%eax)
0xf67e1d66:  lea    -0xa480(%ebx),%ecx
0xf67e1d6c:  shl    $0x2,%edx
0xf67e1d6f:  movl   $0x0,0x8(%eax)
0xf67e1d76:  movl   $0x14,0x10(%eax)
0xf67e1d7d:  mov    %ecx,-0x1c(%ebp)
0xf67e1d80:  mov    %ecx,0xc(%eax)
0xf67e1d83:  lea    (%eax,%edx,1),%ecx
0xf67e1d86:  mov    %edx,-0x28(%ebp)
0xf67e1d89:  lea    0xc(%edi),%edx
0xf67e1d8c:  mov    %edx,-0x2c(%ebp)
0xf67e1d8f:  mov    -0x1c(%ebp),%edx
0xf67e1d92:  mov    %esi,-0x1c(%ebp)
0xf67e1d95:  add    $0x15,%edx
0xf67e1d98:  mov    %edx,-0x24(%ebp)
0xf67e1d9b:  mov    -0x1c(%ebp),%esi
0xf67e1d9e:  xor    %edx,%edx
0xf67e1da0:  test   %esi,%esi
0xf67e1da2:  je     0xf67e1dc2

----------------
IN: 
0xf67e1da4:  mov    -0x1c(%ebp),%esi
0xf67e1da7:  mov    %esi,%esi
0xf67e1da9:  lea    0x0(%edi),%edi
0xf67e1db0:  movl   $0x0,0x14(%eax,%edx,4)
0xf67e1db8:  add    $0x1,%edx
0xf67e1dbb:  cmp    %edx,%esi
0xf67e1dbd:  jne    0xf67e1db0

----------------
IN: 
0xf67e1db0:  movl   $0x0,0x14(%eax,%edx,4)
0xf67e1db8:  add    $0x1,%edx
0xf67e1dbb:  cmp    %edx,%esi
0xf67e1dbd:  jne    0xf67e1db0

----------------
IN: 
0xf67e1dbf:  mov    %esi,-0x1c(%ebp)
0xf67e1dc2:  cmp    -0x2c(%ebp),%edi
0xf67e1dc5:  je     0xf67e1e10

----------------
IN: 
0xf67e1dc7:  mov    -0x20(%ebp),%edx
0xf67e1dca:  mov    -0x30(%ebp),%esi
0xf67e1dcd:  add    $0x4,%edi
0xf67e1dd0:  mov    %ecx,(%eax)
0xf67e1dd2:  addl   $0x4,-0x20(%ebp)
0xf67e1dd6:  movl   $0x0,0x8(%ecx)
0xf67e1ddd:  add    -0x28(%ebp),%eax
0xf67e1de0:  mov    %ecx,0x4(%edx)
0xf67e1de3:  mov    %esi,0x4(%ecx)
0xf67e1de6:  mov    (%edi),%edx
0xf67e1de8:  mov    -0x24(%ebp),%esi
0xf67e1deb:  mov    %edx,0x10(%ecx)
0xf67e1dee:  mov    %esi,0xc(%ecx)
0xf67e1df1:  add    -0x28(%ebp),%ecx
0xf67e1df4:  lea    0x1(%esi,%edx,1),%edx
0xf67e1df8:  cmpb   $0x2f,(%esi)
0xf67e1dfb:  jne    0xf67e20f8

----------------
IN: 
0xf67e1e01:  mov    %edx,-0x24(%ebp)
0xf67e1e04:  jmp    0xf67e1d9b

----------------
IN: 
0xf67e1d9b:  mov    -0x1c(%ebp),%esi
0xf67e1d9e:  xor    %edx,%edx
0xf67e1da0:  test   %esi,%esi
0xf67e1da2:  je     0xf67e1dc2

----------------
IN: 
0xf67e1e10:  mov    0x20(%ebx),%esi
0xf67e1e16:  movl   $0x0,(%eax)
0xf67e1e1c:  mov    -0x20(%ebp),%eax
0xf67e1e1f:  movl   $0x18,0x894(%ebx)
0xf67e1e29:  test   %esi,%esi
0xf67e1e2b:  movl   $0x0,0x4(%eax)
0xf67e1e32:  je     0xf67e1e8b

----------------
IN: 
0xf67e1e34:  movzbl 0x194(%esi),%eax
0xf67e1e3b:  and    $0x3,%eax
0xf67e1e3e:  cmp    $0x2,%al
0xf67e1e40:  je     0xf67e2137

----------------
IN: 
0xf67e1e46:  mov    0x94(%esi),%eax
0xf67e1e4c:  test   %eax,%eax
0xf67e1e4e:  je     0xf67e1f92

----------------
IN: 
0xf67e1f92:  mov    0x5c(%esi),%eax
0xf67e1f95:  movl   $0xffffffff,0x1e8(%esi)
0xf67e1f9f:  test   %eax,%eax
0xf67e1fa1:  je     0xf67e1fd5

----------------
IN: 
0xf67e1fd5:  movl   $0xffffffff,0x198(%esi)
0xf67e1fdf:  jmp    0xf67e1e8b

----------------
IN: 
0xf67e1e8b:  mov    -0x34(%ebp),%eax
0xf67e1e8e:  test   %eax,%eax
0xf67e1e90:  je     0xf67e1f80

----------------
IN: 
0xf67e1f80:  movl   $0xffffffff,-0xdc(%ebx)
0xf67e1f8a:  lea    -0xc(%ebp),%esp
0xf67e1f8d:  pop    %ebx
0xf67e1f8e:  pop    %esi
0xf67e1f8f:  pop    %edi
0xf67e1f90:  pop    %ebp
0xf67e1f91:  ret    


ret [pc: f67dc938, cc: f67f458e]
----------------
IN: 
0xf67dc938:  mov    0x53c(%edi),%eax
0xf67dc93e:  xor    %edx,%edx
0xf67dc940:  call   0xf67e9b60


call [pc: f67dc945, cc: 00028ccb]
----------------
IN: 
0xf67e9b60:  push   %ebx
0xf67e9b61:  call   0xf67f3609


call [pc: f67e9b66, cc: f67c17ad]

ret [pc: f67e9b66, cc: 00028ccb]
----------------
IN: 
0xf67e9b66:  add    $0x1449a,%ebx
0xf67e9b6c:  test   %edx,%edx
0xf67e9b6e:  je     0xf67e9bb0

----------------
IN: 
0xf67e9bb0:  mov    -0xc(%ebx),%ecx
0xf67e9bb6:  cmpl   $0x0,0x4(%ecx)
0xf67e9bba:  jne    0xf67e9b80

----------------
IN: 
0xf67e9bbc:  test   %eax,%eax
0xf67e9bbe:  movl   $0x1,(%ecx)
0xf67e9bc4:  jne    0xf67e9b8a

----------------
IN: 
0xf67e9b8a:  imul   $0x4c,%edx,%edx
0xf67e9b8d:  mov    %eax,0x10(%ecx)
0xf67e9b90:  mov    0x20(%ebx,%edx,1),%eax
0xf67e9b97:  mov    %eax,0x4(%ecx)
0xf67e9b9a:  lea    -0x144b0(%ebx),%eax
0xf67e9ba0:  mov    %eax,0x8(%ecx)
0xf67e9ba3:  mov    %ecx,%eax
0xf67e9ba5:  pop    %ebx
0xf67e9ba6:  ret    


ret [pc: f67dc945, cc: f67f458e]
----------------
IN: 
0xf67dc945:  mov    0x540(%edi),%edi
0xf67dc94b:  mov    %eax,-0x78(%ebp)
0xf67dc94e:  movl   $0x0,0xc(%eax)
0xf67dc955:  test   %edi,%edi
0xf67dc957:  jne    0xf67dc96a

----------------
IN: 
0xf67dc959:  mov    -0x4c(%ebp),%esi
0xf67dc95c:  mov    0x558(%esi),%eax
0xf67dc962:  mov    (%eax),%eax
0xf67dc964:  mov    %eax,0x540(%esi)
0xf67dc96a:  mov    -0x4c(%ebp),%esi
0xf67dc96d:  mov    -0x50(%ebp),%edx
0xf67dc970:  mov    -0x5c(%ebp),%ecx
0xf67dc973:  movzbl 0x6d0(%esi),%eax
0xf67dc97a:  mov    %al,-0x60(%ebp)
0xf67dc97d:  and    $0xfffffffc,%eax
0xf67dc980:  or     $0x1,%eax
0xf67dc983:  mov    %al,0x6d0(%esi)
0xf67dc989:  mov    %esi,%eax
0xf67dc98b:  mov    %ecx,0xc(%edx)
0xf67dc98e:  addl   $0x1,0x24(%eax)
0xf67dc995:  addl   $0x1,0x514(%eax)
0xf67dc99c:  mov    %edx,0x54c(%eax)
0xf67dc9a2:  adcl   $0x0,0x518(%eax)
0xf67dc9a9:  cmpl   $0xfffffffe,-0x14c(%eax)
0xf67dc9b0:  jne    0xf67dc9c6

----------------
IN: 
0xf67dc9b2:  mov    (%edx),%esi
0xf67dc9b4:  xor    %eax,%eax
0xf67dc9b6:  test   %esi,%esi
0xf67dc9b8:  mov    -0x4c(%ebp),%esi
0xf67dc9bb:  sete   %al
0xf67dc9be:  neg    %eax
0xf67dc9c0:  mov    %eax,-0x14c(%esi)
0xf67dc9c6:  mov    -0x4c(%ebp),%eax
0xf67dc9c9:  cmpw   $0x34,-0x23fd8(%eax)
0xf67dc9d1:  jne    0xf67de229

----------------
IN: 
0xf67dc9d7:  mov    -0x4c(%ebp),%eax
0xf67dc9da:  cmpw   $0x20,-0x23fd6(%eax)
0xf67dc9e2:  jne    0xf67de208

----------------
IN: 
0xf67dc9e8:  mov    -0x4c(%ebp),%esi
0xf67dc9eb:  xor    %ebx,%ebx
0xf67dc9ed:  movzwl -0x23fd4(%esi),%edx
0xf67dc9f4:  mov    -0x23fe4(%esi),%eax
0xf67dc9fa:  lea    -0x24000(%esi,%eax,1),%ecx
0xf67dca01:  lea    0x7ffffff(%edx),%eax
0xf67dca07:  mov    %dx,0x694(%esi)
0xf67dca0e:  mov    %ecx,0x68c(%esi)
0xf67dca14:  shl    $0x5,%eax
0xf67dca17:  add    %ecx,%eax
0xf67dca19:  cmp    %ebx,%edx
0xf67dca1b:  je     0xf67dca42

----------------
IN: 
0xf67dca1d:  mov    %eax,%ecx
0xf67dca1f:  add    $0x1,%ebx
0xf67dca22:  sub    $0x20,%eax
0xf67dca25:  cmpl   $0x6474e552,(%ecx)
0xf67dca2b:  jne    0xf67dca19

----------------
IN: 
0xf67dca2d:  mov    0x8(%ecx),%eax
0xf67dca30:  mov    -0x4c(%ebp),%esi
0xf67dca33:  mov    %eax,0x788(%esi)
0xf67dca39:  mov    0x14(%ecx),%eax
0xf67dca3c:  mov    %eax,0x78c(%esi)
0xf67dca42:  mov    -0x4c(%ebp),%eax
0xf67dca45:  mov    0x770(%eax),%ebx
0xf67dca4b:  test   %ebx,%ebx
0xf67dca4d:  je     0xf67dca5d

----------------
IN: 
0xf67dca5d:  mov    -0x4c(%ebp),%eax
0xf67dca60:  movl   $0x0,-0x6c(%ebp)
0xf67dca67:  mov    0x890(%eax),%eax
0xf67dca6d:  test   %eax,%eax
0xf67dca6f:  jne    0xf67dcbf9

----------------
IN: 
0xf67dca75:  call   0xf67eb9c0


call [pc: f67dca7a, cc: 00028ff4]
----------------
IN: 
0xf67eb9c0:  call   0xf67f3601


call [pc: f67eb9c5, cc: f67c3631]

ret [pc: f67eb9c5, cc: 00028ff4]
----------------
IN: 
0xf67eb9c5:  add    $0x1263b,%eax
0xf67eb9ca:  cmpb   $0x0,0x828(%eax)
0xf67eb9d1:  jne    0xf67eb9da

----------------
IN: 
0xf67eb9d3:  mov    0x82c(%eax),%eax
0xf67eb9d9:  ret    


ret [pc: f67dca7a, cc: f67f458e]
----------------
IN: 
0xf67dca7a:  mov    %eax,-0x88(%ebp)
0xf67dca80:  mov    -0x50(%ebp),%eax
0xf67dca83:  mov    0x74(%eax),%eax
0xf67dca86:  test   %eax,%eax
0xf67dca88:  je     0xf67dca90

----------------
IN: 
0xf67dca8a:  mov    -0x78(%ebp),%edi
0xf67dca8d:  mov    %edi,0x4(%eax)
0xf67dca90:  mov    -0x4c(%ebp),%eax
0xf67dca93:  mov    0x5b0(%eax),%eax
0xf67dca99:  test   %eax,%eax
0xf67dca9b:  je     0xf67de1f4

----------------
IN: 
0xf67de1f4:  mov    -0x78(%ebp),%eax
0xf67de1f7:  movl   $0x1,0xc(%eax)
0xf67de1fe:  call   0xf67e9b50


call [pc: f67de203, cc: 0002a78d]
----------------
IN: 
0xf67e9b50:  repz ret 


ret [pc: f67de203, cc: f67f458e]
----------------
IN: 
0xf67de203:  jmp    0xf67dcab3

----------------
IN: 
0xf67dcab3:  nop    
0xf67dcab4:  mov    -0x4c(%ebp),%eax
0xf67dcab7:  mov    -0xf4(%eax),%eax
0xf67dcabd:  test   %eax,%eax
0xf67dcabf:  jne    0xf67de1a9

----------------
IN: 
0xf67dcac5:  mov    -0x7c(%ebp),%eax
0xf67dcac8:  mov    (%eax),%eax
0xf67dcaca:  test   %eax,%eax
0xf67dcacc:  jne    0xf67de154

----------------
IN: 
0xf67dcad2:  mov    -0x4c(%ebp),%eax
0xf67dcad5:  xor    %edi,%edi
0xf67dcad7:  mov    -0x378(%eax),%ebx
0xf67dcadd:  test   %ebx,%ebx
0xf67dcadf:  jne    0xf67de0c6

----------------
IN: 
0xf67dcae5:  mov    -0x4c(%ebp),%eax
0xf67dcae8:  sub    $0x8,%esp
0xf67dcaeb:  push   $0x4
0xf67dcaed:  lea    -0x7c60(%eax),%ebx
0xf67dcaf3:  push   %ebx
0xf67dcaf4:  call   0xf67f27c0


call [pc: f67dcaf9, cc: 00028f77]

call [pc: f67f1de5, cc: f67d9292]

ret [pc: f67f1de5, cc: 00028f77]

ret [pc: f67dcaf9, cc: f67f458e]
----------------
IN: 
0xf67dcaf9:  add    $0x10,%esp
0xf67dcafc:  test   %eax,%eax
0xf67dcafe:  je     0xf67ddefe

----------------
IN: 
0xf67dcb04:  mov    -0x7c(%ebp),%eax
0xf67dcb07:  xor    %ebx,%ebx
0xf67dcb09:  mov    (%eax),%eax
0xf67dcb0b:  test   %eax,%eax
0xf67dcb0d:  jne    0xf67ddeaf

----------------
IN: 
0xf67dcb13:  rdtsc  
0xf67dcb15:  xor    %ecx,%ecx
0xf67dcb17:  cmpl   $0x3,-0x58(%ebp)
0xf67dcb1b:  mov    %eax,-0x68(%ebp)
0xf67dcb1e:  mov    %edx,-0x64(%ebp)
0xf67dcb21:  mov    %ebx,%edx
0xf67dcb23:  sete   %cl
0xf67dcb26:  sub    $0x8,%esp
0xf67dcb29:  mov    %ecx,-0x60(%ebp)
0xf67dcb2c:  push   $0x0
0xf67dcb2e:  push   %ecx
0xf67dcb2f:  mov    %edi,%ecx
0xf67dcb31:  mov    -0x50(%ebp),%edi
0xf67dcb34:  mov    %edi,%eax
0xf67dcb36:  call   0xf67e6ea0


call [pc: f67dcb3b, cc: 00028eb5]
----------------
IN: 
0xf67e6ea0:  push   %ebp
0xf67e6ea1:  mov    %esp,%ebp
0xf67e6ea3:  push   %edi
0xf67e6ea4:  push   %esi
0xf67e6ea5:  push   %ebx
0xf67e6ea6:  mov    %eax,%ebx
0xf67e6ea8:  call   0xf67f3611


call [pc: f67e6ead, cc: f67ce018]

ret [pc: f67e6ead, cc: 00028eb5]
----------------
IN: 
0xf67e6ead:  add    $0x17153,%edi
0xf67e6eb3:  sub    $0x8c,%esp
0xf67e6eb9:  mov    %eax,-0x80(%ebp)
0xf67e6ebc:  lea    (%ecx,%ecx,2),%eax
0xf67e6ebf:  mov    %edi,-0x70(%ebp)
0xf67e6ec2:  mov    %ecx,-0x4c(%ebp)
0xf67e6ec5:  shl    $0x2,%eax
0xf67e6ec8:  mov    %eax,-0x50(%ebp)
0xf67e6ecb:  add    $0x36,%eax
0xf67e6ece:  and    $0xfffffff0,%eax
0xf67e6ed1:  sub    %eax,%esp
0xf67e6ed3:  lea    0xf(%esp),%esi
0xf67e6ed7:  and    $0xfffffff0,%esi
0xf67e6eda:  lea    0xc(%esi),%eax
0xf67e6edd:  mov    %esi,-0x8c(%ebp)
0xf67e6ee3:  movl   $0x0,(%esi)
0xf67e6ee9:  mov    %ebx,0x4(%esi)
0xf67e6eec:  mov    %eax,0x8(%esi)
0xf67e6eef:  movzbl 0x194(%ebx),%eax
0xf67e6ef6:  mov    %al,-0x54(%ebp)
0xf67e6ef9:  and    $0xffffff9f,%eax
0xf67e6efc:  or     $0x20,%eax
0xf67e6eff:  test   %ecx,%ecx
0xf67e6f01:  mov    %al,0x194(%ebx)
0xf67e6f07:  je     0xf67e7a64

----------------
IN: 
0xf67e7a64:  mov    -0x80(%ebp),%eax
0xf67e7a67:  movl   $0x1,-0x78(%ebp)
0xf67e7a6e:  mov    %eax,-0x4c(%ebp)
0xf67e7a71:  xor    %eax,%eax
0xf67e7a73:  jmp    0xf67e6f55

----------------
IN: 
0xf67e6f55:  add    %esi,%eax
0xf67e6f57:  movl   $0x0,-0x38(%ebp)
0xf67e6f5e:  mov    %esi,-0x68(%ebp)
0xf67e6f61:  mov    %eax,-0x5c(%ebp)
0xf67e6f64:  movl   $0x0,0x8(%eax)
0xf67e6f6b:  mov    -0x70(%ebp),%eax
0xf67e6f6e:  movl   $0x0,-0x84(%ebp)
0xf67e6f78:  movl   $0x0,-0x7c(%ebp)
0xf67e6f7f:  mov    0x900(%eax),%edi
0xf67e6f85:  movl   $0x0,0x900(%eax)
0xf67e6f8f:  mov    %edi,-0x90(%ebp)
0xf67e6f95:  lea    -0x171a0(%eax),%edi
0xf67e6f9b:  lea    -0x733c(%eax),%eax
0xf67e6fa1:  mov    %edi,-0x64(%ebp)
0xf67e6fa4:  mov    %eax,-0x88(%ebp)
0xf67e6faa:  mov    -0x68(%ebp),%eax
0xf67e6fad:  movl   $0x0,-0x50(%ebp)
0xf67e6fb4:  movl   $0x1,(%eax)
0xf67e6fba:  mov    -0x4c(%ebp),%eax
0xf67e6fbd:  mov    0x15c(%eax),%ebx
0xf67e6fc3:  test   %ebx,%ebx
0xf67e6fc5:  je     0xf67e79a0

----------------
IN: 
0xf67e79a0:  mov    0x1f0(%eax),%ecx
0xf67e79a6:  test   %ecx,%ecx
0xf67e79a8:  jne    0xf67e7e9c

----------------
IN: 
0xf67e79ae:  cmp    %eax,-0x80(%ebp)
0xf67e79b1:  je     0xf67e7e9c

----------------
IN: 
0xf67e7e9c:  movl   $0x0,-0x50(%ebp)
0xf67e7ea3:  jmp    0xf67e6fcb

----------------
IN: 
0xf67e6fcb:  mov    -0x4c(%ebp),%eax
0xf67e6fce:  mov    0x24(%eax),%edx
0xf67e6fd1:  test   %edx,%edx
0xf67e6fd3:  je     0xf67e7960

----------------
IN: 
0xf67e6fd9:  mov    -0x4c(%ebp),%edi
0xf67e6fdc:  mov    0x34(%edi),%eax
0xf67e6fdf:  mov    %edi,-0x30(%ebp)
0xf67e6fe2:  mov    0x4(%eax),%eax
0xf67e6fe5:  mov    %eax,-0x58(%ebp)
0xf67e6fe8:  mov    %eax,-0x24(%ebp)
0xf67e6feb:  mov    %edi,%eax
0xf67e6fed:  mov    0x8(%eax),%esi
0xf67e6ff0:  mov    0x8(%ebp),%edi
0xf67e6ff3:  mov    (%esi),%eax
0xf67e6ff5:  mov    %edi,-0x2c(%ebp)
0xf67e6ff8:  mov    0xc(%ebp),%edi
0xf67e6ffb:  test   %eax,%eax
0xf67e6ffd:  mov    %edi,-0x28(%ebp)
0xf67e7000:  je     0xf67e7db7

----------------
IN: 
0xf67e7006:  mov    -0x68(%ebp),%edi
0xf67e7009:  movl   $0x0,-0x54(%ebp)
0xf67e7010:  mov    %edi,-0x74(%ebp)
0xf67e7013:  jmp    0xf67e7035

----------------
IN: 
0xf67e7035:  cmp    $0x1,%eax
0xf67e7038:  jne    0xf67e70d0

----------------
IN: 
0xf67e703e:  mov    -0x58(%ebp),%edi
0xf67e7041:  add    0x4(%esi),%edi
0xf67e7044:  sub    $0x8,%esp
0xf67e7047:  mov    -0x70(%ebp),%ebx
0xf67e704a:  push   $0x24
0xf67e704c:  push   %edi
0xf67e704d:  call   0xf67f2b10


call [pc: f67e7052, cc: f67cfee7]
----------------
IN: 
0xf67f2b10:  push   %edi
0xf67f2b11:  push   %esi
0xf67f2b12:  push   %ebx
0xf67f2b13:  push   %ebp
0xf67f2b14:  mov    0x14(%esp),%eax
0xf67f2b18:  mov    0x18(%esp),%edx
0xf67f2b1c:  mov    %eax,%edi
0xf67f2b1e:  xor    %ecx,%ecx
0xf67f2b20:  mov    %dl,%dh
0xf67f2b22:  mov    %dl,%cl
0xf67f2b24:  shl    $0x10,%edx
0xf67f2b27:  mov    %cl,%ch
0xf67f2b29:  or     %ecx,%edx
0xf67f2b2b:  and    $0x3,%edi
0xf67f2b2e:  je     0xf67f2b71

----------------
IN: 
0xf67f2b30:  mov    %dl,%cl
0xf67f2b32:  jp     0xf67f2b5d

----------------
IN: 
0xf67f2b34:  xor    (%eax),%cl
0xf67f2b36:  je     0xf67f2c9d

----------------
IN: 
0xf67f2b3c:  xor    %dl,%cl
0xf67f2b3e:  je     0xf67f2cca

----------------
IN: 
0xf67f2b44:  mov    0x1(%eax),%cl
0xf67f2b47:  inc    %eax
0xf67f2b48:  cmp    %cl,%dl
0xf67f2b4a:  je     0xf67f2c9d

----------------
IN: 
0xf67f2b50:  cmp    $0x0,%cl
0xf67f2b53:  je     0xf67f2cca

----------------
IN: 
0xf67f2b59:  inc    %eax
0xf67f2b5a:  dec    %edi
0xf67f2b5b:  jne    0xf67f2b71

----------------
IN: 
0xf67f2b5d:  mov    (%eax),%cl
0xf67f2b5f:  cmp    %cl,%dl
0xf67f2b61:  je     0xf67f2c9d

----------------
IN: 
0xf67f2b67:  cmp    $0x0,%cl
0xf67f2b6a:  je     0xf67f2cca

----------------
IN: 
0xf67f2b70:  inc    %eax
0xf67f2b71:  mov    (%eax),%ecx
0xf67f2b73:  mov    $0xfefefeff,%ebp
0xf67f2b78:  mov    $0xfefefeff,%edi
0xf67f2b7d:  add    %ecx,%ebp
0xf67f2b7f:  xor    %ecx,%ebp
0xf67f2b81:  add    %ecx,%edi
0xf67f2b83:  lea    0x4(%eax),%eax
0xf67f2b86:  jae    0xf67f2ca2

----------------
IN: 
0xf67f2b8c:  mov    %ecx,%ebx
0xf67f2b8e:  or     $0xfefefeff,%ebp
0xf67f2b94:  add    $0x1,%ebp
0xf67f2b97:  jne    0xf67f2ca2

----------------
IN: 
0xf67f2b9d:  mov    $0xfefefeff,%esi
0xf67f2ba2:  xor    %edx,%ebx
0xf67f2ba4:  mov    (%eax),%ecx
0xf67f2ba6:  add    %ebx,%esi
0xf67f2ba8:  mov    $0xfefefeff,%edi
0xf67f2bad:  jae    0xf67f2c87

----------------
IN: 
0xf67f2bb3:  mov    %edi,%ebp
0xf67f2bb5:  xor    %ebx,%esi
0xf67f2bb7:  add    %ecx,%ebp
0xf67f2bb9:  or     $0xfefefeff,%esi
0xf67f2bbf:  add    $0x1,%esi
0xf67f2bc2:  jne    0xf67f2c87

----------------
IN: 
0xf67f2bc8:  xor    %ecx,%ebp
0xf67f2bca:  add    %ecx,%edi
0xf67f2bcc:  lea    0x4(%eax),%eax
0xf67f2bcf:  jae    0xf67f2ca2

----------------
IN: 
0xf67f2bd5:  mov    %ecx,%ebx
0xf67f2bd7:  or     $0xfefefeff,%ebp
0xf67f2bdd:  add    $0x1,%ebp
0xf67f2be0:  jne    0xf67f2ca2

----------------
IN: 
0xf67f2ca2:  sub    $0x4,%eax
0xf67f2ca5:  cmp    %dl,%cl
0xf67f2ca7:  je     0xf67f2c9d

----------------
IN: 
0xf67f2ca9:  cmp    $0x0,%cl
0xf67f2cac:  je     0xf67f2cca

----------------
IN: 
0xf67f2cae:  inc    %eax
0xf67f2caf:  cmp    %dl,%ch
0xf67f2cb1:  je     0xf67f2c9d

----------------
IN: 
0xf67f2cb3:  cmp    $0x0,%ch
0xf67f2cb6:  je     0xf67f2cca

----------------
IN: 
0xf67f2cb8:  shr    $0x10,%ecx
0xf67f2cbb:  inc    %eax
0xf67f2cbc:  cmp    %dl,%cl
0xf67f2cbe:  je     0xf67f2c9d

----------------
IN: 
0xf67f2cc0:  cmp    $0x0,%cl
0xf67f2cc3:  je     0xf67f2cca

----------------
IN: 
0xf67f2cca:  xor    %eax,%eax
0xf67f2ccc:  jmp    0xf67f2c9d

----------------
IN: 
0xf67f2c9d:  pop    %ebp
0xf67f2c9e:  pop    %ebx
0xf67f2c9f:  pop    %esi
0xf67f2ca0:  pop    %edi
0xf67f2ca1:  ret    


ret [pc: f67e7052, cc: 00028eb5]
----------------
IN: 
0xf67e7052:  add    $0x10,%esp
0xf67e7055:  test   %eax,%eax
0xf67e7057:  jne    0xf67e7633

----------------
IN: 
0xf67e705d:  lea    -0x30(%ebp),%ebx
0xf67e7060:  sub    $0x8,%esp
0xf67e7063:  mov    %edi,-0x20(%ebp)
0xf67e7066:  lea    -0x39(%ebp),%ecx
0xf67e7069:  lea    -0x38(%ebp),%edx
0xf67e706c:  lea    -0x34(%ebp),%eax
0xf67e706f:  push   %ebx
0xf67e7070:  pushl  -0x64(%ebp)
0xf67e7073:  call   0xf67e9190


call [pc: f67e7078, cc: f67cfecd]
----------------
IN: 
0xf67e9190:  push   %esi
0xf67e9191:  push   %ebx
0xf67e9192:  call   0xf67f3609


call [pc: f67e9197, cc: 00026f5a]

ret [pc: f67e9197, cc: f67cfecd]
----------------
IN: 
0xf67e9197:  add    $0x14e69,%ebx
0xf67e919d:  sub    $0xd4,%esp
0xf67e91a3:  mov    %eax,0x14(%esp)
0xf67e91a7:  mov    %eax,0x24(%esp)
0xf67e91ab:  lea    0x20(%esp),%eax
0xf67e91af:  mov    %edx,0x18(%esp)
0xf67e91b3:  mov    %edx,0x28(%esp)
0xf67e91b7:  mov    %ecx,0x1c(%esp)
0xf67e91bb:  mov    %ecx,0x2c(%esp)
0xf67e91bf:  mov    %eax,0x30(%esp)
0xf67e91c3:  call   *0x538(%ebx)


call [pc: f67e91c9, cc: 00026f04]
----------------
IN: 
0xf67dab10:  call   0xf67f3601


call [pc: f67dab15, cc: f67fc411]

ret [pc: f67dab15, cc: 00026f04]
----------------
IN: 
0xf67dab15:  add    $0x234eb,%eax
0xf67dab1a:  lea    0x858(%eax),%eax
0xf67dab20:  ret    


ret [pc: f67e91c9, cc: f67cfecd]
----------------
IN: 
0xf67e91c9:  mov    (%eax),%ebx
0xf67e91cb:  mov    %eax,%edx
0xf67e91cd:  lea    0x24(%esp),%eax
0xf67e91d1:  mov    %edx,0xc(%esp)
0xf67e91d5:  sub    $0x8,%esp
0xf67e91d8:  mov    %eax,(%edx)
0xf67e91da:  mov    %ebx,0x18(%esp)
0xf67e91de:  push   $0x0
0xf67e91e0:  lea    0x40(%esp),%eax
0xf67e91e4:  push   %eax
0xf67e91e5:  call   0xf67f2950


call [pc: f67e91ea, cc: 00026f27]
----------------
IN: 
0xf67f2950:  mov    0x4(%esp),%eax
0xf67f2954:  mov    %ebx,(%eax)
0xf67f2956:  mov    %esi,0x4(%eax)
0xf67f2959:  mov    %edi,0x8(%eax)
0xf67f295c:  lea    0x4(%esp),%ecx
0xf67f2960:  mov    %ecx,0x10(%eax)
0xf67f2963:  mov    (%esp),%ecx
0xf67f2966:  nop    
0xf67f2967:  mov    %ecx,0x14(%eax)
0xf67f296a:  mov    %ebp,0xc(%eax)
0xf67f296d:  xor    %eax,%eax
0xf67f296f:  ret    


ret [pc: f67e91ea, cc: f67cfecd]
----------------
IN: 
0xf67e91ea:  add    $0x10,%esp
0xf67e91ed:  test   %eax,%eax
0xf67e91ef:  jne    0xf67e9240

----------------
IN: 
0xf67e91f1:  sub    $0xc,%esp
0xf67e91f4:  mov    %eax,%ebx
0xf67e91f6:  pushl  0xf0(%esp)
0xf67e91fd:  call   *0xf0(%esp)


call [pc: f67e9204, cc: 00026cc9]
----------------
IN: 
0xf67e6e60:  push   %ebx
0xf67e6e61:  sub    $0xc,%esp
0xf67e6e64:  mov    0x14(%esp),%ebx
0xf67e6e68:  mov    (%ebx),%eax
0xf67e6e6a:  movzbl 0x194(%eax),%edx
0xf67e6e71:  and    $0x3,%edx
0xf67e6e74:  test   %dl,%dl
0xf67e6e76:  movzbl %dl,%ecx
0xf67e6e79:  mov    $0x1,%edx
0xf67e6e7e:  cmove  %edx,%ecx
0xf67e6e81:  mov    0x10(%ebx),%edx
0xf67e6e84:  pushl  0x18(%eax)
0xf67e6e87:  pushl  0x8(%ebx)
0xf67e6e8a:  pushl  0x4(%ebx)
0xf67e6e8d:  call   0xf67e2160


call [pc: f67e6e92, cc: f67c025b]
----------------
IN: 
0xf67e2160:  push   %ebp
0xf67e2161:  push   %edi
0xf67e2162:  push   %esi
0xf67e2163:  push   %ebx
0xf67e2164:  call   0xf67f3609


call [pc: f67e2169, cc: 00022332]

ret [pc: f67e2169, cc: f67c025b]
----------------
IN: 
0xf67e2169:  add    $0x1be97,%ebx
0xf67e216f:  sub    $0x24c,%esp
0xf67e2175:  mov    %ecx,0x4(%esp)
0xf67e2179:  mov    0x268(%esp),%ecx
0xf67e2180:  test   %ecx,%ecx
0xf67e2182:  js     0xf67e2a8d

----------------
IN: 
0xf67e2188:  mov    %eax,%ebp
0xf67e218a:  mov    0x268(%esp),%eax
0xf67e2191:  cmp    %eax,0x4e0(%ebx)
0xf67e2197:  jbe    0xf67e2acc

----------------
IN: 
0xf67e219d:  lea    0x20(%ebx),%eax
0xf67e21a3:  mov    %edx,%esi
0xf67e21a5:  mov    %eax,%ecx
0xf67e21a7:  mov    %eax,0xc(%esp)
0xf67e21ab:  imul   $0x4c,0x268(%esp),%eax
0xf67e21b3:  mov    (%eax,%ecx,1),%edi
0xf67e21b6:  test   %edi,%edi
0xf67e21b8:  jne    0xf67e21c7

----------------
IN: 
0xf67e21c7:  movzbl 0x195(%edi),%eax
0xf67e21ce:  mov    %eax,%edx
0xf67e21d0:  shr    $0x5,%al
0xf67e21d3:  shr    %dl
0xf67e21d5:  or     %edx,%eax
0xf67e21d7:  test   $0x1,%al
0xf67e21d9:  jne    0xf67e21c0

----------------
IN: 
0xf67e21db:  mov    %edi,%edx
0xf67e21dd:  mov    %esi,%eax
0xf67e21df:  call   0xf67ea160


call [pc: f67e21e4, cc: 000223bf]
----------------
IN: 
0xf67ea160:  push   %edi
0xf67ea161:  push   %esi
0xf67ea162:  mov    %eax,%edi
0xf67ea164:  push   %ebx
0xf67ea165:  mov    %edx,%esi
0xf67ea167:  call   0xf67f3609


call [pc: f67ea16c, cc: f67c82d3]

ret [pc: f67ea16c, cc: 000223bf]
----------------
IN: 
0xf67ea16c:  add    $0x13e94,%ebx
0xf67ea172:  sub    $0x8,%esp
0xf67ea175:  pushl  0x4(%edx)
0xf67ea178:  push   %eax
0xf67ea179:  call   0xf67f2cd0


call [pc: f67ea17e, cc: f67c82c1]

ret [pc: f67ea17e, cc: 000223bf]
----------------
IN: 
0xf67ea17e:  add    $0x10,%esp
0xf67ea181:  test   %eax,%eax
0xf67ea183:  je     0xf67ea1a9

----------------
IN: 
0xf67ea185:  mov    0x1c(%esi),%esi
0xf67ea188:  test   %esi,%esi
0xf67ea18a:  jne    0xf67ea197

----------------
IN: 
0xf67ea197:  sub    $0x8,%esp
0xf67ea19a:  pushl  (%esi)
0xf67ea19c:  push   %edi
0xf67ea19d:  call   0xf67f2cd0


call [pc: f67ea1a2, cc: f67c821d]

ret [pc: f67ea1a2, cc: 000223bf]
----------------
IN: 
0xf67ea1a2:  add    $0x10,%esp
0xf67ea1a5:  test   %eax,%eax
0xf67ea1a7:  jne    0xf67ea190

----------------
IN: 
0xf67ea190:  mov    0x4(%esi),%esi
0xf67ea193:  test   %esi,%esi
0xf67ea195:  je     0xf67ea1b8

----------------
IN: 
0xf67ea1b8:  pop    %ebx
0xf67ea1b9:  xor    %eax,%eax
0xf67ea1bb:  pop    %esi
0xf67ea1bc:  pop    %edi
0xf67ea1bd:  ret    


ret [pc: f67e21e4, cc: f67c025b]
----------------
IN: 
0xf67e21e4:  test   %eax,%eax
0xf67e21e6:  jne    0xf67e22a0

----------------
IN: 
0xf67e21ec:  testb  $0x1,0x195(%edi)
0xf67e21f3:  jne    0xf67e21c0

----------------
IN: 
0xf67e21f5:  mov    0x58(%edi),%eax
0xf67e21f8:  test   %eax,%eax
0xf67e21fa:  je     0xf67e21c0

----------------
IN: 
0xf67e21c0:  mov    0xc(%edi),%edi
0xf67e21c3:  test   %edi,%edi
0xf67e21c5:  je     0xf67e2238


call [pc: f67e21e4, cc: 000223bf]

call [pc: f67ea16c, cc: f67c82d3]

ret [pc: f67ea16c, cc: 000223bf]

call [pc: f67ea17e, cc: f67c82c1]

ret [pc: f67ea17e, cc: 000223bf]

call [pc: f67ea1a2, cc: f67c821d]

ret [pc: f67ea1a2, cc: 000223bf]

call [pc: f67ea1a2, cc: f67c821d]
----------------
IN: 
0xf67f2cde:  inc    %ecx
0xf67f2cdf:  inc    %edx
0xf67f2ce0:  test   %al,%al
0xf67f2ce2:  jne    0xf67f2cd8

----------------
IN: 
0xf67f2cd8:  mov    (%ecx),%al
0xf67f2cda:  cmp    (%edx),%al
0xf67f2cdc:  jne    0xf67f2ce7


ret [pc: f67ea1a2, cc: 000223bf]

ret [pc: f67e21e4, cc: f67c025b]
----------------
IN: 
0xf67e21fc:  mov    0x34(%edi),%edx
0xf67e21ff:  mov    0x4(%eax),%eax
0xf67e2202:  sub    $0x8,%esp
0xf67e2205:  add    0x4(%edx),%eax
0xf67e2208:  push   %eax
0xf67e2209:  push   %esi
0xf67e220a:  call   0xf67f2cd0


call [pc: f67e220f, cc: 00022054]

ret [pc: f67e220f, cc: f67c025b]
----------------
IN: 
0xf67e220f:  add    $0x10,%esp
0xf67e2212:  test   %eax,%eax
0xf67e2214:  jne    0xf67e21c0

----------------
IN: 
0xf67e2238:  test   %ebp,%ebp
0xf67e223a:  setne  0x8(%esp)
0xf67e223f:  testb  $0x40,-0x300(%ebx)
0xf67e2246:  movzbl 0x8(%esp),%eax
0xf67e224b:  je     0xf67e22af

----------------
IN: 
0xf67e22af:  mov    0x264(%esp),%eax
0xf67e22b6:  and    $0x10000000,%eax
0xf67e22bb:  mov    %eax,0x1c(%esp)
0xf67e22bf:  mov    -0xf4(%ebx),%eax
0xf67e22c5:  movl   $0x0,0x10(%esp)
0xf67e22cd:  test   %eax,%eax
0xf67e22cf:  jne    0xf67e2668

----------------
IN: 
0xf67e22d5:  movb   $0x0,0x33(%esp)
0xf67e22da:  sub    $0x8,%esp
0xf67e22dd:  push   $0x2f
0xf67e22df:  push   %esi
0xf67e22e0:  call   0xf67f2b10


call [pc: f67e22e5, cc: 000220be]

ret [pc: f67e22e5, cc: f67c025b]
----------------
IN: 
0xf67e22e5:  add    $0x10,%esp
0xf67e22e8:  test   %eax,%eax
0xf67e22ea:  je     0xf67e2434

----------------
IN: 
0xf67e2434:  sub    $0xc,%esp
0xf67e2437:  push   %esi
0xf67e2438:  call   0xf67f2d50


call [pc: f67e243d, cc: 00022666]
----------------
IN: 
0xf67f2d67:  inc    %eax
0xf67f2d68:  cmp    %dh,(%eax)
0xf67f2d6a:  je     0xf67f2e06

----------------
IN: 
0xf67f2d70:  inc    %eax
0xf67f2d71:  xor    $0x2,%edx
0xf67f2d74:  je     0xf67f2d81

----------------
IN: 
0xf67f2dab:  xor    %ecx,%edx
0xf67f2dad:  and    $0x1010100,%edx
0xf67f2db3:  jne    0xf67f2de9


ret [pc: f67e243d, cc: f67c025b]
----------------
IN: 
0xf67e243d:  add    $0x10,%esp
0xf67e2440:  add    $0x1,%eax
0xf67e2443:  testb  $0x1,-0x300(%ebx)
0xf67e244a:  mov    %eax,0x14(%esp)
0xf67e244e:  jne    0xf67e293c

----------------
IN: 
0xf67e2454:  test   %ebp,%ebp
0xf67e2456:  je     0xf67e25a5

----------------
IN: 
0xf67e245c:  mov    0x94(%ebp),%eax
0xf67e2462:  test   %eax,%eax
0xf67e2464:  je     0xf67e25a5

----------------
IN: 
0xf67e25a5:  mov    0x20(%ebx),%eax
0xf67e25ab:  test   %ebp,%ebp
0xf67e25ad:  mov    %eax,0x24(%esp)
0xf67e25b1:  je     0xf67e286c

----------------
IN: 
0xf67e25b7:  lea    -0x91c0(%ebx),%eax
0xf67e25bd:  mov    %ebp,%edi
0xf67e25bf:  movb   $0x0,0x28(%esp)
0xf67e25c4:  mov    %esi,0x18(%esp)
0xf67e25c8:  mov    %eax,0x2c(%esp)
0xf67e25cc:  lea    0x33(%esp),%eax
0xf67e25d0:  mov    %eax,0x20(%esp)
0xf67e25d4:  jmp    0xf67e262e

----------------
IN: 
0xf67e262e:  mov    0x198(%edi),%eax
0xf67e2634:  lea    0x198(%edi),%esi
0xf67e263a:  cmp    $0xffffffff,%eax
0xf67e263d:  je     0xf67e2620

----------------
IN: 
0xf67e2620:  mov    0x16c(%edi),%edi
0xf67e2626:  test   %edi,%edi
0xf67e2628:  je     0xf67e285d

----------------
IN: 
0xf67e285d:  cmpb   $0x0,0x28(%esp)
0xf67e2862:  mov    0x18(%esp),%esi
0xf67e2866:  jne    0xf67e297a

----------------
IN: 
0xf67e286c:  mov    0x24(%esp),%ecx
0xf67e2870:  test   %ecx,%ecx
0xf67e2872:  je     0xf67e246a

----------------
IN: 
0xf67e2878:  movzbl 0x194(%ecx),%eax
0xf67e287f:  mov    %al,0x18(%esp)
0xf67e2883:  and    $0x3,%eax
0xf67e2886:  cmp    $0x2,%al
0xf67e2888:  je     0xf67e246a

----------------
IN: 
0xf67e288e:  mov    %ecx,%eax
0xf67e2890:  lea    0x198(%ecx),%ecx
0xf67e2896:  mov    0x198(%eax),%eax
0xf67e289c:  mov    %ecx,0x18(%esp)
0xf67e28a0:  cmp    $0xffffffff,%eax
0xf67e28a3:  je     0xf67e246a

----------------
IN: 
0xf67e246a:  cmpl   $0xffffffff,-0xdc(%ebx)
0xf67e2471:  je     0xf67e2990

----------------
IN: 
0xf67e2990:  test   %ebp,%ebp
0xf67e2992:  jne    0xf67e24bc

----------------
IN: 
0xf67e24bc:  lea    0x1e8(%ebp),%eax
0xf67e24c2:  mov    %eax,0x8(%esp)
0xf67e24c6:  mov    0x1e8(%ebp),%eax
0xf67e24cc:  cmp    $0xffffffff,%eax
0xf67e24cf:  je     0xf67e2774

----------------
IN: 
0xf67e2774:  testl  $0x4000000,0x264(%esp)
0xf67e277f:  movl   $0x0,0x34(%esp)
0xf67e2787:  jne    0xf67e2a7a

----------------
IN: 
0xf67e278d:  mov    -0x2ec(%ebx),%ecx
0xf67e2793:  test   %ecx,%ecx
0xf67e2795:  jne    0xf67e27fe

----------------
IN: 
0xf67e2797:  mov    %esi,%eax
0xf67e2799:  call   0xf67ef110


call [pc: f67e279e, cc: 000225c5]
----------------
IN: 
0xf67ef110:  push   %ebp
0xf67ef111:  mov    %esp,%ebp
0xf67ef113:  push   %edi
0xf67ef114:  push   %esi
0xf67ef115:  call   0xf67f3611


call [pc: f67ef11a, cc: f67cd4df]

ret [pc: f67ef11a, cc: 000225c5]
----------------
IN: 
0xf67ef11a:  add    $0xeee6,%edi
0xf67ef120:  push   %ebx
0xf67ef121:  sub    $0x5c,%esp
0xf67ef124:  testb  $0x1,-0x300(%edi)
0xf67ef12b:  mov    %edi,-0x28(%ebp)
0xf67ef12e:  mov    %eax,-0x1c(%ebp)
0xf67ef131:  jne    0xf67ef5b8

----------------
IN: 
0xf67ef137:  mov    -0x28(%ebp),%eax
0xf67ef13a:  mov    0x8d4(%eax),%esi
0xf67ef140:  test   %esi,%esi
0xf67ef142:  je     0xf67ef48d

----------------
IN: 
0xf67ef48d:  lea    0x8cc(%eax),%edx
0xf67ef493:  mov    %eax,%edi
0xf67ef495:  lea    -0x8b97(%eax),%eax
0xf67ef49b:  mov    $0x1,%ecx
0xf67ef4a0:  call   0xf67ea050


call [pc: f67ef4a5, cc: f67cd160]
----------------
IN: 
0xf67ea050:  push   %edi
0xf67ea051:  push   %esi
0xf67ea052:  mov    %ecx,%edi
0xf67ea054:  push   %ebx
0xf67ea055:  mov    %edx,%esi
0xf67ea057:  sub    $0x68,%esp
0xf67ea05a:  push   $0x80000
0xf67ea05f:  push   %eax
0xf67ea060:  call   0xf67f2700


call [pc: f67ea065, cc: 00027105]
----------------
IN: 
0xf67f2700:  push   %ebx
0xf67f2701:  mov    0x10(%esp),%edx
0xf67f2705:  mov    0xc(%esp),%ecx
0xf67f2709:  mov    0x8(%esp),%ebx
0xf67f270d:  mov    $0x5,%eax
0xf67f2712:  int    $0x80

----------------
IN: 
0xf67f2714:  pop    %ebx
0xf67f2715:  cmp    $0xfffff001,%eax
0xf67f271a:  jae    0xf67f1de0

----------------
IN: 
0xf67f2720:  ret    


ret [pc: f67ea065, cc: f67cd160]
----------------
IN: 
0xf67ea065:  add    $0x10,%esp
0xf67ea068:  test   %eax,%eax
0xf67ea06a:  js     0xf67ea0b0

----------------
IN: 
0xf67ea06c:  sub    $0x4,%esp
0xf67ea06f:  mov    %eax,%ebx
0xf67ea071:  lea    0x4(%esp),%eax
0xf67ea075:  push   %eax
0xf67ea076:  push   %ebx
0xf67ea077:  push   $0x3
0xf67ea079:  call   0xf67f2680


call [pc: f67ea07e, cc: 0002711e]
----------------
IN: 
0xf67f2680:  push   %ebx
0xf67f2681:  mov    $0xc5,%eax
0xf67f2686:  mov    0x10(%esp),%ecx
0xf67f268a:  call   0xf67f3605


call [pc: f67f268f, cc: f67d5791]

ret [pc: f67f268f, cc: 0002711e]
----------------
IN: 
0xf67f268f:  add    $0xb971,%edx
0xf67f2695:  mov    0xc(%esp),%ebx
0xf67f2699:  int    $0x80

----------------
IN: 
0xf67f269b:  cmp    $0xfffff000,%eax
0xf67f26a0:  ja     0xf67f26a8

----------------
IN: 
0xf67f26a2:  pop    %ebx
0xf67f26a3:  ret    


ret [pc: f67ea07e, cc: f67cd160]
----------------
IN: 
0xf67ea07e:  add    $0x10,%esp
0xf67ea081:  test   %eax,%eax
0xf67ea083:  js     0xf67ea08f

----------------
IN: 
0xf67ea085:  mov    0x2c(%esp),%eax
0xf67ea089:  test   %eax,%eax
0xf67ea08b:  mov    %eax,(%esi)
0xf67ea08d:  jne    0xf67ea0c0

----------------
IN: 
0xf67ea0c0:  sub    $0x8,%esp
0xf67ea0c3:  push   $0x0
0xf67ea0c5:  push   %ebx
0xf67ea0c6:  push   $0x2
0xf67ea0c8:  push   %edi
0xf67ea0c9:  push   %eax
0xf67ea0ca:  push   $0x0
0xf67ea0cc:  call   0xf67f2840


call [pc: f67ea0d1, cc: 000271b1]

call [pc: f67f2849, cc: f67d59f8]

ret [pc: f67f2849, cc: 000271b1]

ret [pc: f67ea0d1, cc: f67cd160]
----------------
IN: 
0xf67ea0d1:  add    $0x20,%esp
0xf67ea0d4:  mov    %eax,%esi
0xf67ea0d6:  jmp    0xf67ea094

----------------
IN: 
0xf67ea094:  sub    $0xc,%esp
0xf67ea097:  push   %ebx
0xf67ea098:  call   0xf67f2820


call [pc: f67ea09d, cc: 000271fd]
----------------
IN: 
0xf67f2820:  mov    %ebx,%edx
0xf67f2822:  mov    0x4(%esp),%ebx
0xf67f2826:  mov    $0x6,%eax
0xf67f282b:  int    $0x80

----------------
IN: 
0xf67f282d:  mov    %edx,%ebx
0xf67f282f:  cmp    $0xfffff001,%eax
0xf67f2834:  jae    0xf67f1de0

----------------
IN: 
0xf67f283a:  ret    


ret [pc: f67ea09d, cc: f67cd160]
----------------
IN: 
0xf67ea09d:  add    $0x10,%esp
0xf67ea0a0:  mov    %esi,%eax
0xf67ea0a2:  add    $0x60,%esp
0xf67ea0a5:  pop    %ebx
0xf67ea0a6:  pop    %esi
0xf67ea0a7:  pop    %edi
0xf67ea0a8:  ret    


ret [pc: f67ef4a5, cc: 000225c5]
----------------
IN: 
0xf67ef4a5:  cmp    $0xffffffff,%eax
0xf67ef4a8:  mov    %eax,%esi
0xf67ef4aa:  je     0xf67ef702

----------------
IN: 
0xf67ef4b0:  mov    0x8cc(%edi),%ebx
0xf67ef4b6:  cmp    $0x10,%ebx
0xf67ef4b9:  jbe    0xf67ef6f5

----------------
IN: 
0xf67ef4bf:  lea    -0x8b74(%edi),%eax
0xf67ef4c5:  sub    $0x4,%esp
0xf67ef4c8:  push   $0xb
0xf67ef4ca:  push   %eax
0xf67ef4cb:  push   %esi
0xf67ef4cc:  call   0xf67f3050


call [pc: f67ef4d1, cc: f67cd114]
----------------
IN: 
0xf67f3050:  push   %ebx
0xf67f3051:  mov    0x8(%esp),%eax
0xf67f3055:  mov    0xc(%esp),%edx
0xf67f3059:  mov    0x10(%esp),%ecx
0xf67f305d:  cmp    $0x1,%ecx
0xf67f3060:  jne    0xf67f3074

----------------
IN: 
0xf67f3074:  jl     0xf67f3069

----------------
IN: 
0xf67f3076:  push   %esi
0xf67f3077:  mov    %eax,%esi
0xf67f3079:  cmp    $0x20,%ecx
0xf67f307c:  jge    0xf67f3290

----------------
IN: 
0xf67f3082:  call   0xf67f3609


call [pc: f67f3087, cc: 0003e193]

ret [pc: f67f3087, cc: f67cd114]
----------------
IN: 
0xf67f3087:  add    $0x16a5,%ebx
0xf67f308d:  add    (%ebx,%ecx,4),%ebx
0xf67f3090:  add    %ecx,%edx
0xf67f3092:  add    %ecx,%esi
0xf67f3094:  jmp    *%ebx

----------------
IN: 
0xf67f3240:  mov    -0xb(%esi),%eax
0xf67f3243:  mov    -0xb(%edx),%ecx
0xf67f3246:  cmp    %ecx,%eax
0xf67f3248:  jne    0xf67f3307

----------------
IN: 
0xf67f324e:  mov    -0x7(%esi),%eax
0xf67f3251:  mov    -0x7(%edx),%ecx
0xf67f3254:  cmp    %ecx,%eax
0xf67f3256:  jne    0xf67f3307

----------------
IN: 
0xf67f325c:  movzwl -0x3(%esi),%eax
0xf67f3260:  movzwl -0x3(%edx),%ecx
0xf67f3264:  cmp    %cl,%al
0xf67f3266:  jne    0xf67f331b

----------------
IN: 
0xf67f326c:  cmp    %ecx,%eax
0xf67f326e:  jne    0xf67f331b

----------------
IN: 
0xf67f3274:  movzbl -0x1(%esi),%eax
0xf67f3278:  cmp    -0x1(%edx),%al
0xf67f327b:  jne    0xf67f331b

----------------
IN: 
0xf67f3281:  pop    %esi
0xf67f3282:  xor    %eax,%eax
0xf67f3284:  pop    %ebx
0xf67f3285:  ret    


ret [pc: f67ef4d1, cc: 000225c5]
----------------
IN: 
0xf67ef4d1:  add    $0x10,%esp
0xf67ef4d4:  test   %eax,%eax
0xf67ef4d6:  jne    0xf67ef730

----------------
IN: 
0xf67ef4dc:  mov    0xc(%esi),%eax
0xf67ef4df:  mov    %esi,0x8d4(%edi)
0xf67ef4e5:  lea    (%eax,%eax,2),%eax
0xf67ef4e8:  lea    0x10(,%eax,4),%eax
0xf67ef4ef:  lea    (%esi,%eax,1),%edx
0xf67ef4f2:  add    $0x30,%eax
0xf67ef4f5:  cmp    %eax,%ebx
0xf67ef4f7:  mov    %edx,0x8d0(%edi)
0xf67ef4fd:  jb     0xf67ef51c

----------------
IN: 
0xf67ef4ff:  lea    -0x8b68(%edi),%eax
0xf67ef505:  sub    $0x4,%esp
0xf67ef508:  push   $0x14
0xf67ef50a:  push   %eax
0xf67ef50b:  push   %edx
0xf67ef50c:  call   0xf67f3050


call [pc: f67ef511, cc: f67cd0d4]

call [pc: f67f3087, cc: 0003e053]

ret [pc: f67f3087, cc: f67cd0d4]
----------------
IN: 
0xf67f30bc:  mov    -0x14(%esi),%eax
0xf67f30bf:  mov    -0x14(%edx),%ecx
0xf67f30c2:  cmp    %ecx,%eax
0xf67f30c4:  jne    0xf67f3307

----------------
IN: 
0xf67f30ca:  mov    -0x10(%esi),%eax
0xf67f30cd:  mov    -0x10(%edx),%ecx
0xf67f30d0:  cmp    %ecx,%eax
0xf67f30d2:  jne    0xf67f3307

----------------
IN: 
0xf67f30d8:  mov    -0xc(%esi),%eax
0xf67f30db:  mov    -0xc(%edx),%ecx
0xf67f30de:  cmp    %ecx,%eax
0xf67f30e0:  jne    0xf67f3307

----------------
IN: 
0xf67f30e6:  mov    -0x8(%esi),%eax
0xf67f30e9:  mov    -0x8(%edx),%ecx
0xf67f30ec:  cmp    %ecx,%eax
0xf67f30ee:  jne    0xf67f3307

----------------
IN: 
0xf67f30f4:  mov    -0x4(%esi),%eax
0xf67f30f7:  mov    -0x4(%edx),%ecx
0xf67f30fa:  cmp    %ecx,%eax
0xf67f30fc:  jne    0xf67f3307

----------------
IN: 
0xf67f3102:  pop    %esi
0xf67f3103:  xor    %eax,%eax
0xf67f3105:  pop    %ebx
0xf67f3106:  ret    


ret [pc: f67ef511, cc: 000225c5]
----------------
IN: 
0xf67ef511:  add    $0x10,%esp
0xf67ef514:  test   %eax,%eax
0xf67ef516:  je     0xf67ef15a

----------------
IN: 
0xf67ef15a:  mov    -0x28(%ebp),%eax
0xf67ef15d:  mov    0x8d0(%eax),%eax
0xf67ef163:  cmp    $0xffffffff,%eax
0xf67ef166:  mov    %eax,-0x20(%ebp)
0xf67ef169:  je     0xf67ef530

----------------
IN: 
0xf67ef16f:  mov    -0x28(%ebp),%edi
0xf67ef172:  add    %ebx,%esi
0xf67ef174:  sub    -0x20(%ebp),%esi
0xf67ef177:  mov    -0x2f8(%edi),%eax
0xf67ef17d:  mov    %esi,-0x24(%ebp)
0xf67ef180:  test   %eax,%eax
0xf67ef182:  mov    %eax,-0x2c(%ebp)
0xf67ef185:  je     0xf67ef1b4

----------------
IN: 
0xf67ef187:  lea    -0x168(%edi),%esi
0xf67ef18d:  xor    %edi,%edi
0xf67ef18f:  sub    $0x8,%esp
0xf67ef192:  mov    -0x28(%ebp),%ebx
0xf67ef195:  push   %esi
0xf67ef196:  pushl  -0x2c(%ebp)
0xf67ef199:  call   0xf67f2cd0


call [pc: f67ef19e, cc: f67cd45b]

ret [pc: f67ef19e, cc: 000225c5]
----------------
IN: 
0xf67ef19e:  add    $0x10,%esp
0xf67ef1a1:  test   %eax,%eax
0xf67ef1a3:  je     0xf67ef260

----------------
IN: 
0xf67ef1a9:  add    $0x1,%edi
0xf67ef1ac:  add    $0x5,%esi
0xf67ef1af:  cmp    $0x4,%edi
0xf67ef1b2:  jne    0xf67ef18f

----------------
IN: 
0xf67ef18f:  sub    $0x8,%esp
0xf67ef192:  mov    -0x28(%ebp),%ebx
0xf67ef195:  push   %esi
0xf67ef196:  pushl  -0x2c(%ebp)
0xf67ef199:  call   0xf67f2cd0


call [pc: f67ef19e, cc: f67cd45b]

ret [pc: f67ef19e, cc: 000225c5]

call [pc: f67ef19e, cc: f67cd45b]

ret [pc: f67ef19e, cc: 000225c5]

call [pc: f67ef19e, cc: f67cd45b]
----------------
IN: 
0xf67f2ce4:  xor    %eax,%eax
0xf67f2ce6:  ret    


ret [pc: f67ef19e, cc: 000225c5]
----------------
IN: 
0xf67ef260:  lea    0x30(%edi),%ecx
0xf67ef263:  xor    %eax,%eax
0xf67ef265:  xor    %edx,%edx
0xf67ef267:  test   $0x20,%cl
0xf67ef26a:  sete   %al
0xf67ef26d:  setne  %dl
0xf67ef270:  shl    %cl,%edx
0xf67ef272:  shl    %cl,%eax
0xf67ef274:  mov    %eax,-0x48(%ebp)
0xf67ef277:  mov    %edx,-0x44(%ebp)
0xf67ef27a:  jmp    0xf67ef1c2

----------------
IN: 
0xf67ef1c2:  mov    -0x28(%ebp),%edi
0xf67ef1c5:  sub    $0x8,%esp
0xf67ef1c8:  push   $0x0
0xf67ef1ca:  lea    -0x903b(%edi),%eax
0xf67ef1d0:  push   %eax
0xf67ef1d1:  call   0xf67f27c0


call [pc: f67ef1d6, cc: f67cd413]

call [pc: f67f1de5, cc: 0003c9f6]

ret [pc: f67f1de5, cc: f67cd413]

ret [pc: f67ef1d6, cc: 000225c5]
----------------
IN: 
0xf67ef1d6:  mov    %eax,-0x58(%ebp)
0xf67ef1d9:  mov    0x8d0(%edi),%eax
0xf67ef1df:  add    $0x10,%esp
0xf67ef1e2:  mov    %eax,%ebx
0xf67ef1e4:  mov    %eax,-0x2c(%ebp)
0xf67ef1e7:  mov    0x14(%eax),%eax
0xf67ef1ea:  mov    %eax,-0x30(%ebp)
0xf67ef1ed:  sub    $0x1,%eax
0xf67ef1f0:  mov    %eax,%esi
0xf67ef1f2:  js     0xf67ef24c

----------------
IN: 
0xf67ef1f4:  mov    %eax,%edi
0xf67ef1f6:  sar    %edi
0xf67ef1f8:  lea    (%edi,%edi,2),%eax
0xf67ef1fb:  mov    0x34(%ebx,%eax,8),%edx
0xf67ef1ff:  cmp    %edx,-0x24(%ebp)
0xf67ef202:  jbe    0xf67ef24c

----------------
IN: 
0xf67ef204:  xor    %ebx,%ebx
0xf67ef206:  jmp    0xf67ef234

----------------
IN: 
0xf67ef234:  add    -0x20(%ebp),%edx
0xf67ef237:  mov    -0x1c(%ebp),%eax
0xf67ef23a:  call   0xf67eeff0


call [pc: f67ef23f, cc: f67cd7fa]
----------------
IN: 
0xf67eeff0:  push   %ebp
0xf67eeff1:  push   %edi
0xf67eeff2:  push   %esi
0xf67eeff3:  push   %ebx
0xf67eeff4:  sub    $0x8,%esp
0xf67eeff7:  mov    %esi,%esi
0xf67eeff9:  lea    0x0(%edi),%edi
0xf67ef000:  movsbl (%eax),%ebx
0xf67ef003:  test   %bl,%bl
0xf67ef005:  je     0xf67ef0d4

----------------
IN: 
0xf67ef00b:  lea    -0x30(%ebx),%ecx
0xf67ef00e:  cmp    $0x9,%cl
0xf67ef011:  ja     0xf67ef0b0

----------------
IN: 
0xf67ef0b0:  movzbl (%edx),%edi
0xf67ef0b3:  lea    -0x30(%edi),%esi
0xf67ef0b6:  mov    %esi,%ecx
0xf67ef0b8:  cmp    $0x9,%cl
0xf67ef0bb:  jbe    0xf67ef0e1

----------------
IN: 
0xf67ef0bd:  mov    %edi,%ecx
0xf67ef0bf:  cmp    %cl,%bl
0xf67ef0c1:  jne    0xf67ef0ee

----------------
IN: 
0xf67ef0c3:  add    $0x1,%eax
0xf67ef0c6:  movsbl (%eax),%ebx
0xf67ef0c9:  add    $0x1,%edx
0xf67ef0cc:  test   %bl,%bl
0xf67ef0ce:  jne    0xf67ef00b

----------------
IN: 
0xf67ef0ee:  add    $0x8,%esp
0xf67ef0f1:  mov    %ebx,%eax
0xf67ef0f3:  movsbl %cl,%ecx
0xf67ef0f6:  pop    %ebx
0xf67ef0f7:  sub    %ecx,%eax
0xf67ef0f9:  pop    %esi
0xf67ef0fa:  pop    %edi
0xf67ef0fb:  pop    %ebp
0xf67ef0fc:  ret    


ret [pc: f67ef23f, cc: 000225c5]
----------------
IN: 
0xf67ef23f:  test   %eax,%eax
0xf67ef241:  je     0xf67ef280

----------------
IN: 
0xf67ef243:  jns    0xf67ef210

----------------
IN: 
0xf67ef245:  lea    0x1(%edi),%ebx
0xf67ef248:  cmp    %ebx,%esi
0xf67ef24a:  jge    0xf67ef217

----------------
IN: 
0xf67ef217:  lea    (%esi,%ebx,1),%eax
0xf67ef21a:  mov    %eax,%ecx
0xf67ef21c:  shr    $0x1f,%ecx
0xf67ef21f:  add    %eax,%ecx
0xf67ef221:  sar    %ecx
0xf67ef223:  lea    (%ecx,%ecx,2),%eax
0xf67ef226:  mov    %ecx,%edi
0xf67ef228:  mov    -0x2c(%ebp),%ecx
0xf67ef22b:  mov    0x34(%ecx,%eax,8),%edx
0xf67ef22f:  cmp    %edx,-0x24(%ebp)
0xf67ef232:  jbe    0xf67ef24c


call [pc: f67ef23f, cc: f67cd7fa]

ret [pc: f67ef23f, cc: 000225c5]

call [pc: f67ef23f, cc: f67cd7fa]

ret [pc: f67ef23f, cc: 000225c5]
----------------
IN: 
0xf67ef210:  lea    -0x1(%edi),%esi
0xf67ef213:  cmp    %ebx,%esi
0xf67ef215:  jl     0xf67ef24c


call [pc: f67ef23f, cc: f67cd7fa]

ret [pc: f67ef23f, cc: 000225c5]

call [pc: f67ef23f, cc: f67cd7fa]

ret [pc: f67ef23f, cc: 000225c5]

call [pc: f67ef23f, cc: f67cd7fa]

ret [pc: f67ef23f, cc: 000225c5]

call [pc: f67ef23f, cc: f67cd7fa]

ret [pc: f67ef23f, cc: 000225c5]

call [pc: f67ef23f, cc: f67cd7fa]
----------------
IN: 
0xf67ef017:  movzbl (%edx),%ecx
0xf67ef01a:  lea    -0x30(%ecx),%esi
0xf67ef01d:  mov    %cl,0x7(%esp)
0xf67ef021:  mov    %esi,%ecx
0xf67ef023:  cmp    $0x9,%cl
0xf67ef026:  ja     0xf67ef0fd

----------------
IN: 
0xf67ef02c:  movsbl 0x1(%eax),%ecx
0xf67ef030:  movsbl 0x7(%esp),%esi
0xf67ef035:  lea    0x1(%eax),%ebp
0xf67ef038:  lea    -0x30(%ebx),%edi
0xf67ef03b:  mov    %edi,(%esp)
0xf67ef03e:  lea    0x1(%edx),%edi
0xf67ef041:  lea    -0x30(%ecx),%eax
0xf67ef044:  sub    $0x30,%esi
0xf67ef047:  cmp    $0x9,%al
0xf67ef049:  mov    %ebp,%eax
0xf67ef04b:  ja     0xf67ef06d

----------------
IN: 
0xf67ef06d:  movsbl 0x1(%edx),%ecx
0xf67ef071:  lea    -0x30(%ecx),%edx
0xf67ef074:  cmp    $0x9,%dl
0xf67ef077:  mov    %edi,%edx
0xf67ef079:  ja     0xf67ef097

----------------
IN: 
0xf67ef097:  cmp    (%esp),%esi
0xf67ef09a:  je     0xf67ef000

----------------
IN: 
0xf67ef000:  movsbl (%eax),%ebx
0xf67ef003:  test   %bl,%bl
0xf67ef005:  je     0xf67ef0d4

----------------
IN: 
0xf67ef0d4:  movsbl (%edx),%eax
0xf67ef0d7:  add    $0x8,%esp
0xf67ef0da:  pop    %ebx
0xf67ef0db:  pop    %esi
0xf67ef0dc:  pop    %edi
0xf67ef0dd:  neg    %eax
0xf67ef0df:  pop    %ebp
0xf67ef0e0:  ret    


ret [pc: f67ef23f, cc: 000225c5]
----------------
IN: 
0xf67ef280:  mov    -0x28(%ebp),%eax
0xf67ef283:  test   %edi,%edi
0xf67ef285:  mov    %esi,-0x30(%ebp)
0xf67ef288:  mov    -0x2c0(%eax),%ebx
0xf67ef28e:  mov    %ebx,-0x4c(%ebp)
0xf67ef291:  mov    -0x2bc(%eax),%ebx
0xf67ef297:  mov    %ebx,-0x3c(%ebp)
0xf67ef29a:  mov    -0x2b8(%eax),%ebx
0xf67ef2a0:  mov    -0x2b4(%eax),%eax
0xf67ef2a6:  mov    %ebx,-0x50(%ebp)
0xf67ef2a9:  mov    %eax,-0x40(%ebp)
0xf67ef2ac:  jle    0xf67ef714

----------------
IN: 
0xf67ef2b2:  lea    -0x1(%edi),%ebx
0xf67ef2b5:  mov    -0x2c(%ebp),%esi
0xf67ef2b8:  lea    (%ebx,%ebx,2),%eax
0xf67ef2bb:  mov    0x34(%esi,%eax,8),%edx
0xf67ef2bf:  cmp    -0x24(%ebp),%edx
0xf67ef2c2:  jae    0xf67ef714

----------------
IN: 
0xf67ef2c8:  mov    -0x2c(%ebp),%esi
0xf67ef2cb:  lea    (%edi,%edi,2),%eax
0xf67ef2ce:  mov    %edi,-0x34(%ebp)
0xf67ef2d1:  lea    (%esi,%eax,8),%esi
0xf67ef2d4:  mov    %esi,%edi
0xf67ef2d6:  jmp    0xf67ef2f4

----------------
IN: 
0xf67ef2f4:  add    -0x20(%ebp),%edx
0xf67ef2f7:  mov    -0x1c(%ebp),%eax
0xf67ef2fa:  lea    0x1(%ebx),%esi
0xf67ef2fd:  call   0xf67eeff0


call [pc: f67ef302, cc: f67cd6c7]

ret [pc: f67ef302, cc: 000225c5]
----------------
IN: 
0xf67ef302:  test   %eax,%eax
0xf67ef304:  je     0xf67ef2e0

----------------
IN: 
0xf67ef2e0:  test   %ebx,%ebx
0xf67ef2e2:  je     0xf67ef310

----------------
IN: 
0xf67ef2e4:  sub    $0x18,%edi
0xf67ef2e7:  mov    0x1c(%edi),%edx
0xf67ef2ea:  cmp    %edx,-0x24(%ebp)
0xf67ef2ed:  lea    -0x1(%ebx),%eax
0xf67ef2f0:  jbe    0xf67ef310

----------------
IN: 
0xf67ef2f2:  mov    %eax,%ebx
0xf67ef2f4:  add    -0x20(%ebp),%edx
0xf67ef2f7:  mov    -0x1c(%ebp),%eax
0xf67ef2fa:  lea    0x1(%ebx),%esi
0xf67ef2fd:  call   0xf67eeff0


call [pc: f67ef302, cc: f67cd6c7]

ret [pc: f67ef302, cc: 000225c5]

call [pc: f67ef302, cc: f67cd6c7]

ret [pc: f67ef302, cc: 000225c5]
----------------
IN: 
0xf67ef306:  mov    -0x34(%ebp),%edi
0xf67ef309:  mov    %esi,%ebx
0xf67ef30b:  jmp    0xf67ef313

----------------
IN: 
0xf67ef313:  mov    -0x28(%ebp),%eax
0xf67ef316:  movl   $0x0,-0x34(%ebp)
0xf67ef31d:  mov    -0x2c4(%eax),%esi
0xf67ef323:  mov    -0x2fc(%eax),%eax
0xf67ef329:  mov    %esi,-0x38(%ebp)
0xf67ef32c:  mov    -0x2c(%ebp),%esi
0xf67ef32f:  mov    %eax,-0x5c(%ebp)
0xf67ef332:  lea    (%ebx,%ebx,2),%eax
0xf67ef335:  mov    %edi,-0x2c(%ebp)
0xf67ef338:  mov    -0x24(%ebp),%edi
0xf67ef33b:  lea    (%esi,%eax,8),%esi
0xf67ef33e:  mov    -0x3c(%ebp),%eax
0xf67ef341:  and    -0x40(%ebp),%eax
0xf67ef344:  or     $0x800f0000,%eax
0xf67ef349:  mov    %eax,-0x54(%ebp)
0xf67ef34c:  jmp    0xf67ef35f

----------------
IN: 
0xf67ef35f:  cmp    -0x2c(%ebp),%ebx
0xf67ef362:  jle    0xf67ef382

----------------
IN: 
0xf67ef382:  mov    0x30(%esi),%eax
0xf67ef385:  mov    %eax,%edx
0xf67ef387:  and    $0xfffffffd,%edx
0xf67ef38a:  cmp    $0x1,%edx
0xf67ef38d:  jne    0xf67ef350

----------------
IN: 
0xf67ef350:  add    $0x1,%ebx
0xf67ef353:  add    $0x18,%esi
0xf67ef356:  cmp    -0x30(%ebp),%ebx
0xf67ef359:  jg     0xf67ef430

----------------
IN: 
0xf67ef38f:  mov    0x38(%esi),%ecx
0xf67ef392:  cmp    %ecx,%edi
0xf67ef394:  mov    %ecx,-0x24(%ebp)
0xf67ef397:  jbe    0xf67ef350

----------------
IN: 
0xf67ef399:  mov    -0x34(%ebp),%edx
0xf67ef39c:  test   %edx,%edx
0xf67ef39e:  je     0xf67ef3a5

----------------
IN: 
0xf67ef3a5:  mov    0x40(%esi),%ecx
0xf67ef3a8:  mov    %ecx,-0x40(%ebp)
0xf67ef3ab:  mov    0x44(%esi),%ecx
0xf67ef3ae:  mov    -0x40(%ebp),%edx
0xf67ef3b1:  mov    %ecx,-0x3c(%ebp)
0xf67ef3b4:  mov    -0x4c(%ebp),%ecx
0xf67ef3b7:  and    -0x50(%ebp),%ecx
0xf67ef3ba:  not    %ecx
0xf67ef3bc:  and    %ecx,%edx
0xf67ef3be:  mov    -0x54(%ebp),%ecx
0xf67ef3c1:  not    %ecx
0xf67ef3c3:  and    -0x3c(%ebp),%ecx
0xf67ef3c6:  or     %ecx,%edx
0xf67ef3c8:  jne    0xf67ef350

----------------
IN: 
0xf67ef3ca:  mov    -0x5c(%ebp),%ecx
0xf67ef3cd:  test   %ecx,%ecx
0xf67ef3cf:  je     0xf67ef3da

----------------
IN: 
0xf67ef3d1:  cmp    0x3c(%esi),%ecx
0xf67ef3d4:  jb     0xf67ef350

----------------
IN: 
0xf67ef3da:  mov    -0x58(%ebp),%ecx
0xf67ef3dd:  test   %ecx,%ecx
0xf67ef3df:  jne    0xf67ef3ed

----------------
IN: 
0xf67ef3ed:  mov    -0x3c(%ebp),%ecx
0xf67ef3f0:  and    $0xf0000,%ecx
0xf67ef3f6:  mov    %ecx,%edx
0xf67ef3f8:  mov    -0x48(%ebp),%ecx
0xf67ef3fb:  mov    %edx,-0x40(%ebp)
0xf67ef3fe:  mov    %ecx,-0x3c(%ebp)
0xf67ef401:  mov    -0x44(%ebp),%ecx
0xf67ef404:  xor    %edx,%ecx
0xf67ef406:  mov    %ecx,%edx
0xf67ef408:  mov    -0x3c(%ebp),%ecx
0xf67ef40b:  or     %ecx,%edx
0xf67ef40d:  je     0xf67ef41a

----------------
IN: 
0xf67ef40f:  mov    -0x40(%ebp),%edx
0xf67ef412:  test   %edx,%edx
0xf67ef414:  jne    0xf67ef350

----------------
IN: 
0xf67ef41a:  mov    -0x24(%ebp),%edx
0xf67ef41d:  add    -0x20(%ebp),%edx
0xf67ef420:  cmp    -0x38(%ebp),%eax
0xf67ef423:  mov    %edx,-0x34(%ebp)
0xf67ef426:  jne    0xf67ef350

----------------
IN: 
0xf67ef42c:  lea    0x0(%esi),%esi
0xf67ef430:  mov    -0x28(%ebp),%eax
0xf67ef433:  testb  $0x1,-0x300(%eax)
0xf67ef43a:  jne    0xf67ef64d

----------------
IN: 
0xf67ef440:  mov    -0x34(%ebp),%eax
0xf67ef443:  test   %eax,%eax
0xf67ef445:  je     0xf67ef24c

----------------
IN: 
0xf67ef44b:  mov    -0x34(%ebp),%edi
0xf67ef44e:  sub    $0xc,%esp
0xf67ef451:  push   %edi
0xf67ef452:  call   0xf67f2d50


call [pc: f67ef457, cc: f67cd192]
----------------
IN: 
0xf67f2db5:  mov    (%eax),%ecx
0xf67f2db7:  add    $0x4,%eax
0xf67f2dba:  sub    %ecx,%edx
0xf67f2dbc:  add    $0xfefefeff,%ecx
0xf67f2dc2:  dec    %edx
0xf67f2dc3:  jae    0xf67f2de9

----------------
IN: 
0xf67f2dc5:  xor    %ecx,%edx
0xf67f2dc7:  and    $0x1010100,%edx
0xf67f2dcd:  jne    0xf67f2de9

----------------
IN: 
0xf67f2dcf:  mov    (%eax),%ecx
0xf67f2dd1:  add    $0x4,%eax
0xf67f2dd4:  sub    %ecx,%edx
0xf67f2dd6:  add    $0xfefefeff,%ecx
0xf67f2ddc:  dec    %edx
0xf67f2ddd:  jae    0xf67f2de9

----------------
IN: 
0xf67f2ddf:  xor    %ecx,%edx
0xf67f2de1:  and    $0x1010100,%edx
0xf67f2de7:  je     0xf67f2d81


ret [pc: f67ef457, cc: 000225c5]
----------------
IN: 
0xf67ef457:  lea    0x1(%eax),%edx
0xf67ef45a:  add    $0x1f,%eax
0xf67ef45d:  add    $0x10,%esp
0xf67ef460:  and    $0xfffffff0,%eax
0xf67ef463:  mov    -0x28(%ebp),%ebx
0xf67ef466:  sub    %eax,%esp
0xf67ef468:  lea    0xf(%esp),%esi
0xf67ef46c:  sub    $0x4,%esp
0xf67ef46f:  push   %edx
0xf67ef470:  push   %edi
0xf67ef471:  and    $0xfffffff0,%esi
0xf67ef474:  push   %esi
0xf67ef475:  call   0xf67f34a0


call [pc: f67ef47a, cc: f67cd1bf]
----------------
IN: 
0xf67f34ba:  cmp    $0x3,%ecx
0xf67f34bd:  jbe    0xf67f34f6

----------------
IN: 
0xf67f34bf:  test   $0x3,%esi
0xf67f34c5:  je     0xf67f34dd

----------------
IN: 
0xf67f34dd:  push   %eax
0xf67f34de:  mov    %ecx,%eax
0xf67f34e0:  shr    $0x2,%ecx
0xf67f34e3:  and    $0x3,%eax
0xf67f34e6:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0xf67f34e6:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0xf67f34e8:  mov    %eax,%ecx
0xf67f34ea:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0xf67f34ea:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0xf67f34ec:  pop    %eax
0xf67f34ed:  mov    %eax,%edi
0xf67f34ef:  mov    %edx,%esi
0xf67f34f1:  mov    0x4(%esp),%eax
0xf67f34f5:  ret    


ret [pc: f67ef47a, cc: 000225c5]
----------------
IN: 
0xf67ef47a:  mov    %esi,(%esp)
0xf67ef47d:  call   0xf67f2d00


call [pc: f67ef482, cc: f67cd147]
----------------
IN: 
0xf67f2d00:  push   %edi
0xf67f2d01:  push   %esi
0xf67f2d02:  push   %ebx
0xf67f2d03:  mov    0x10(%esp),%edi
0xf67f2d07:  call   0xf67f3609


call [pc: f67f2d0c, cc: 0003fc4b]

ret [pc: f67f2d0c, cc: f67cd147]
----------------
IN: 
0xf67f2d0c:  add    $0xb2f4,%ebx
0xf67f2d12:  sub    $0xc,%esp
0xf67f2d15:  push   %edi
0xf67f2d16:  call   0xf67f2d50


call [pc: f67f2d1b, cc: 0003fc5c]

ret [pc: f67f2d1b, cc: f67cd147]
----------------
IN: 
0xf67f2d1b:  lea    0x1(%eax),%esi
0xf67f2d1e:  mov    %esi,(%esp)
0xf67f2d21:  call   0xf67da820


call [pc: f67f2d26, cc: 0003fc61]

call [pc: f67f0e96, cc: f67cf2f7]

ret [pc: f67f0e96, cc: 0003fc61]

call [pc: f67f0eaa, cc: f67cf2cb]

call [pc: f67f0dcc, cc: 0003ff07]

ret [pc: f67f0dcc, cc: f67cf2cb]

ret [pc: f67f0eaa, cc: 0003fc61]

ret [pc: f67f2d26, cc: f67cd147]
----------------
IN: 
0xf67f2d26:  add    $0x10,%esp
0xf67f2d29:  test   %eax,%eax
0xf67f2d2b:  je     0xf67f2d40

----------------
IN: 
0xf67f2d2d:  sub    $0x4,%esp
0xf67f2d30:  push   %esi
0xf67f2d31:  push   %edi
0xf67f2d32:  push   %eax
0xf67f2d33:  call   0xf67f34a0


call [pc: f67f2d38, cc: 0003fc7f]

ret [pc: f67f2d38, cc: f67cd147]
----------------
IN: 
0xf67f2d38:  add    $0x10,%esp
0xf67f2d3b:  pop    %ebx
0xf67f2d3c:  pop    %esi
0xf67f2d3d:  pop    %edi
0xf67f2d3e:  ret    


ret [pc: f67ef482, cc: 000225c5]
----------------
IN: 
0xf67ef482:  add    $0x10,%esp
0xf67ef485:  lea    -0xc(%ebp),%esp
0xf67ef488:  pop    %ebx
0xf67ef489:  pop    %esi
0xf67ef48a:  pop    %edi
0xf67ef48b:  pop    %ebp
0xf67ef48c:  ret    


ret [pc: f67e279e, cc: f67c025b]
----------------
IN: 
0xf67e279e:  test   %eax,%eax
0xf67e27a0:  mov    %eax,0x8(%esp)
0xf67e27a4:  je     0xf67e27fe

----------------
IN: 
0xf67e27a6:  test   %ebp,%ebp
0xf67e27a8:  je     0xf67e2a38

----------------
IN: 
0xf67e27ae:  testb  $0x8,0x205(%ebp)
0xf67e27b5:  jne    0xf67e29e6

----------------
IN: 
0xf67e27bb:  mov    %ebp,%ecx
0xf67e27bd:  lea    0x3c(%esp),%edi
0xf67e27c1:  push   $0x0
0xf67e27c3:  lea    0x37(%esp),%eax
0xf67e27c7:  mov    %edi,%edx
0xf67e27c9:  push   %eax
0xf67e27ca:  pushl  0x26c(%esp)
0xf67e27d1:  push   $0x8
0xf67e27d3:  mov    0x18(%esp),%edi
0xf67e27d7:  mov    %edi,%eax
0xf67e27d9:  call   0xf67e05f0


call [pc: f67e27de, cc: 00022585]
----------------
IN: 
0xf67e05f0:  push   %ebp
0xf67e05f1:  mov    %esp,%ebp
0xf67e05f3:  push   %edi
0xf67e05f4:  push   %esi
0xf67e05f5:  push   %ebx
0xf67e05f6:  mov    %edx,%esi
0xf67e05f8:  call   0xf67f3609


call [pc: f67e05fd, cc: f67c2078]

ret [pc: f67e05fd, cc: 00022585]
----------------
IN: 
0xf67e05fd:  add    $0x1da03,%ebx
0xf67e0603:  sub    $0x3c,%esp
0xf67e0606:  mov    0x14(%ebp),%edi
0xf67e0609:  mov    %eax,-0x24(%ebp)
0xf67e060c:  mov    -0xf4(%ebx),%edx
0xf67e0612:  mov    %ebx,-0x1c(%ebp)
0xf67e0615:  mov    %edi,-0x30(%ebp)
0xf67e0618:  test   %edx,%edx
0xf67e061a:  je     0xf67e0630

----------------
IN: 
0xf67e0630:  sub    $0x8,%esp
0xf67e0633:  push   $0x80000
0xf67e0638:  pushl  -0x24(%ebp)
0xf67e063b:  call   0xf67f2700


call [pc: f67e0640, cc: f67c23c5]

ret [pc: f67e0640, cc: 00022585]
----------------
IN: 
0xf67e0640:  add    $0x10,%esp
0xf67e0643:  cmp    $0xffffffff,%eax
0xf67e0646:  mov    %eax,-0x28(%ebp)
0xf67e0649:  je     0xf67e08d1

----------------
IN: 
0xf67e064f:  mov    -0x1c(%ebp),%eax
0xf67e0652:  xor    %edi,%edi
0xf67e0654:  mov    $0x200,%ebx
0xf67e0659:  movl   $0x0,0x900(%eax)
0xf67e0663:  lea    0x4(%esi),%eax
0xf67e0666:  movl   $0x0,(%esi)
0xf67e066c:  mov    %eax,-0x2c(%ebp)
0xf67e066f:  mov    %ebx,%eax
0xf67e0671:  sub    $0x4,%esp
0xf67e0674:  sub    %edi,%eax
0xf67e0676:  add    -0x2c(%ebp),%edi
0xf67e0679:  push   %eax
0xf67e067a:  push   %edi
0xf67e067b:  pushl  -0x28(%ebp)
0xf67e067e:  call   0xf67f2730


call [pc: f67e0683, cc: f67c2306]
----------------
IN: 
0xf67f2730:  push   %ebx
0xf67f2731:  mov    0x10(%esp),%edx
0xf67f2735:  mov    0xc(%esp),%ecx
0xf67f2739:  mov    0x8(%esp),%ebx
0xf67f273d:  mov    $0x3,%eax
0xf67f2742:  int    $0x80

----------------
IN: 
0xf67f2744:  pop    %ebx
0xf67f2745:  cmp    $0xfffff001,%eax
0xf67f274a:  jae    0xf67f1de0

----------------
IN: 
0xf67f2750:  ret    


ret [pc: f67e0683, cc: 00022585]
----------------
IN: 
0xf67e0683:  add    $0x10,%esp
0xf67e0686:  test   %eax,%eax
0xf67e0688:  jle    0xf67e0b00

----------------
IN: 
0xf67e068e:  add    (%esi),%eax
0xf67e0690:  cmp    $0x33,%eax
0xf67e0693:  mov    %eax,%edi
0xf67e0695:  mov    %eax,(%esi)
0xf67e0697:  jbe    0xf67e066f

----------------
IN: 
0xf67e0699:  cmp    $0x33,%edi
0xf67e069c:  jle    0xf67e0a10

----------------
IN: 
0xf67e06a2:  mov    -0x1c(%ebp),%eax
0xf67e06a5:  sub    $0x4,%esp
0xf67e06a8:  push   $0x8
0xf67e06aa:  lea    -0xa4a4(%eax),%eax
0xf67e06b0:  push   %eax
0xf67e06b1:  pushl  -0x2c(%ebp)
0xf67e06b4:  call   0xf67f3050


call [pc: f67e06b9, cc: f67c233c]

call [pc: f67f3087, cc: 000313bb]

ret [pc: f67f3087, cc: f67c233c]
----------------
IN: 
0xf67f3307:  cmp    %cl,%al
0xf67f3309:  jne    0xf67f331b

----------------
IN: 
0xf67f330b:  cmp    %ch,%ah
0xf67f330d:  jne    0xf67f331b

----------------
IN: 
0xf67f330f:  shr    $0x10,%eax
0xf67f3312:  shr    $0x10,%ecx
0xf67f3315:  cmp    %cl,%al
0xf67f3317:  jne    0xf67f331b

----------------
IN: 
0xf67f3319:  cmp    %ecx,%eax
0xf67f331b:  sbb    %eax,%eax
0xf67f331d:  sbb    $0xffffffff,%eax
0xf67f3320:  pop    %esi
0xf67f3321:  pop    %ebx
0xf67f3322:  ret    


ret [pc: f67e06b9, cc: 00022585]
----------------
IN: 
0xf67e06b9:  add    $0x10,%esp
0xf67e06bc:  test   %eax,%eax
0xf67e06be:  jne    0xf67e0a30

----------------
IN: 
0xf67e0a30:  mov    -0x1c(%ebp),%eax
0xf67e0a33:  sub    $0x4,%esp
0xf67e0a36:  push   $0x8
0xf67e0a38:  lea    -0xa4b0(%eax),%eax
0xf67e0a3e:  push   %eax
0xf67e0a3f:  pushl  -0x2c(%ebp)
0xf67e0a42:  call   0xf67f3050


call [pc: f67e0a47, cc: f67c2fc2]

call [pc: f67f3087, cc: 00031f45]

ret [pc: f67f3087, cc: f67c2fc2]

ret [pc: f67e0a47, cc: 00022585]
----------------
IN: 
0xf67e0a47:  add    $0x10,%esp
0xf67e0a4a:  test   %eax,%eax
0xf67e0a4c:  je     0xf67e06c4

----------------
IN: 
0xf67e06c4:  movzbl 0xc(%esi),%eax
0xf67e06c8:  test   %al,%al
0xf67e06ca:  jne    0xf67e0848

----------------
IN: 
0xf67e06d0:  mov    -0x1c(%ebp),%eax
0xf67e06d3:  sub    $0x4,%esp
0xf67e06d6:  push   $0x7
0xf67e06d8:  lea    -0xa49b(%eax),%eax
0xf67e06de:  push   %eax
0xf67e06df:  lea    0xd(%esi),%eax
0xf67e06e2:  push   %eax
0xf67e06e3:  call   0xf67f3050


call [pc: f67e06e8, cc: f67c236d]

call [pc: f67f3087, cc: 000313ea]

ret [pc: f67f3087, cc: f67c236d]

ret [pc: f67e06e8, cc: 00022585]
----------------
IN: 
0xf67e06e8:  add    $0x10,%esp
0xf67e06eb:  test   %eax,%eax
0xf67e06ed:  jne    0xf67e0856

----------------
IN: 
0xf67e06f3:  cmpl   $0x1,0x18(%esi)
0xf67e06f7:  jne    0xf67e0b10

----------------
IN: 
0xf67e06fd:  cmpw   $0x3,0x16(%esi)
0xf67e0702:  jne    0xf67e08b6

----------------
IN: 
0xf67e0708:  movzwl 0x14(%esi),%eax
0xf67e070c:  lea    -0x2(%eax),%edx
0xf67e070f:  cmp    $0x1,%dx
0xf67e0713:  ja     0xf67e0b20

----------------
IN: 
0xf67e0719:  cmp    $0x2,%ax
0xf67e071d:  je     0xf67e0b30

----------------
IN: 
0xf67e0723:  cmpw   $0x20,0x2e(%esi)
0xf67e0728:  jne    0xf67e0b50

----------------
IN: 
0xf67e072e:  movzwl 0x30(%esi),%eax
0xf67e0732:  mov    0x20(%esi),%edx
0xf67e0735:  mov    %eax,%ebx
0xf67e0737:  shl    $0x5,%ebx
0xf67e073a:  lea    (%ebx,%edx,1),%ecx
0xf67e073d:  cmp    %edi,%ecx
0xf67e073f:  ja     0xf67e08e0

----------------
IN: 
0xf67e0745:  add    -0x2c(%ebp),%edx
0xf67e0748:  mov    %edx,-0x20(%ebp)
0xf67e074b:  mov    -0x20(%ebp),%ecx
0xf67e074e:  add    %ecx,%ebx
0xf67e0750:  cmp    %ebx,%ecx
0xf67e0752:  jae    0xf67e083a

----------------
IN: 
0xf67e0758:  mov    %ecx,%ebx
0xf67e075a:  mov    -0x1c(%ebp),%ecx
0xf67e075d:  mov    %esi,-0x34(%ebp)
0xf67e0760:  lea    -0xa4c0(%ecx),%ecx
0xf67e0766:  mov    %ecx,-0x3c(%ebp)
0xf67e0769:  jmp    0xf67e0783

----------------
IN: 
0xf67e0783:  cmpl   $0x4,(%ebx)
0xf67e0786:  jne    0xf67e0770

----------------
IN: 
0xf67e0770:  mov    %eax,%edx
0xf67e0772:  add    $0x20,%ebx
0xf67e0775:  shl    $0x5,%edx
0xf67e0778:  add    -0x20(%ebp),%edx
0xf67e077b:  cmp    %edx,%ebx
0xf67e077d:  jae    0xf67e083a

----------------
IN: 
0xf67e0788:  mov    0x10(%ebx),%esi
0xf67e078b:  cmp    $0x1f,%esi
0xf67e078e:  jbe    0xf67e0770

----------------
IN: 
0xf67e0790:  cmpl   $0x3,0x1c(%ebx)
0xf67e0794:  jbe    0xf67e0770

----------------
IN: 
0xf67e0796:  mov    0x4(%ebx),%eax
0xf67e0799:  mov    -0x34(%ebp),%edi
0xf67e079c:  lea    (%esi,%eax,1),%ecx
0xf67e079f:  cmp    (%edi),%ecx
0xf67e07a1:  ja     0xf67e0a60

----------------
IN: 
0xf67e07a7:  mov    -0x2c(%ebp),%ecx
0xf67e07aa:  mov    %ebx,-0x38(%ebp)
0xf67e07ad:  mov    %esi,%ebx
0xf67e07af:  mov    -0x3c(%ebp),%esi
0xf67e07b2:  lea    (%ecx,%eax,1),%edi
0xf67e07b5:  jmp    0xf67e07e4

----------------
IN: 
0xf67e07e4:  sub    $0x4,%esp
0xf67e07e7:  push   $0x10
0xf67e07e9:  push   %esi
0xf67e07ea:  push   %edi
0xf67e07eb:  call   0xf67f3050


call [pc: f67e07f0, cc: f67c2275]

call [pc: f67f3087, cc: 000312f2]

ret [pc: f67f3087, cc: f67c2275]
----------------
IN: 
0xf67f331b:  sbb    %eax,%eax
0xf67f331d:  sbb    $0xffffffff,%eax
0xf67f3320:  pop    %esi
0xf67f3321:  pop    %ebx
0xf67f3322:  ret    


ret [pc: f67e07f0, cc: 00022585]
----------------
IN: 
0xf67e07f0:  add    $0x10,%esp
0xf67e07f3:  test   %eax,%eax
0xf67e07f5:  jne    0xf67e07c0

----------------
IN: 
0xf67e07c0:  mov    (%edi),%eax
0xf67e07c2:  lea    0x3(%eax),%ecx
0xf67e07c5:  mov    0x4(%edi),%eax
0xf67e07c8:  and    $0xfffffffc,%ecx
0xf67e07cb:  add    $0x3,%eax
0xf67e07ce:  and    $0xfffffffc,%eax
0xf67e07d1:  lea    0xc(%ecx,%eax,1),%eax
0xf67e07d5:  lea    -0x20(%ebx),%ecx
0xf67e07d8:  cmp    %ecx,%eax
0xf67e07da:  ja     0xf67e0980

----------------
IN: 
0xf67e07e0:  sub    %eax,%ebx
0xf67e07e2:  add    %eax,%edi
0xf67e07e4:  sub    $0x4,%esp
0xf67e07e7:  push   $0x10
0xf67e07e9:  push   %esi
0xf67e07ea:  push   %edi
0xf67e07eb:  call   0xf67f3050


call [pc: f67e07f0, cc: f67c2275]

call [pc: f67f3087, cc: 000312f2]

ret [pc: f67f3087, cc: f67c2275]

ret [pc: f67e07f0, cc: 00022585]
----------------
IN: 
0xf67e07f7:  mov    %ebx,%esi
0xf67e07f9:  mov    -0x38(%ebp),%ebx
0xf67e07fc:  test   %esi,%esi
0xf67e07fe:  je     0xf67e0b6e

----------------
IN: 
0xf67e0804:  movzbl 0x14(%edi),%eax
0xf67e0808:  movzbl 0x18(%edi),%edx
0xf67e080c:  shl    $0x8,%eax
0xf67e080f:  add    %edx,%eax
0xf67e0811:  movzbl 0x1c(%edi),%edx
0xf67e0815:  shl    $0x8,%eax
0xf67e0818:  add    %edx,%eax
0xf67e081a:  mov    0x10(%edi),%edx
0xf67e081d:  test   %edx,%edx
0xf67e081f:  jne    0xf67e08b6

----------------
IN: 
0xf67e0825:  mov    -0x1c(%ebp),%ecx
0xf67e0828:  mov    -0x2fc(%ecx),%edx
0xf67e082e:  test   %edx,%edx
0xf67e0830:  je     0xf67e083a

----------------
IN: 
0xf67e0832:  cmp    %edx,%eax
0xf67e0834:  ja     0xf67e08b6

----------------
IN: 
0xf67e083a:  mov    -0x28(%ebp),%eax
0xf67e083d:  lea    -0xc(%ebp),%esp
0xf67e0840:  pop    %ebx
0xf67e0841:  pop    %esi
0xf67e0842:  pop    %edi
0xf67e0843:  pop    %ebp
0xf67e0844:  ret    


ret [pc: f67e27de, cc: f67c025b]
----------------
IN: 
0xf67e27de:  add    $0x10,%esp
0xf67e27e1:  cmp    $0xffffffff,%eax
0xf67e27e4:  je     0xf67e27ef

----------------
IN: 
0xf67e27e6:  mov    %edi,0x34(%esp)
0xf67e27ea:  jmp    0xf67e2514

----------------
IN: 
0xf67e2514:  testb  $0x1,-0x300(%ebx)
0xf67e251b:  jne    0xf67e295b

----------------
IN: 
0xf67e2521:  mov    0x1c(%esp),%edx
0xf67e2525:  test   %edx,%edx
0xf67e2527:  mov    $0x0,%edx
0xf67e252c:  cmovne %edx,%ebp
0xf67e252f:  cmp    $0xffffffff,%eax
0xf67e2532:  je     0xf67e23a1

----------------
IN: 
0xf67e2538:  lea    0x3c(%esp),%edi
0xf67e253c:  jmp    0xf67e2346

----------------
IN: 
0xf67e2346:  mov    -0xcc(%ebx),%edx
0xf67e234c:  sub    $0x4,%esp
0xf67e234f:  mov    %eax,%ecx
0xf67e2351:  mov    %esi,%eax
0xf67e2353:  mov    %edx,0x3c(%esp)
0xf67e2357:  pushl  0x26c(%esp)
0xf67e235e:  lea    0x40(%esp),%edx
0xf67e2362:  push   %edx
0xf67e2363:  pushl  0x270(%esp)
0xf67e236a:  pushl  0x14(%esp)
0xf67e236e:  push   %ebp
0xf67e236f:  pushl  0x4c(%esp)
0xf67e2373:  push   %edi
0xf67e2374:  mov    0x30(%esp),%edx
0xf67e2378:  call   0xf67df1c0


call [pc: f67e237d, cc: 00022126]
----------------
IN: 
0xf67df1c0:  push   %ebp
0xf67df1c1:  mov    %esp,%ebp
0xf67df1c3:  push   %edi
0xf67df1c4:  push   %esi
0xf67df1c5:  push   %ebx
0xf67df1c6:  call   0xf67f3611


call [pc: f67df1cb, cc: f67fd0ed]

ret [pc: f67df1cb, cc: 00022126]
----------------
IN: 
0xf67df1cb:  add    $0x1ee35,%edi
0xf67df1d1:  sub    $0xdc,%esp
0xf67df1d7:  mov    %edx,-0xc4(%ebp)
0xf67df1dd:  mov    0x20(%ebp),%edx
0xf67df1e0:  mov    %eax,-0x9c(%ebp)
0xf67df1e6:  xor    %eax,%eax
0xf67df1e8:  mov    %edi,-0x80(%ebp)
0xf67df1eb:  mov    %ecx,-0xa0(%ebp)
0xf67df1f1:  mov    %edi,%ebx
0xf67df1f3:  mov    %ecx,%edi
0xf67df1f5:  call   0xf67e9b60


call [pc: f67df1fa, cc: f67fd0dc]

call [pc: f67e9b66, cc: 00014bba]

ret [pc: f67e9b66, cc: f67fd0dc]
----------------
IN: 
0xf67e9b80:  test   %eax,%eax
0xf67e9b82:  je     0xf67e9ba3

----------------
IN: 
0xf67e9ba3:  mov    %ecx,%eax
0xf67e9ba5:  pop    %ebx
0xf67e9ba6:  ret    


ret [pc: f67df1fa, cc: 00022126]
----------------
IN: 
0xf67df1fa:  mov    %eax,-0xa4(%ebp)
0xf67df200:  lea    -0x78(%ebp),%eax
0xf67df203:  sub    $0x4,%esp
0xf67df206:  mov    %eax,-0xc8(%ebp)
0xf67df20c:  push   %eax
0xf67df20d:  push   %edi
0xf67df20e:  push   $0x3
0xf67df210:  call   0xf67f2680


call [pc: f67df215, cc: f67fd333]

call [pc: f67f268f, cc: 0000f5bc]

ret [pc: f67f268f, cc: f67fd333]

ret [pc: f67df215, cc: 00022126]
----------------
IN: 
0xf67df215:  add    $0x10,%esp
0xf67df218:  test   %eax,%eax
0xf67df21a:  js     0xf67df8d0

----------------
IN: 
0xf67df220:  mov    -0x78(%ebp),%eax
0xf67df223:  mov    %eax,-0xb4(%ebp)
0xf67df229:  mov    -0x74(%ebp),%eax
0xf67df22c:  mov    %eax,-0xb8(%ebp)
0xf67df232:  mov    -0x20(%ebp),%eax
0xf67df235:  mov    %eax,-0x94(%ebp)
0xf67df23b:  mov    -0x1c(%ebp),%eax
0xf67df23e:  mov    %eax,-0xbc(%ebp)
0xf67df244:  lea    0x20,%eax
0xf67df24a:  mov    %eax,-0xcc(%ebp)
0xf67df250:  add    %ebx,%eax
0xf67df252:  mov    %eax,%ebx
0xf67df254:  mov    %eax,-0xd0(%ebp)
0xf67df25a:  imul   $0x4c,0x20(%ebp),%eax
0xf67df25e:  mov    (%eax,%ebx,1),%esi
0xf67df261:  test   %esi,%esi
0xf67df263:  je     0xf67df2f0

----------------
IN: 
0xf67df269:  mov    -0xb4(%ebp),%ecx
0xf67df26f:  mov    -0xb8(%ebp),%ebx
0xf67df275:  mov    -0xbc(%ebp),%edi
0xf67df27b:  jmp    0xf67df287

----------------
IN: 
0xf67df287:  testb  $0x20,0x195(%esi)
0xf67df28e:  jne    0xf67df280

----------------
IN: 
0xf67df290:  mov    0x1dc(%esi),%edx
0xf67df296:  mov    0x1d8(%esi),%eax
0xf67df29c:  xor    %ebx,%edx
0xf67df29e:  xor    %ecx,%eax
0xf67df2a0:  or     %eax,%edx
0xf67df2a2:  jne    0xf67df280

----------------
IN: 
0xf67df280:  mov    0xc(%esi),%esi
0xf67df283:  test   %esi,%esi
0xf67df285:  je     0xf67df2f0

----------------
IN: 
0xf67df2f0:  mov    0x20(%ebp),%esi
0xf67df2f3:  test   %esi,%esi
0xf67df2f5:  jne    0xf67dfe50

----------------
IN: 
0xf67df2fb:  testb  $0x4,0x18(%ebp)
0xf67df2ff:  jne    0xf67e00b8

----------------
IN: 
0xf67df305:  mov    -0x80(%ebp),%eax
0xf67df308:  testb  $0x40,-0x300(%eax)
0xf67df30f:  jne    0xf67df7fc

----------------
IN: 
0xf67df315:  mov    -0xa4(%ebp),%eax
0xf67df31b:  mov    0xc(%eax),%eax
0xf67df31e:  test   %eax,%eax
0xf67df320:  je     0xf67df480

----------------
IN: 
0xf67df326:  cmp    $0x1,%eax
0xf67df329:  jne    0xf67e0578

----------------
IN: 
0xf67df32f:  movb   $0x0,-0xbd(%ebp)
0xf67df336:  sub    $0x4,%esp
0xf67df339:  mov    -0x9c(%ebp),%edx
0xf67df33f:  pushl  0x20(%ebp)
0xf67df342:  pushl  0x18(%ebp)
0xf67df345:  pushl  0x10(%ebp)
0xf67df348:  mov    0x14(%ebp),%ecx
0xf67df34b:  mov    0xc(%ebp),%eax
0xf67df34e:  call   0xf67e49a0


call [pc: f67df353, cc: f67fd275]

call [pc: f67e49a9, cc: 00019bdc]

ret [pc: f67e49a9, cc: f67fd275]

call [pc: f67e49c8, cc: 00019bbd]

ret [pc: f67e49c8, cc: f67fd275]

call [pc: f67e4a05, cc: 00019870]

call [pc: f67f0ec0, cc: f67e96b0]

ret [pc: f67f0ec0, cc: 00019870]

call [pc: f67f0ef9, cc: f67e9689]

call [pc: f67f0e96, cc: 0001981f]

ret [pc: f67f0e96, cc: f67e9689]

call [pc: f67f0eaa, cc: 00019823]

call [pc: f67f0dcc, cc: f67e95ef]

ret [pc: f67f0dcc, cc: 00019823]

ret [pc: f67f0eaa, cc: f67e9689]

ret [pc: f67f0ef9, cc: 00019870]

ret [pc: f67e4a05, cc: f67fd275]

call [pc: f67e4a44, cc: 00019831]
----------------
IN: 
0xf67f34fb:  shr    %ecx
0xf67f34fd:  jae    0xf67f3501

----------------
IN: 
0xf67f34ff:  movsw  %ds:(%esi),%es:(%edi)
0xf67f3501:  rep movsl %ds:(%esi),%es:(%edi)


ret [pc: f67e4a44, cc: f67fd275]
----------------
IN: 
0xf67e4ae0:  add    $0x15c,%eax
0xf67e4ae5:  test   %edi,%edi
0xf67e4ae7:  mov    %eax,0x1b8(%esi)
0xf67e4aed:  je     0xf67e4ce0

----------------
IN: 
0xf67e4af3:  mov    $0x1,%ecx
0xf67e4af8:  jmp    0xf67e4b02

----------------
IN: 
0xf67e4b02:  mov    0x16c(%edi),%eax
0xf67e4b08:  test   %eax,%eax
0xf67e4b0a:  jne    0xf67e4b00

----------------
IN: 
0xf67e4b0c:  test   %ecx,%ecx
0xf67e4b0e:  jne    0xf67e4c30

----------------
IN: 
0xf67e4c30:  mov    0x1b8(%esi),%eax
0xf67e4c36:  add    $0x15c,%edi
0xf67e4c3c:  lea    0x15c(%esi),%ecx
0xf67e4c42:  cmp    %eax,%edi
0xf67e4c44:  je     0xf67e4b33

----------------
IN: 
0xf67e4b33:  test   %dl,%dl
0xf67e4b35:  mov    %ecx,0x1d0(%esi)
0xf67e4b3b:  mov    %esi,%eax
0xf67e4b3d:  mov    %dl,0x8(%esp)
0xf67e4b41:  je     0xf67e4be5

----------------
IN: 
0xf67e4b47:  sub    $0xc,%esp
0xf67e4b4a:  pushl  0x1c(%esp)
0xf67e4b4e:  call   0xf67f2d50


call [pc: f67e4b53, cc: 00019926]

ret [pc: f67e4b53, cc: f67fd275]
----------------
IN: 
0xf67e4b53:  add    $0x10,%esp
0xf67e4b56:  movzbl 0x8(%esp),%edx
0xf67e4b5b:  mov    %eax,0xc(%esp)
0xf67e4b5f:  xor    %ecx,%ecx
0xf67e4b61:  add    $0x1,%eax
0xf67e4b64:  mov    %eax,0x18(%esp)
0xf67e4b68:  mov    %eax,%edi
0xf67e4b6a:  cmp    $0x2f,%dl
0xf67e4b6d:  je     0xf67e4cfb

----------------
IN: 
0xf67e4cfb:  sub    $0xc,%esp
0xf67e4cfe:  pushl  0x24(%esp)
0xf67e4d02:  call   0xf67da820


call [pc: f67e4d07, cc: 00019f72]

call [pc: f67f0e96, cc: f67e91e4]

ret [pc: f67f0e96, cc: 00019f72]

call [pc: f67f0eaa, cc: f67e91d8]

call [pc: f67f0dcc, cc: 00019c14]

ret [pc: f67f0dcc, cc: f67e91d8]

ret [pc: f67f0eaa, cc: 00019f72]

ret [pc: f67e4d07, cc: f67fd275]
----------------
IN: 
0xf67e4d07:  add    $0x10,%esp
0xf67e4d0a:  test   %eax,%eax
0xf67e4d0c:  mov    %eax,%edx
0xf67e4d0e:  je     0xf67e4d1e

----------------
IN: 
0xf67e4d10:  mov    %eax,%ecx
0xf67e4d12:  jmp    0xf67e4c90

----------------
IN: 
0xf67e4c90:  mov    %edx,0x8(%esp)
0xf67e4c94:  sub    $0x4,%esp
0xf67e4c97:  pushl  0x1c(%esp)
0xf67e4c9b:  pushl  0x18(%esp)
0xf67e4c9f:  push   %ecx
0xf67e4ca0:  call   0xf67f33e0


call [pc: f67e4ca5, cc: 00019ed0]

ret [pc: f67e4ca5, cc: f67fd275]
----------------
IN: 
0xf67e4ca5:  add    $0x10,%esp
0xf67e4ca8:  mov    0x8(%esp),%edx
0xf67e4cac:  jmp    0xf67e4cb2

----------------
IN: 
0xf67e4cb2:  cmpb   $0x2f,-0x1(%eax)
0xf67e4cb6:  lea    -0x1(%eax),%ecx
0xf67e4cb9:  jne    0xf67e4cb0

----------------
IN: 
0xf67e4cb0:  mov    %ecx,%eax
0xf67e4cb2:  cmpb   $0x2f,-0x1(%eax)
0xf67e4cb6:  lea    -0x1(%eax),%ecx
0xf67e4cb9:  jne    0xf67e4cb0

----------------
IN: 
0xf67e4cbb:  cmp    %ecx,%edx
0xf67e4cbd:  cmove  %eax,%ecx
0xf67e4cc0:  movb   $0x0,(%ecx)
0xf67e4cc3:  jmp    0xf67e4bdd

----------------
IN: 
0xf67e4bdd:  mov    %edx,0x1a8(%esi)
0xf67e4be3:  mov    %esi,%eax
0xf67e4be5:  add    $0x2c,%esp
0xf67e4be8:  pop    %ebx
0xf67e4be9:  pop    %esi
0xf67e4bea:  pop    %edi
0xf67e4beb:  pop    %ebp
0xf67e4bec:  ret    $0xc


ret [pc: f67df353, cc: 00022126]
----------------
IN: 
0xf67df353:  mov    %eax,%edi
0xf67df355:  test   %edi,%edi
0xf67df357:  pop    %eax
0xf67df358:  je     0xf67dfee7

----------------
IN: 
0xf67df35e:  mov    0x8(%ebp),%eax
0xf67df361:  mov    0x8(%ebp),%ecx
0xf67df364:  mov    0x8(%ebp),%esi
0xf67df367:  mov    0x1c(%eax),%eax
0xf67df36a:  mov    0x20(%ecx),%edx
0xf67df36d:  mov    %eax,0x154(%edi)
0xf67df373:  mov    0x8(%ebp),%eax
0xf67df376:  movzwl 0x14(%eax),%eax
0xf67df37a:  mov    %ax,-0xc0(%ebp)
0xf67df381:  mov    0x8(%ebp),%eax
0xf67df384:  movzwl 0x30(%eax),%eax
0xf67df388:  mov    %eax,%ebx
0xf67df38a:  mov    %ax,0x158(%edi)
0xf67df391:  shl    $0x5,%ebx
0xf67df394:  lea    (%ebx,%edx,1),%ecx
0xf67df397:  cmp    (%esi),%ecx
0xf67df399:  ja     0xf67df868

----------------
IN: 
0xf67df39f:  lea    0x4(%esi,%edx,1),%ecx
0xf67df3a3:  mov    %ecx,-0x7c(%ebp)
0xf67df3a6:  lea    (%eax,%eax,2),%eax
0xf67df3a9:  mov    %esp,-0xd4(%ebp)
0xf67df3af:  lea    0x12(,%eax,8),%eax
0xf67df3b6:  and    $0xfffff0,%eax
0xf67df3bb:  sub    %eax,%esp
0xf67df3bd:  lea    0x3(%esp),%eax
0xf67df3c1:  shr    $0x2,%eax
0xf67df3c4:  mov    %eax,-0xd8(%ebp)
0xf67df3ca:  shl    $0x2,%eax
0xf67df3cd:  mov    %eax,-0x84(%ebp)
0xf67df3d3:  mov    -0x7c(%ebp),%eax
0xf67df3d6:  add    %eax,%ebx
0xf67df3d8:  cmp    %ebx,%eax
0xf67df3da:  jae    0xf67e0010

----------------
IN: 
0xf67df3e0:  mov    %eax,%esi
0xf67df3e2:  mov    0x18(%ebp),%eax
0xf67df3e5:  xor    %edx,%edx
0xf67df3e7:  movb   $0x0,-0xa8(%ebp)
0xf67df3ee:  movl   $0x7,-0xac(%ebp)
0xf67df3f8:  mov    %edx,-0x88(%ebp)
0xf67df3fe:  and    $0x8000000,%eax
0xf67df403:  mov    %eax,-0xdc(%ebp)
0xf67df409:  mov    -0x80(%ebp),%eax
0xf67df40c:  lea    -0x234f0(%eax),%eax
0xf67df412:  mov    %eax,-0xe0(%ebp)
0xf67df418:  jmp    0xf67df458

----------------
IN: 
0xf67df458:  mov    (%esi),%eax
0xf67df45a:  cmp    $0x6,%eax
0xf67df45d:  je     0xf67df4c0

----------------
IN: 
0xf67df4c0:  mov    0x8(%esi),%eax
0xf67df4c3:  mov    %eax,0x150(%edi)
0xf67df4c9:  jmp    0xf67df440

----------------
IN: 
0xf67df440:  movzwl 0x158(%edi),%eax
0xf67df447:  add    $0x20,%esi
0xf67df44a:  shl    $0x5,%eax
0xf67df44d:  add    -0x7c(%ebp),%eax
0xf67df450:  cmp    %eax,%esi
0xf67df452:  jae    0xf67df670

----------------
IN: 
0xf67df45f:  ja     0xf67df420

----------------
IN: 
0xf67df461:  cmp    $0x1,%eax
0xf67df464:  je     0xf67df4d0

----------------
IN: 
0xf67df466:  cmp    $0x2,%eax
0xf67df469:  jne    0xf67df440

----------------
IN: 
0xf67df4d0:  mov    -0x80(%ebp),%eax
0xf67df4d3:  mov    0x1c(%esi),%ebx
0xf67df4d6:  mov    -0x2f0(%eax),%eax
0xf67df4dc:  lea    -0x1(%eax),%edx
0xf67df4df:  test   %ebx,%edx
0xf67df4e1:  mov    %edx,-0x98(%ebp)
0xf67df4e7:  jne    0xf67df820

----------------
IN: 
0xf67df4ed:  mov    0x4(%esi),%edx
0xf67df4f0:  mov    0x8(%esi),%ecx
0xf67df4f3:  sub    $0x1,%ebx
0xf67df4f6:  mov    %edx,-0x8c(%ebp)
0xf67df4fc:  mov    %ecx,%edx
0xf67df4fe:  sub    -0x8c(%ebp),%edx
0xf67df504:  test   %ebx,%edx
0xf67df506:  jne    0xf67df8c0

----------------
IN: 
0xf67df50c:  mov    -0x88(%ebp),%edx
0xf67df512:  neg    %eax
0xf67df514:  mov    %edx,%ebx
0xf67df516:  add    $0x1,%ebx
0xf67df519:  mov    %ebx,-0x90(%ebp)
0xf67df51f:  lea    (%edx,%edx,2),%ebx
0xf67df522:  shl    $0x3,%ebx
0xf67df525:  mov    %ebx,%edx
0xf67df527:  mov    -0x84(%ebp),%ebx
0xf67df52d:  mov    %edx,-0xb0(%ebp)
0xf67df533:  add    %edx,%ebx
0xf67df535:  mov    %ecx,%edx
0xf67df537:  and    %eax,%edx
0xf67df539:  mov    %edx,(%ebx)
0xf67df53b:  mov    0x10(%esi),%edx
0xf67df53e:  add    %ecx,%edx
0xf67df540:  add    0x14(%esi),%ecx
0xf67df543:  mov    %edx,0x8(%ebx)
0xf67df546:  mov    -0x98(%ebp),%edx
0xf67df54c:  add    0x8(%ebx),%edx
0xf67df54f:  mov    %ecx,0xc(%ebx)
0xf67df552:  and    %eax,%edx
0xf67df554:  and    -0x8c(%ebp),%eax
0xf67df55a:  cmpl   $0x1,-0x90(%ebp)
0xf67df561:  mov    %edx,0x4(%ebx)
0xf67df564:  mov    %eax,0x10(%ebx)
0xf67df567:  jbe    0xf67df590

----------------
IN: 
0xf67df590:  mov    0x18(%esi),%ecx
0xf67df593:  mov    -0x88(%ebp),%eax
0xf67df599:  mov    -0x84(%ebp),%ebx
0xf67df59f:  and    $0x7,%ecx
0xf67df5a2:  lea    (%eax,%eax,2),%edx
0xf67df5a5:  mov    $0x73516240,%eax
0xf67df5aa:  shl    $0x2,%ecx
0xf67df5ad:  sar    %cl,%eax
0xf67df5af:  and    $0xf,%eax
0xf67df5b2:  mov    %eax,0x14(%ebx,%edx,8)
0xf67df5b6:  mov    -0x90(%ebp),%eax
0xf67df5bc:  mov    %eax,-0x88(%ebp)
0xf67df5c2:  jmp    0xf67df440

----------------
IN: 
0xf67df569:  mov    -0x84(%ebp),%eax
0xf67df56f:  mov    -0xb0(%ebp),%edx
0xf67df575:  mov    (%ebx),%ecx
0xf67df577:  movzbl -0xa8(%ebp),%ebx
0xf67df57e:  cmp    %ecx,-0x14(%eax,%edx,1)
0xf67df582:  mov    $0x1,%eax
0xf67df587:  cmovne %eax,%ebx
0xf67df58a:  mov    %bl,-0xa8(%ebp)
0xf67df590:  mov    0x18(%esi),%ecx
0xf67df593:  mov    -0x88(%ebp),%eax
0xf67df599:  mov    -0x84(%ebp),%ebx
0xf67df59f:  and    $0x7,%ecx
0xf67df5a2:  lea    (%eax,%eax,2),%edx
0xf67df5a5:  mov    $0x73516240,%eax
0xf67df5aa:  shl    $0x2,%ecx
0xf67df5ad:  sar    %cl,%eax
0xf67df5af:  and    $0xf,%eax
0xf67df5b2:  mov    %eax,0x14(%ebx,%edx,8)
0xf67df5b6:  mov    -0x90(%ebp),%eax
0xf67df5bc:  mov    %eax,-0x88(%ebp)
0xf67df5c2:  jmp    0xf67df440

----------------
IN: 
0xf67df46b:  mov    0x8(%esi),%eax
0xf67df46e:  mov    %eax,0x8(%edi)
0xf67df471:  mov    0x14(%esi),%eax
0xf67df474:  shr    $0x3,%eax
0xf67df477:  mov    %ax,0x15a(%edi)
0xf67df47e:  jmp    0xf67df440

----------------
IN: 
0xf67df420:  cmp    $0x6474e551,%eax
0xf67df425:  je     0xf67df650

----------------
IN: 
0xf67df42b:  cmp    $0x6474e552,%eax
0xf67df430:  je     0xf67df630

----------------
IN: 
0xf67df436:  cmp    $0x7,%eax
0xf67df439:  je     0xf67df5d0

----------------
IN: 
0xf67df5d0:  mov    0x14(%esi),%eax
0xf67df5d3:  test   %eax,%eax
0xf67df5d5:  je     0xf67df440

----------------
IN: 
0xf67df5db:  mov    %eax,0x234(%edi)
0xf67df5e1:  mov    0x1c(%esi),%eax
0xf67df5e4:  test   %eax,%eax
0xf67df5e6:  mov    %eax,0x238(%edi)
0xf67df5ec:  jne    0xf67df660

----------------
IN: 
0xf67df660:  mov    0x8(%esi),%edx
0xf67df663:  sub    $0x1,%eax
0xf67df666:  and    %edx,%eax
0xf67df668:  mov    %eax,0x23c(%edi)
0xf67df66e:  jmp    0xf67df5fb

----------------
IN: 
0xf67df5fb:  mov    0x10(%esi),%eax
0xf67df5fe:  mov    %edx,0x22c(%edi)
0xf67df604:  mov    %eax,0x230(%edi)
0xf67df60a:  movzbl 0x194(%edi),%eax
0xf67df611:  and    $0x3,%eax
0xf67df614:  cmp    $0x1,%al
0xf67df616:  jne    0xf67dfd88

----------------
IN: 
0xf67df61c:  call   0xf67eb8c0


call [pc: f67df621, cc: f67fd707]
----------------
IN: 
0xf67eb8c0:  push   %ebp
0xf67eb8c1:  push   %edi
0xf67eb8c2:  call   0xf67f3605


call [pc: f67eb8c7, cc: 00016fc0]

ret [pc: f67eb8c7, cc: f67fd707]
----------------
IN: 
0xf67eb8c7:  add    $0x12739,%edx
0xf67eb8cd:  push   %esi
0xf67eb8ce:  push   %ebx
0xf67eb8cf:  sub    $0x1c,%esp
0xf67eb8d2:  cmpb   $0x0,0x828(%edx)
0xf67eb8d9:  jne    0xf67eb900

----------------
IN: 
0xf67eb8db:  mov    0x82c(%edx),%eax
0xf67eb8e1:  mov    %eax,0xc(%esp)
0xf67eb8e5:  add    $0x1,%eax
0xf67eb8e8:  mov    %eax,0x82c(%edx)
0xf67eb8ee:  add    $0x1c,%esp
0xf67eb8f1:  pop    %ebx
0xf67eb8f2:  pop    %esi
0xf67eb8f3:  pop    %edi
0xf67eb8f4:  pop    %ebp
0xf67eb8f5:  ret    


ret [pc: f67df621, cc: 00022126]
----------------
IN: 
0xf67df621:  mov    %eax,0x244(%edi)
0xf67df627:  jmp    0xf67df440

----------------
IN: 
0xf67df43f:  nop    
0xf67df440:  movzwl 0x158(%edi),%eax
0xf67df447:  add    $0x20,%esi
0xf67df44a:  shl    $0x5,%eax
0xf67df44d:  add    -0x7c(%ebp),%eax
0xf67df450:  cmp    %eax,%esi
0xf67df452:  jae    0xf67df670

----------------
IN: 
0xf67df650:  mov    0x18(%esi),%eax
0xf67df653:  mov    %eax,-0xac(%ebp)
0xf67df659:  jmp    0xf67df440

----------------
IN: 
0xf67df630:  mov    0x8(%esi),%eax
0xf67df633:  mov    %eax,0x24c(%edi)
0xf67df639:  mov    0x14(%esi),%eax
0xf67df63c:  mov    %eax,0x250(%edi)
0xf67df642:  jmp    0xf67df440

----------------
IN: 
0xf67df670:  mov    -0x88(%ebp),%edx
0xf67df676:  test   %edx,%edx
0xf67df678:  je     0xf67e0010

----------------
IN: 
0xf67df67e:  movzwl -0xc0(%ebp),%eax
0xf67df685:  cmp    $0x3,%eax
0xf67df688:  mov    %eax,-0x98(%ebp)
0xf67df68e:  jne    0xf67e01c0

----------------
IN: 
0xf67df694:  mov    -0xd8(%ebp),%ecx
0xf67df69a:  mov    %edx,-0x90(%ebp)
0xf67df6a0:  lea    -0x3(%edx,%edx,2),%eax
0xf67df6a4:  mov    -0x84(%ebp),%edx
0xf67df6aa:  sub    $0x8,%esp
0xf67df6ad:  mov    0x0(,%ecx,4),%ebx
0xf67df6b4:  mov    0xc(%edx,%eax,8),%eax
0xf67df6b8:  sub    %ebx,%eax
0xf67df6ba:  mov    %eax,-0x8c(%ebp)
0xf67df6c0:  mov    %eax,%edx
0xf67df6c2:  mov    %ecx,%eax
0xf67df6c4:  mov    0x14(,%ecx,4),%ecx
0xf67df6cb:  mov    %ecx,-0x88(%ebp)
0xf67df6d1:  pushl  0x10(,%eax,4)
0xf67df6d8:  pushl  -0xa0(%ebp)
0xf67df6de:  push   $0x802
0xf67df6e3:  push   %ecx
0xf67df6e4:  mov    -0x80(%ebp),%ecx
0xf67df6e7:  push   %edx
0xf67df6e8:  mov    -0x14c(%ecx),%eax
0xf67df6ee:  and    %ebx,%eax
0xf67df6f0:  push   %eax
0xf67df6f1:  call   0xf67f2840


call [pc: f67df6f6, cc: f67fd7d0]

call [pc: f67f2849, cc: 0000ff99]

ret [pc: f67f2849, cc: f67fd7d0]

ret [pc: f67df6f6, cc: 00022126]
----------------
IN: 
0xf67df6f6:  add    $0x20,%esp
0xf67df6f9:  cmp    $0xffffffff,%eax
0xf67df6fc:  mov    %eax,0x1ac(%edi)
0xf67df702:  mov    -0x90(%ebp),%edx
0xf67df708:  je     0xf67e00a8

----------------
IN: 
0xf67df70e:  mov    -0x8c(%ebp),%ecx
0xf67df714:  add    %eax,%ecx
0xf67df716:  sub    %ebx,%eax
0xf67df718:  cmpb   $0x0,-0xa8(%ebp)
0xf67df71f:  mov    %ecx,0x1b0(%edi)
0xf67df725:  mov    %eax,(%edi)
0xf67df727:  jne    0xf67e0020

----------------
IN: 
0xf67e0020:  mov    -0xd8(%ebp),%ebx
0xf67e0026:  sub    $0x4,%esp
0xf67e0029:  lea    (%edx,%edx,2),%ecx
0xf67e002c:  mov    0x4(,%ebx,4),%ebx
0xf67e0033:  push   $0x0
0xf67e0035:  mov    %edx,-0x90(%ebp)
0xf67e003b:  mov    -0x84(%ebp),%edx
0xf67e0041:  add    %ebx,%eax
0xf67e0043:  mov    -0x18(%edx,%ecx,8),%ecx
0xf67e0047:  sub    %ebx,%ecx
0xf67e0049:  push   %ecx
0xf67e004a:  push   %eax
0xf67e004b:  call   0xf67f28e0


call [pc: f67e0050, cc: f67c2176]
----------------
IN: 
0xf67f28e0:  push   %ebx
0xf67f28e1:  mov    0x10(%esp),%edx
0xf67f28e5:  mov    0xc(%esp),%ecx
0xf67f28e9:  mov    0x8(%esp),%ebx
0xf67f28ed:  mov    $0x7d,%eax
0xf67f28f2:  int    $0x80

----------------
IN: 
0xf67f28f4:  pop    %ebx
0xf67f28f5:  cmp    $0xfffff001,%eax
0xf67f28fa:  jae    0xf67f1de0

----------------
IN: 
0xf67f2900:  ret    


ret [pc: f67e0050, cc: 00022126]
----------------
IN: 
0xf67e0050:  add    $0x10,%esp
0xf67e0053:  mov    -0x90(%ebp),%edx
0xf67e0059:  jmp    0xf67df72d

----------------
IN: 
0xf67df72d:  orb    $0x40,0x195(%edi)
0xf67df734:  mov    -0x84(%ebp),%ecx
0xf67df73a:  testb  $0x4,-0x88(%ebp)
0xf67df741:  je     0xf67df74e

----------------
IN: 
0xf67df743:  mov    0x4(%ecx),%eax
0xf67df746:  add    (%edi),%eax
0xf67df748:  mov    %eax,0x1b4(%edi)
0xf67df74e:  mov    0x150(%edi),%eax
0xf67df754:  test   %eax,%eax
0xf67df756:  je     0xf67e00dc

----------------
IN: 
0xf67df75c:  mov    0xc(%ecx),%eax
0xf67df75f:  mov    0x8(%ecx),%ebx
0xf67df762:  cmp    %ebx,%eax
0xf67df764:  jbe    0xf67df7ca

----------------
IN: 
0xf67df7ca:  add    $0x18,%ecx
0xf67df7cd:  mov    -0x84(%ebp),%ebx
0xf67df7d3:  lea    (%edx,%edx,2),%eax
0xf67df7d6:  lea    (%ebx,%eax,8),%eax
0xf67df7d9:  cmp    %eax,%ecx
0xf67df7db:  jae    0xf67df8f0

----------------
IN: 
0xf67df7e1:  mov    0x4(%ecx),%ebx
0xf67df7e4:  mov    (%ecx),%eax
0xf67df7e6:  cmp    %eax,%ebx
0xf67df7e8:  ja     0xf67e005e

----------------
IN: 
0xf67e005e:  mov    %edx,-0xa8(%ebp)
0xf67e0064:  mov    0x14(%ecx),%edx
0xf67e0067:  sub    $0x8,%esp
0xf67e006a:  sub    %eax,%ebx
0xf67e006c:  mov    %edx,-0x88(%ebp)
0xf67e0072:  pushl  0x10(%ecx)
0xf67e0075:  mov    %ecx,-0x90(%ebp)
0xf67e007b:  pushl  -0xa0(%ebp)
0xf67e0081:  push   $0x812
0xf67e0086:  push   %edx
0xf67e0087:  push   %ebx
0xf67e0088:  add    (%edi),%eax
0xf67e008a:  push   %eax
0xf67e008b:  call   0xf67f2840


call [pc: f67e0090, cc: f67c21b6]

call [pc: f67f2849, cc: 000309ff]

ret [pc: f67f2849, cc: f67c21b6]

ret [pc: f67e0090, cc: 00022126]
----------------
IN: 
0xf67e0090:  add    $0x20,%esp
0xf67e0093:  cmp    $0xffffffff,%eax
0xf67e0096:  mov    -0x90(%ebp),%ecx
0xf67e009c:  mov    -0xa8(%ebp),%edx
0xf67e00a2:  jne    0xf67df73a

----------------
IN: 
0xf67df73a:  testb  $0x4,-0x88(%ebp)
0xf67df741:  je     0xf67df74e

----------------
IN: 
0xf67df74e:  mov    0x150(%edi),%eax
0xf67df754:  test   %eax,%eax
0xf67df756:  je     0xf67e00dc

----------------
IN: 
0xf67df766:  mov    (%edi),%esi
0xf67df768:  add    %esi,%ebx
0xf67df76a:  add    %eax,%esi
0xf67df76c:  mov    %ebx,-0xa8(%ebp)
0xf67df772:  mov    -0x80(%ebp),%ebx
0xf67df775:  mov    -0xa8(%ebp),%eax
0xf67df77b:  mov    %esi,-0x90(%ebp)
0xf67df781:  mov    -0x2f0(%ebx),%ebx
0xf67df787:  mov    %ebx,%esi
0xf67df789:  lea    -0x1(%eax,%ebx,1),%eax
0xf67df78d:  neg    %esi
0xf67df78f:  and    %esi,%eax
0xf67df791:  cmp    %eax,-0x90(%ebp)
0xf67df797:  mov    %esi,-0xc8(%ebp)
0xf67df79d:  mov    %eax,%esi
0xf67df79f:  cmovbe -0x90(%ebp),%esi
0xf67df7a6:  cmp    -0xa8(%ebp),%esi
0xf67df7ac:  mov    %esi,-0xb0(%ebp)
0xf67df7b2:  ja     0xf67dff21

----------------
IN: 
0xf67dff21:  testb  $0x2,-0x88(%ebp)
0xf67dff28:  je     0xf67e03b2

----------------
IN: 
0xf67dff2e:  mov    -0xa8(%ebp),%ebx
0xf67dff34:  mov    -0xb0(%ebp),%eax
0xf67dff3a:  sub    $0x4,%esp
0xf67dff3d:  mov    %ecx,-0xcc(%ebp)
0xf67dff43:  mov    %edx,-0xc8(%ebp)
0xf67dff49:  sub    %ebx,%eax
0xf67dff4b:  push   %eax
0xf67dff4c:  push   $0x0
0xf67dff4e:  push   %ebx
0xf67dff4f:  mov    -0x80(%ebp),%ebx
0xf67dff52:  call   0xf67f3390


call [pc: f67dff57, cc: f67fde71]
----------------
IN: 
0xf67f3390:  cld    
0xf67f3391:  push   %edi
0xf67f3392:  mov    0x8(%esp),%edx
0xf67f3396:  mov    0x10(%esp),%ecx
0xf67f339a:  movzbl 0xc(%esp),%eax
0xf67f339f:  jecxz  0xf67f33cd

----------------
IN: 
0xf67f33a1:  mov    %edx,%edi
0xf67f33a3:  and    $0x3,%edx
0xf67f33a6:  je     0xf67f33b9

----------------
IN: 
0xf67f33b9:  mov    %ecx,%edx
0xf67f33bb:  shr    $0x2,%ecx
0xf67f33be:  and    $0x3,%edx
0xf67f33c1:  imul   $0x1010101,%eax,%eax
0xf67f33c7:  rep stos %eax,%es:(%edi)

----------------
IN: 
0xf67f33c7:  rep stos %eax,%es:(%edi)

----------------
IN: 
0xf67f33c9:  mov    %edx,%ecx
0xf67f33cb:  rep stos %al,%es:(%edi)

----------------
IN: 
0xf67f33cd:  mov    0x8(%esp),%eax
0xf67f33d1:  pop    %edi
0xf67f33d2:  ret    


ret [pc: f67dff57, cc: 00022126]
----------------
IN: 
0xf67dff57:  add    $0x10,%esp
0xf67dff5a:  mov    -0xc8(%ebp),%edx
0xf67dff60:  mov    -0xcc(%ebp),%ecx
0xf67dff66:  jmp    0xf67df7b8

----------------
IN: 
0xf67df7b8:  mov    -0x90(%ebp),%ebx
0xf67df7be:  cmp    %ebx,-0xb0(%ebp)
0xf67df7c4:  jb     0xf67e0168

----------------
IN: 
0xf67e0168:  mov    -0x90(%ebp),%eax
0xf67e016e:  mov    -0xb0(%ebp),%ebx
0xf67e0174:  sub    $0x8,%esp
0xf67e0177:  mov    %ecx,-0xc8(%ebp)
0xf67e017d:  mov    %edx,-0xa8(%ebp)
0xf67e0183:  push   $0x0
0xf67e0185:  push   $0xffffffff
0xf67e0187:  sub    %ebx,%eax
0xf67e0189:  push   $0x32
0xf67e018b:  pushl  -0x88(%ebp)
0xf67e0191:  push   %eax
0xf67e0192:  push   %ebx
0xf67e0193:  call   0xf67f2840


call [pc: f67e0198, cc: f67c20be]

call [pc: f67f2849, cc: 000308f7]

ret [pc: f67f2849, cc: f67c20be]

ret [pc: f67e0198, cc: 00022126]
----------------
IN: 
0xf67e0198:  add    $0x20,%esp
0xf67e019b:  cmp    $0xffffffff,%eax
0xf67e019e:  mov    -0xa8(%ebp),%edx
0xf67e01a4:  mov    -0xc8(%ebp),%ecx
0xf67e01aa:  jne    0xf67df7ca

----------------
IN: 
0xf67df8f0:  mov    0x8(%edi),%edx
0xf67df8f3:  mov    -0xd4(%ebp),%esp
0xf67df8f9:  test   %edx,%edx
0xf67df8fb:  je     0xf67e0236

----------------
IN: 
0xf67df901:  mov    (%edi),%eax
0xf67df903:  add    %eax,%edx
0xf67df905:  mov    %eax,-0x84(%ebp)
0xf67df90b:  test   %edx,%edx
0xf67df90d:  mov    %edx,0x8(%edi)
0xf67df910:  je     0xf67e022b

----------------
IN: 
0xf67df916:  mov    (%edx),%eax
0xf67df918:  lea    0x20(%edi),%ebx
0xf67df91b:  mov    $0x6fffffff,%esi
0xf67df920:  test   %eax,%eax
0xf67df922:  jne    0xf67df945

----------------
IN: 
0xf67df945:  cmp    $0x21,%eax
0xf67df948:  jbe    0xf67df939

----------------
IN: 
0xf67df939:  mov    %edx,(%ebx,%eax,4)
0xf67df93c:  add    $0x8,%edx
0xf67df93f:  mov    (%edx),%eax
0xf67df941:  test   %eax,%eax
0xf67df943:  je     0xf67df983

----------------
IN: 
0xf67df94a:  mov    %esi,%ecx
0xf67df94c:  sub    %eax,%ecx
0xf67df94e:  cmp    $0xf,%ecx
0xf67df951:  jbe    0xf67df930

----------------
IN: 
0xf67df953:  lea    (%eax,%eax,1),%ecx
0xf67df956:  sar    %ecx
0xf67df958:  cmp    $0xfffffffc,%ecx
0xf67df95b:  jbe    0xf67df968

----------------
IN: 
0xf67df968:  mov    $0x6ffffdff,%ecx
0xf67df96d:  sub    %eax,%ecx
0xf67df96f:  cmp    $0xb,%ecx
0xf67df972:  ja     0xf67dfef5

----------------
IN: 
0xf67dfef5:  mov    $0x6ffffeff,%ecx
0xf67dfefa:  sub    %eax,%ecx
0xf67dfefc:  cmp    $0xa,%ecx
0xf67dfeff:  ja     0xf67df93c

----------------
IN: 
0xf67dff05:  neg    %eax
0xf67dff07:  mov    %edx,-0x40000300(%ebx,%eax,4)
0xf67dff0e:  jmp    0xf67df93c

----------------
IN: 
0xf67df93c:  add    $0x8,%edx
0xf67df93f:  mov    (%edx),%eax
0xf67df941:  test   %eax,%eax
0xf67df943:  je     0xf67df983

----------------
IN: 
0xf67df930:  mov    $0x70000021,%ecx
0xf67df935:  sub    %eax,%ecx
0xf67df937:  mov    %ecx,%eax
0xf67df939:  mov    %edx,(%ebx,%eax,4)
0xf67df93c:  add    $0x8,%edx
0xf67df93f:  mov    (%edx),%eax
0xf67df941:  test   %eax,%eax
0xf67df943:  je     0xf67df983

----------------
IN: 
0xf67df983:  mov    -0x84(%ebp),%eax
0xf67df989:  test   %eax,%eax
0xf67df98b:  je     0xf67dfa27

----------------
IN: 
0xf67df991:  mov    0x30(%edi),%eax
0xf67df994:  test   %eax,%eax
0xf67df996:  je     0xf67df9a1

----------------
IN: 
0xf67df998:  mov    -0x84(%ebp),%ebx
0xf67df99e:  add    %ebx,0x4(%eax)
0xf67df9a1:  mov    0x2c(%edi),%eax
0xf67df9a4:  test   %eax,%eax
0xf67df9a6:  je     0xf67df9b1

----------------
IN: 
0xf67df9a8:  mov    -0x84(%ebp),%ebx
0xf67df9ae:  add    %ebx,0x4(%eax)
0xf67df9b1:  mov    0x34(%edi),%eax
0xf67df9b4:  test   %eax,%eax
0xf67df9b6:  je     0xf67df9c1

----------------
IN: 
0xf67df9b8:  mov    -0x84(%ebp),%ebx
0xf67df9be:  add    %ebx,0x4(%eax)
0xf67df9c1:  mov    0x38(%edi),%eax
0xf67df9c4:  test   %eax,%eax
0xf67df9c6:  je     0xf67df9d1

----------------
IN: 
0xf67df9c8:  mov    -0x84(%ebp),%ebx
0xf67df9ce:  add    %ebx,0x4(%eax)
0xf67df9d1:  mov    0x3c(%edi),%eax
0xf67df9d4:  test   %eax,%eax
0xf67df9d6:  je     0xf67df9e1

----------------
IN: 
0xf67df9e1:  mov    0x64(%edi),%eax
0xf67df9e4:  test   %eax,%eax
0xf67df9e6:  je     0xf67df9f1

----------------
IN: 
0xf67df9e8:  mov    -0x84(%ebp),%ebx
0xf67df9ee:  add    %ebx,0x4(%eax)
0xf67df9f1:  mov    0x7c(%edi),%eax
0xf67df9f4:  test   %eax,%eax
0xf67df9f6:  je     0xf67dfa01

----------------
IN: 
0xf67df9f8:  mov    -0x84(%ebp),%ebx
0xf67df9fe:  add    %ebx,0x4(%eax)
0xf67dfa01:  mov    0xe4(%edi),%eax
0xf67dfa07:  test   %eax,%eax
0xf67dfa09:  je     0xf67dfa14

----------------
IN: 
0xf67dfa0b:  mov    -0x84(%ebp),%ebx
0xf67dfa11:  add    %ebx,0x4(%eax)
0xf67dfa14:  mov    0x14c(%edi),%eax
0xf67dfa1a:  test   %eax,%eax
0xf67dfa1c:  je     0xf67dfa27

----------------
IN: 
0xf67dfa1e:  mov    -0x84(%ebp),%ebx
0xf67dfa24:  add    %ebx,0x4(%eax)
0xf67dfa27:  mov    0x70(%edi),%eax
0xf67dfa2a:  test   %eax,%eax
0xf67dfa2c:  je     0xf67dfa60

----------------
IN: 
0xf67dfa2e:  mov    0x4(%eax),%eax
0xf67dfa31:  cmp    $0x11,%eax
0xf67dfa34:  je     0xf67dfa60

----------------
IN: 
0xf67dfa60:  mov    0x3c(%edi),%esi
0xf67dfa63:  test   %esi,%esi
0xf67dfa65:  je     0xf67dfa74

----------------
IN: 
0xf67dfa74:  mov    0x64(%edi),%ebx
0xf67dfa77:  test   %ebx,%ebx
0xf67dfa79:  je     0xf67dfa88

----------------
IN: 
0xf67dfa7b:  mov    0x6c(%edi),%eax
0xf67dfa7e:  cmpl   $0x8,0x4(%eax)
0xf67dfa82:  jne    0xf67e0534

----------------
IN: 
0xf67dfa88:  mov    0x98(%edi),%edx
0xf67dfa8e:  test   %edx,%edx
0xf67dfa90:  je     0xf67dfab1

----------------
IN: 
0xf67dfa92:  mov    0x4(%edx),%eax
0xf67dfa95:  test   $0x2,%al
0xf67dfa97:  mov    %eax,0x208(%edi)
0xf67dfa9d:  je     0xf67dfaa2

----------------
IN: 
0xf67dfaa2:  test   $0x4,%al
0xf67dfaa4:  je     0xf67dfaa9

----------------
IN: 
0xf67dfaa9:  test   $0x8,%al
0xf67dfaab:  jne    0xf67dff7c

----------------
IN: 
0xf67dfab1:  mov    0xb8(%edi),%eax
0xf67dfab7:  test   %eax,%eax
0xf67dfab9:  je     0xf67e024f

----------------
IN: 
0xf67e024f:  mov    0x204(%edi),%edx
0xf67e0255:  jmp    0xf67dfae2

----------------
IN: 
0xf67dfae2:  mov    0x94(%edi),%ecx
0xf67dfae8:  test   %ecx,%ecx
0xf67dfaea:  je     0xf67dfaf3

----------------
IN: 
0xf67dfaf3:  and    $0x40,%edx
0xf67dfaf6:  je     0xf67dfb70

----------------
IN: 
0xf67dfb70:  mov    0x150(%edi),%eax
0xf67dfb76:  test   %eax,%eax
0xf67dfb78:  je     0xf67e0339

----------------
IN: 
0xf67dfb7e:  add    (%edi),%eax
0xf67dfb80:  mov    %eax,0x150(%edi)
0xf67dfb86:  mov    -0x80(%ebp),%eax
0xf67dfb89:  mov    0x824(%eax),%eax
0xf67dfb8f:  mov    %eax,-0x7c(%ebp)
0xf67dfb92:  not    %eax
0xf67dfb94:  and    -0xac(%ebp),%eax
0xf67dfb9a:  test   $0x1,%al
0xf67dfb9c:  jne    0xf67e0268

----------------
IN: 
0xf67dfba2:  mov    0x22c(%edi),%eax
0xf67dfba8:  test   %eax,%eax
0xf67dfbaa:  je     0xf67dfbb4

----------------
IN: 
0xf67dfbac:  add    (%edi),%eax
0xf67dfbae:  mov    %eax,0x22c(%edi)
0xf67dfbb4:  sub    $0xc,%esp
0xf67dfbb7:  pushl  -0xa0(%ebp)
0xf67dfbbd:  call   0xf67f2820


call [pc: f67dfbc2, cc: f67fdae4]

ret [pc: f67dfbc2, cc: 00022126]
----------------
IN: 
0xf67dfbc2:  add    $0x10,%esp
0xf67dfbc5:  test   %eax,%eax
0xf67dfbc7:  jne    0xf67e025a

----------------
IN: 
0xf67dfbcd:  cmpl   $0x2,-0x98(%ebp)
0xf67dfbd4:  je     0xf67e0133

----------------
IN: 
0xf67dfbda:  mov    0x154(%edi),%edx
0xf67dfbe0:  mov    (%edi),%eax
0xf67dfbe2:  mov    -0x80(%ebp),%ebx
0xf67dfbe5:  add    %eax,%edx
0xf67dfbe7:  testb  $0x40,-0x300(%ebx)
0xf67dfbee:  mov    %edx,0x154(%edi)
0xf67dfbf4:  jne    0xf67e02fa

----------------
IN: 
0xf67dfbfa:  mov    %edi,%eax
0xf67dfbfc:  call   0xf67e4830


call [pc: f67dfc01, cc: f67fdd27]

call [pc: f67e4839, cc: 0001951e]

ret [pc: f67e4839, cc: f67fdd27]

ret [pc: f67dfc01, cc: 00022126]
----------------
IN: 
0xf67dfc01:  testb  $0x8,0x18(%ebp)
0xf67dfc05:  jne    0xf67dfc62

----------------
IN: 
0xf67dfc07:  mov    0x60(%edi),%esi
0xf67dfc0a:  test   %esi,%esi
0xf67dfc0c:  je     0xf67dfc62

----------------
IN: 
0xf67dfc62:  testb  $0x20,0x204(%edi)
0xf67dfc69:  jne    0xf67dff13

----------------
IN: 
0xf67dfc6f:  mov    -0xb4(%ebp),%eax
0xf67dfc75:  mov    -0xc4(%ebp),%ebx
0xf67dfc7b:  mov    %eax,0x1d8(%edi)
0xf67dfc81:  mov    -0xb8(%ebp),%eax
0xf67dfc87:  test   %ebx,%ebx
0xf67dfc89:  mov    %eax,0x1dc(%edi)
0xf67dfc8f:  mov    -0x94(%ebp),%eax
0xf67dfc95:  mov    %eax,0x1e0(%edi)
0xf67dfc9b:  mov    -0xbc(%ebp),%eax
0xf67dfca1:  mov    %eax,0x1e4(%edi)
0xf67dfca7:  jne    0xf67e02e8

----------------
IN: 
0xf67dfcad:  mov    -0x80(%ebp),%eax
0xf67dfcb0:  mov    -0x148(%eax),%ecx
0xf67dfcb6:  test   %ecx,%ecx
0xf67dfcb8:  jne    0xf67e02c8

----------------
IN: 
0xf67dfcbe:  mov    0x20(%ebp),%edx
0xf67dfcc1:  mov    %edi,%eax
0xf67dfcc3:  call   0xf67e48f0


call [pc: f67dfcc8, cc: f67fddee]

call [pc: f67e48fb, cc: 00019515]

ret [pc: f67e48fb, cc: f67fddee]

call [pc: f67e4915, cc: 000194fb]

ret [pc: f67e4915, cc: f67fddee]
----------------
IN: 
0xf67e493a:  mov    0xc(%ebx),%ecx
0xf67e493d:  test   %ecx,%ecx
0xf67e493f:  jne    0xf67e4938

----------------
IN: 
0xf67e4938:  mov    %ecx,%ebx
0xf67e493a:  mov    0xc(%ebx),%ecx
0xf67e493d:  test   %ecx,%ecx
0xf67e493f:  jne    0xf67e4938

----------------
IN: 
0xf67e4941:  mov    %ebx,0x10(%edi)
0xf67e4944:  mov    %edi,0xc(%ebx)
0xf67e4947:  imul   $0x4c,%edx,%edx
0xf67e494a:  mov    0x514(%esi),%ecx
0xf67e4950:  mov    0x518(%esi),%ebx
0xf67e4956:  add    %esi,%edx
0xf67e4958:  addl   $0x1,0x4(%eax,%edx,1)
0xf67e495d:  mov    %ecx,0x254(%edi)
0xf67e4963:  add    $0x1,%ecx
0xf67e4966:  mov    %ebx,0x258(%edi)
0xf67e496c:  adc    $0x0,%ebx
0xf67e496f:  sub    $0xc,%esp
0xf67e4972:  push   %ebp
0xf67e4973:  mov    %ebx,0x518(%esi)
0xf67e4979:  mov    %ecx,0x514(%esi)
0xf67e497f:  call   *0x81c(%esi)


call [pc: f67e4985, cc: 0001946b]

ret [pc: f67e4985, cc: f67fddee]

ret [pc: f67dfcc8, cc: 00022126]
----------------
IN: 
0xf67dfcc8:  mov    -0x80(%ebp),%ebx
0xf67dfccb:  mov    %edi,%eax
0xf67dfccd:  mov    -0xf4(%ebx),%edx
0xf67dfcd3:  test   %edx,%edx
0xf67dfcd5:  je     0xf67df2e8

----------------
IN: 
0xf67df2e8:  lea    -0xc(%ebp),%esp
0xf67df2eb:  pop    %ebx
0xf67df2ec:  pop    %esi
0xf67df2ed:  pop    %edi
0xf67df2ee:  pop    %ebp
0xf67df2ef:  ret    


ret [pc: f67e237d, cc: f67c025b]
----------------
IN: 
0xf67e237d:  add    $0x20,%esp
0xf67e2380:  add    $0x24c,%esp
0xf67e2386:  pop    %ebx
0xf67e2387:  pop    %esi
0xf67e2388:  pop    %edi
0xf67e2389:  pop    %ebp
0xf67e238a:  ret    $0xc


ret [pc: f67e6e92, cc: 00026cc9]
----------------
IN: 
0xf67e6e92:  mov    %eax,0x14(%ebx)
0xf67e6e95:  add    $0xc,%esp
0xf67e6e98:  pop    %ebx
0xf67e6e99:  ret    


ret [pc: f67e9204, cc: f67cfecd]
----------------
IN: 
0xf67e9204:  add    $0x10,%esp
0xf67e9207:  mov    0xc(%esp),%edx
0xf67e920b:  mov    0x10(%esp),%esi
0xf67e920f:  mov    0x14(%esp),%eax
0xf67e9213:  mov    0x1c(%esp),%ecx
0xf67e9217:  mov    %esi,(%edx)
0xf67e9219:  mov    0x18(%esp),%edx
0xf67e921d:  movl   $0x0,(%eax)
0xf67e9223:  mov    %ebx,%eax
0xf67e9225:  movl   $0x0,(%edx)
0xf67e922b:  movb   $0x0,(%ecx)
0xf67e922e:  add    $0xd4,%esp
0xf67e9234:  pop    %ebx
0xf67e9235:  pop    %esi
0xf67e9236:  ret    $0x8


ret [pc: f67e7078, cc: 00028eb5]
----------------
IN: 
0xf67e7078:  mov    -0x38(%ebp),%edx
0xf67e707b:  pop    %edi
0xf67e707c:  pop    %ecx
0xf67e707d:  test   %edx,%edx
0xf67e707f:  jne    0xf67e775a

----------------
IN: 
0xf67e7085:  mov    -0x1c(%ebp),%eax
0xf67e7088:  testb  $0x60,0x194(%eax)
0xf67e708f:  jne    0xf67e7015

----------------
IN: 
0xf67e7091:  sub    $0x20,%esp
0xf67e7094:  mov    -0x5c(%ebp),%edi
0xf67e7097:  addl   $0x1,-0x78(%ebp)
0xf67e709b:  lea    0xf(%esp),%edx
0xf67e709f:  and    $0xfffffff0,%edx
0xf67e70a2:  mov    %eax,0x4(%edx)
0xf67e70a5:  movl   $0x0,(%edx)
0xf67e70ab:  movl   $0x0,0x8(%edx)
0xf67e70b2:  mov    %edx,0x8(%edi)
0xf67e70b5:  movzbl 0x194(%eax),%ecx
0xf67e70bc:  mov    %edx,-0x5c(%ebp)
0xf67e70bf:  and    $0xffffff9f,%ecx
0xf67e70c2:  or     $0x20,%ecx
0xf67e70c5:  mov    %cl,0x194(%eax)
0xf67e70cb:  jmp    0xf67e7015

----------------
IN: 
0xf67e7015:  mov    -0x50(%ebp),%edi
0xf67e7018:  test   %edi,%edi
0xf67e701a:  je     0xf67e7028

----------------
IN: 
0xf67e7028:  add    $0x8,%esi
0xf67e702b:  mov    (%esi),%eax
0xf67e702d:  test   %eax,%eax
0xf67e702f:  je     0xf67e71ec

----------------
IN: 
0xf67e70d0:  and    $0xfffffffd,%eax
0xf67e70d3:  cmp    $0x7ffffffd,%eax
0xf67e70d8:  jne    0xf67e7028

----------------
IN: 
0xf67e71ec:  mov    -0x50(%ebp),%ebx
0xf67e71ef:  test   %ebx,%ebx
0xf67e71f1:  je     0xf67e726d

----------------
IN: 
0xf67e726d:  mov    -0x68(%ebp),%eax
0xf67e7270:  mov    (%eax),%eax
0xf67e7272:  test   %eax,%eax
0xf67e7274:  je     0xf67e7921

----------------
IN: 
0xf67e727a:  mov    -0x68(%ebp),%eax
0xf67e727d:  jmp    0xf67e7289

----------------
IN: 
0xf67e7289:  mov    0x8(%eax),%eax
0xf67e728c:  test   %eax,%eax
0xf67e728e:  jne    0xf67e727f

----------------
IN: 
0xf67e727f:  mov    (%eax),%ecx
0xf67e7281:  test   %ecx,%ecx
0xf67e7283:  je     0xf67e791e

----------------
IN: 
0xf67e791e:  mov    %eax,-0x68(%ebp)
0xf67e7921:  mov    -0x68(%ebp),%eax
0xf67e7924:  mov    0x4(%eax),%eax
0xf67e7927:  mov    %eax,-0x4c(%ebp)
0xf67e792a:  jmp    0xf67e6faa

----------------
IN: 
0xf67e6faa:  mov    -0x68(%ebp),%eax
0xf67e6fad:  movl   $0x0,-0x50(%ebp)
0xf67e6fb4:  movl   $0x1,(%eax)
0xf67e6fba:  mov    -0x4c(%ebp),%eax
0xf67e6fbd:  mov    0x15c(%eax),%ebx
0xf67e6fc3:  test   %ebx,%ebx
0xf67e6fc5:  je     0xf67e79a0

----------------
IN: 
0xf67e79b7:  movzwl 0x15a(%eax),%eax
0xf67e79be:  test   %ax,%ax
0xf67e79c1:  je     0xf67e6fcb

----------------
IN: 
0xf67e79c7:  shl    $0x2,%eax
0xf67e79ca:  cmp    %eax,-0x84(%ebp)
0xf67e79d0:  mov    -0x7c(%ebp),%edi
0xf67e79d3:  mov    %edi,-0x50(%ebp)
0xf67e79d6:  jae    0xf67e6fcb

----------------
IN: 
0xf67e79dc:  add    $0xf,%eax
0xf67e79df:  and    $0xfffffff0,%eax
0xf67e79e2:  lea    0x1e(%eax),%edx
0xf67e79e5:  and    $0xffff0,%edx
0xf67e79eb:  sub    %edx,%esp
0xf67e79ed:  lea    0xf(%esp),%edx
0xf67e79f1:  and    $0xfffffff0,%edx
0xf67e79f4:  mov    %edx,-0x50(%ebp)
0xf67e79f7:  add    %eax,%edx
0xf67e79f9:  cmp    %edx,%edi
0xf67e79fb:  je     0xf67e7ea8

----------------
IN: 
0xf67e7a01:  mov    %eax,-0x84(%ebp)
0xf67e7a07:  mov    -0x50(%ebp),%eax
0xf67e7a0a:  mov    %eax,-0x7c(%ebp)
0xf67e7a0d:  jmp    0xf67e6fcb


call [pc: f67e7052, cc: f67cfee7]
----------------
IN: 
0xf67f2be6:  mov    $0xfefefeff,%esi
0xf67f2beb:  xor    %edx,%ebx
0xf67f2bed:  mov    (%eax),%ecx
0xf67f2bef:  add    %ebx,%esi
0xf67f2bf1:  mov    $0xfefefeff,%edi
0xf67f2bf6:  jae    0xf67f2c87

----------------
IN: 
0xf67f2bfc:  mov    %edi,%ebp
0xf67f2bfe:  xor    %ebx,%esi
0xf67f2c00:  add    %ecx,%ebp
0xf67f2c02:  or     $0xfefefeff,%esi
0xf67f2c08:  add    $0x1,%esi
0xf67f2c0b:  jne    0xf67f2c87

----------------
IN: 
0xf67f2c0d:  xor    %ecx,%ebp
0xf67f2c0f:  add    %ecx,%edi
0xf67f2c11:  lea    0x4(%eax),%eax
0xf67f2c14:  jae    0xf67f2ca2

----------------
IN: 
0xf67f2c1a:  mov    %ecx,%ebx
0xf67f2c1c:  or     $0xfefefeff,%ebp
0xf67f2c22:  add    $0x1,%ebp
0xf67f2c25:  jne    0xf67f2ca2


ret [pc: f67e7052, cc: 00028eb5]

call [pc: f67e7078, cc: f67cfecd]

call [pc: f67e9197, cc: 00026f5a]

ret [pc: f67e9197, cc: f67cfecd]

call [pc: f67e91c9, cc: 00026f04]

call [pc: f67dab15, cc: f67fc411]

ret [pc: f67dab15, cc: 00026f04]

ret [pc: f67e91c9, cc: f67cfecd]

call [pc: f67e91ea, cc: 00026f27]

ret [pc: f67e91ea, cc: f67cfecd]

call [pc: f67e9204, cc: 00026cc9]

call [pc: f67e6e92, cc: f67c025b]

call [pc: f67e2169, cc: 00022332]

ret [pc: f67e2169, cc: f67c025b]

call [pc: f67e21e4, cc: 000223bf]

call [pc: f67ea16c, cc: f67c82d3]

ret [pc: f67ea16c, cc: 000223bf]

call [pc: f67ea17e, cc: f67c82c1]

ret [pc: f67ea17e, cc: 000223bf]

call [pc: f67ea1a2, cc: f67c821d]

ret [pc: f67ea1a2, cc: 000223bf]

ret [pc: f67e21e4, cc: f67c025b]

call [pc: f67e21e4, cc: 000223bf]

call [pc: f67ea16c, cc: f67c82d3]

ret [pc: f67ea16c, cc: 000223bf]

call [pc: f67ea17e, cc: f67c82c1]

ret [pc: f67ea17e, cc: 000223bf]

call [pc: f67ea1a2, cc: f67c821d]

ret [pc: f67ea1a2, cc: 000223bf]

call [pc: f67ea1a2, cc: f67c821d]

ret [pc: f67ea1a2, cc: 000223bf]
----------------
IN: 
0xf67ea1a9:  pop    %ebx
0xf67ea1aa:  mov    $0x1,%eax
0xf67ea1af:  pop    %esi
0xf67ea1b0:  pop    %edi
0xf67ea1b1:  ret    


ret [pc: f67e21e4, cc: f67c025b]
----------------
IN: 
0xf67e22a0:  add    $0x24c,%esp
0xf67e22a6:  mov    %edi,%eax
0xf67e22a8:  pop    %ebx
0xf67e22a9:  pop    %esi
0xf67e22aa:  pop    %edi
0xf67e22ab:  pop    %ebp
0xf67e22ac:  ret    $0xc


ret [pc: f67e6e92, cc: 00026cc9]

ret [pc: f67e9204, cc: f67cfecd]

ret [pc: f67e7078, cc: 00028eb5]
----------------
IN: 
0xf67e701c:  mov    -0x54(%ebp),%ebx
0xf67e701f:  mov    %eax,(%edi,%ebx,4)
0xf67e7022:  lea    0x1(%ebx),%eax
0xf67e7025:  mov    %eax,-0x54(%ebp)
0xf67e7028:  add    $0x8,%esi
0xf67e702b:  mov    (%esi),%eax
0xf67e702d:  test   %eax,%eax
0xf67e702f:  je     0xf67e71ec

----------------
IN: 
0xf67e71f3:  mov    -0x54(%ebp),%eax
0xf67e71f6:  lea    0x1(%eax),%edi
0xf67e71f9:  lea    0x0(,%eax,4),%edx
0xf67e7200:  lea    0x4(,%edi,8),%eax
0xf67e7207:  mov    -0x50(%ebp),%ebx
0xf67e720a:  sub    $0xc,%esp
0xf67e720d:  movl   $0x0,(%ebx,%edx,1)
0xf67e7214:  mov    -0x70(%ebp),%ebx
0xf67e7217:  push   %eax
0xf67e7218:  call   0xf67da820


call [pc: f67e721d, cc: f67cfca8]

call [pc: f67f0e96, cc: 0003f23e]

ret [pc: f67f0e96, cc: f67cfca8]

call [pc: f67f0eaa, cc: 0003f202]

call [pc: f67f0dcc, cc: f67cffce]

ret [pc: f67f0dcc, cc: 0003f202]

ret [pc: f67f0eaa, cc: f67cfca8]

ret [pc: f67e721d, cc: 00028eb5]
----------------
IN: 
0xf67e721d:  add    $0x10,%esp
0xf67e7220:  test   %eax,%eax
0xf67e7222:  mov    %eax,%esi
0xf67e7224:  je     0xf67e7d79

----------------
IN: 
0xf67e722a:  mov    -0x4c(%ebp),%eax
0xf67e722d:  sub    $0x4,%esp
0xf67e7230:  shl    $0x2,%edi
0xf67e7233:  mov    -0x70(%ebp),%ebx
0xf67e7236:  mov    %eax,(%esi)
0xf67e7238:  lea    0x4(%esi),%eax
0xf67e723b:  push   %edi
0xf67e723c:  pushl  -0x50(%ebp)
0xf67e723f:  push   %eax
0xf67e7240:  call   0xf67f34a0


call [pc: f67e7245, cc: f67cfcf0]

ret [pc: f67e7245, cc: 00028eb5]
----------------
IN: 
0xf67e7245:  mov    -0x54(%ebp),%ecx
0xf67e7248:  add    $0xc,%esp
0xf67e724b:  mov    -0x70(%ebp),%ebx
0xf67e724e:  push   %edi
0xf67e724f:  push   %esi
0xf67e7250:  lea    0x8(%esi,%ecx,4),%eax
0xf67e7254:  push   %eax
0xf67e7255:  call   0xf67f34a0


call [pc: f67e725a, cc: f67cfcef]

ret [pc: f67e725a, cc: 00028eb5]
----------------
IN: 
0xf67e725a:  mov    -0x4c(%ebp),%eax
0xf67e725d:  add    $0x10,%esp
0xf67e7260:  orb    $0x1,0x196(%eax)
0xf67e7267:  mov    %esi,0x1f0(%eax)
0xf67e726d:  mov    -0x68(%ebp),%eax
0xf67e7270:  mov    (%eax),%eax
0xf67e7272:  test   %eax,%eax
0xf67e7274:  je     0xf67e7921

----------------
IN: 
0xf67e7960:  mov    0xf0(%eax),%edi
0xf67e7966:  test   %edi,%edi
0xf67e7968:  jne    0xf67e6fd9

----------------
IN: 
0xf67e796e:  mov    0xe8(%eax),%esi
0xf67e7974:  test   %esi,%esi
0xf67e7976:  jne    0xf67e6fd9

----------------
IN: 
0xf67e797c:  mov    -0x50(%ebp),%ecx
0xf67e797f:  test   %ecx,%ecx
0xf67e7981:  je     0xf67e727a

----------------
IN: 
0xf67e7290:  mov    -0x70(%ebp),%eax
0xf67e7293:  movl   $0x0,-0x88(%ebp)
0xf67e729d:  mov    0x900(%eax),%edx
0xf67e72a3:  test   %edx,%edx
0xf67e72a5:  je     0xf67e7805

----------------
IN: 
0xf67e7805:  mov    -0x90(%ebp),%edi
0xf67e780b:  test   %edi,%edi
0xf67e780d:  je     0xf67e72ab

----------------
IN: 
0xf67e7813:  mov    %edi,0x900(%eax)
0xf67e7819:  jmp    0xf67e72ab

----------------
IN: 
0xf67e72ab:  mov    -0x80(%ebp),%eax
0xf67e72ae:  mov    0x1f0(%eax),%edi
0xf67e72b4:  test   %edi,%edi
0xf67e72b6:  mov    %edi,-0x90(%ebp)
0xf67e72bc:  je     0xf67e72dd

----------------
IN: 
0xf67e72dd:  mov    -0x78(%ebp),%eax
0xf67e72e0:  sub    $0xc,%esp
0xf67e72e3:  mov    -0x70(%ebp),%ebx
0xf67e72e6:  lea    0x4(,%eax,8),%eax
0xf67e72ed:  push   %eax
0xf67e72ee:  call   0xf67da820


call [pc: f67e72f3, cc: f67cfc46]

call [pc: f67f0e96, cc: 0003f2d0]

ret [pc: f67f0e96, cc: f67cfc46]

call [pc: f67f0eaa, cc: 0003f2ec]

call [pc: f67f0dcc, cc: f67cff20]

ret [pc: f67f0dcc, cc: 0003f2ec]

ret [pc: f67f0eaa, cc: f67cfc46]

ret [pc: f67e72f3, cc: 00028eb5]
----------------
IN: 
0xf67e72f3:  add    $0x10,%esp
0xf67e72f6:  test   %eax,%eax
0xf67e72f8:  mov    %eax,-0x50(%ebp)
0xf67e72fb:  je     0xf67e7d98

----------------
IN: 
0xf67e7301:  mov    -0x78(%ebp),%edi
0xf67e7304:  mov    -0x50(%ebp),%ebx
0xf67e7307:  xor    %ecx,%ecx
0xf67e7309:  mov    -0x80(%ebp),%eax
0xf67e730c:  mov    -0x8c(%ebp),%edx
0xf67e7312:  lea    0x4(%ebx,%edi,4),%esi
0xf67e7316:  mov    %edi,0x160(%eax)
0xf67e731c:  mov    %eax,%ebx
0xf67e731e:  mov    0x8(%ebp),%edi
0xf67e7321:  mov    %esi,0x15c(%eax)
0xf67e7327:  jmp    0xf67e7346

----------------
IN: 
0xf67e7346:  test   %edi,%edi
0xf67e7348:  mov    0x4(%edx),%eax
0xf67e734b:  je     0xf67e7329

----------------
IN: 
0xf67e7329:  mov    %eax,(%esi,%ecx,4)
0xf67e732c:  mov    0x4(%edx),%eax
0xf67e732f:  add    $0x1,%ecx
0xf67e7332:  mov    0x15c(%ebx),%esi
0xf67e7338:  andb   $0x9f,0x194(%eax)
0xf67e733f:  mov    0x8(%edx),%edx
0xf67e7342:  test   %edx,%edx
0xf67e7344:  je     0xf67e736b

----------------
IN: 
0xf67e736b:  mov    -0x70(%ebp),%eax
0xf67e736e:  mov    %ecx,-0x68(%ebp)
0xf67e7371:  testb  $0x8,-0x2ff(%eax)
0xf67e7378:  jne    0xf67e7ab8

----------------
IN: 
0xf67e737e:  mov    -0x80(%ebp),%eax
0xf67e7381:  cmp    (%esi),%eax
0xf67e7383:  jne    0xf67e7bd5

----------------
IN: 
0xf67e7389:  mov    -0x80(%ebp),%eax
0xf67e738c:  mov    0x1f4(%eax),%eax
0xf67e7392:  test   %eax,%eax
0xf67e7394:  mov    %eax,-0x4c(%ebp)
0xf67e7397:  je     0xf67e7a78

----------------
IN: 
0xf67e7a78:  mov    -0x68(%ebp),%edi
0xf67e7a7b:  sub    $0x4,%esp
0xf67e7a7e:  mov    -0x70(%ebp),%ebx
0xf67e7a81:  mov    %edi,%eax
0xf67e7a83:  shl    $0x2,%eax
0xf67e7a86:  mov    %eax,-0x8c(%ebp)
0xf67e7a8c:  push   %eax
0xf67e7a8d:  push   %esi
0xf67e7a8e:  pushl  -0x50(%ebp)
0xf67e7a91:  call   0xf67f34a0


call [pc: f67e7a96, cc: f67cf423]

ret [pc: f67e7a96, cc: 00028eb5]
----------------
IN: 
0xf67e7a96:  add    $0x10,%esp
0xf67e7a99:  cmp    $0x1,%edi
0xf67e7a9c:  movl   $0x0,-0x84(%ebp)
0xf67e7aa6:  ja     0xf67e750d

----------------
IN: 
0xf67e750d:  mov    -0x68(%ebp),%edi
0xf67e7510:  mov    %esp,-0x94(%ebp)
0xf67e7516:  mov    -0x70(%ebp),%ebx
0xf67e7519:  lea    (%edi,%edi,1),%edx
0xf67e751c:  lea    0x10(%edx),%eax
0xf67e751f:  and    $0xfffffff0,%eax
0xf67e7522:  sub    %eax,%esp
0xf67e7524:  mov    %esp,-0x54(%ebp)
0xf67e7527:  mov    %esp,%eax
0xf67e7529:  sub    $0x4,%esp
0xf67e752c:  push   %edx
0xf67e752d:  push   $0x0
0xf67e752f:  push   %eax
0xf67e7530:  call   0xf67f3390


call [pc: f67e7535, cc: f67cfb80]
----------------
IN: 
0xf67f33cb:  rep stos %al,%es:(%edi)


ret [pc: f67e7535, cc: 00028eb5]
----------------
IN: 
0xf67e7535:  mov    %edi,%eax
0xf67e7537:  lea    -0x1(%edi),%edi
0xf67e753a:  add    $0x10,%esp
0xf67e753d:  movl   $0x2,-0x6c(%ebp)
0xf67e7544:  mov    %edi,-0x78(%ebp)
0xf67e7547:  mov    -0x50(%ebp),%edi
0xf67e754a:  lea    -0x4(%edi,%eax,4),%eax
0xf67e754e:  mov    $0x1,%edi
0xf67e7553:  mov    %eax,-0x7c(%ebp)
0xf67e7556:  lea    0x0(%esi),%esi
0xf67e7559:  lea    0x0(%edi),%edi
0xf67e7560:  mov    -0x54(%ebp),%eax
0xf67e7563:  lea    (%eax,%edi,2),%ecx
0xf67e7566:  movzwl (%ecx),%eax
0xf67e7569:  add    $0x1,%eax
0xf67e756c:  mov    %ax,-0x74(%ebp)
0xf67e7570:  mov    %ax,(%ecx)
0xf67e7573:  lea    0x0(,%edi,4),%eax
0xf67e757a:  mov    %eax,%edx
0xf67e757c:  mov    %eax,-0x58(%ebp)
0xf67e757f:  mov    -0x50(%ebp),%eax
0xf67e7582:  add    %edx,%eax
0xf67e7584:  mov    %eax,-0x5c(%ebp)
0xf67e7587:  mov    (%eax),%ebx
0xf67e7589:  mov    -0x78(%ebp),%eax
0xf67e758c:  cmp    %eax,%edi
0xf67e758e:  jae    0xf67e7832

----------------
IN: 
0xf67e7594:  mov    -0x7c(%ebp),%edx
0xf67e7597:  mov    %eax,-0x4c(%ebp)
0xf67e759a:  mov    (%edx),%eax
0xf67e759c:  mov    0x1f0(%eax),%eax
0xf67e75a2:  test   %eax,%eax
0xf67e75a4:  je     0xf67e7820

----------------
IN: 
0xf67e7820:  subl   $0x1,-0x4c(%ebp)
0xf67e7824:  sub    $0x4,%edx
0xf67e7827:  mov    -0x4c(%ebp),%eax
0xf67e782a:  cmp    %eax,%edi
0xf67e782c:  jb     0xf67e759a

----------------
IN: 
0xf67e7832:  mov    -0x68(%ebp),%edi
0xf67e7835:  cmp    %edi,-0x6c(%ebp)
0xf67e7838:  jne    0xf67e7606

----------------
IN: 
0xf67e7606:  mov    -0x6c(%ebp),%edi
0xf67e7609:  mov    -0x54(%ebp),%ebx
0xf67e760c:  sub    $0x4,%esp
0xf67e760f:  mov    -0x68(%ebp),%eax
0xf67e7612:  lea    (%ebx,%edi,2),%edx
0xf67e7615:  mov    -0x70(%ebp),%ebx
0xf67e7618:  sub    %edi,%eax
0xf67e761a:  add    %eax,%eax
0xf67e761c:  push   %eax
0xf67e761d:  push   $0x0
0xf67e761f:  push   %edx
0xf67e7620:  call   0xf67f3390


call [pc: f67e7625, cc: f67cf890]

ret [pc: f67e7625, cc: 00028eb5]
----------------
IN: 
0xf67e7625:  lea    0x1(%edi),%eax
0xf67e7628:  add    $0x10,%esp
0xf67e762b:  mov    %eax,-0x6c(%ebp)
0xf67e762e:  jmp    0xf67e7560

----------------
IN: 
0xf67e7560:  mov    -0x54(%ebp),%eax
0xf67e7563:  lea    (%eax,%edi,2),%ecx
0xf67e7566:  movzwl (%ecx),%eax
0xf67e7569:  add    $0x1,%eax
0xf67e756c:  mov    %ax,-0x74(%ebp)
0xf67e7570:  mov    %ax,(%ecx)
0xf67e7573:  lea    0x0(,%edi,4),%eax
0xf67e757a:  mov    %eax,%edx
0xf67e757c:  mov    %eax,-0x58(%ebp)
0xf67e757f:  mov    -0x50(%ebp),%eax
0xf67e7582:  add    %edx,%eax
0xf67e7584:  mov    %eax,-0x5c(%ebp)
0xf67e7587:  mov    (%eax),%ebx
0xf67e7589:  mov    -0x78(%ebp),%eax
0xf67e758c:  cmp    %eax,%edi
0xf67e758e:  jae    0xf67e7832

----------------
IN: 
0xf67e783e:  mov    -0x94(%ebp),%esp
0xf67e7844:  mov    -0x50(%ebp),%edi
0xf67e7847:  mov    -0x8c(%ebp),%ecx
0xf67e784d:  movl   $0x0,(%edi,%ecx,1)
0xf67e7854:  mov    -0x80(%ebp),%eax
0xf67e7857:  orb    $0x1,0x196(%eax)
0xf67e785e:  mov    %edi,0x1f0(%eax)
0xf67e7864:  mov    -0x84(%ebp),%ebx
0xf67e786a:  test   %ebx,%ebx
0xf67e786c:  je     0xf67e7888

----------------
IN: 
0xf67e7888:  mov    -0x90(%ebp),%eax
0xf67e788e:  test   %eax,%eax
0xf67e7890:  je     0xf67e789e

----------------
IN: 
0xf67e789e:  mov    -0x88(%ebp),%esi
0xf67e78a4:  test   %esi,%esi
0xf67e78a6:  jne    0xf67e7dfa

----------------
IN: 
0xf67e78ac:  lea    -0xc(%ebp),%esp
0xf67e78af:  pop    %ebx
0xf67e78b0:  pop    %esi
0xf67e78b1:  pop    %edi
0xf67e78b2:  pop    %ebp
0xf67e78b3:  ret    $0x8


ret [pc: f67dcb3b, cc: f67f458e]
----------------
IN: 
0xf67dcb3b:  rdtsc  
0xf67dcb3d:  mov    -0x4c(%ebp),%esi
0xf67dcb40:  mov    0x160(%edi),%ebx
0xf67dcb46:  add    -0x318(%esi),%eax
0xf67dcb4c:  adc    -0x314(%esi),%edx
0xf67dcb52:  sub    -0x68(%ebp),%eax
0xf67dcb55:  sbb    -0x64(%ebp),%edx
0xf67dcb58:  test   %ebx,%ebx
0xf67dcb5a:  mov    %eax,-0x318(%esi)
0xf67dcb60:  mov    %edi,%eax
0xf67dcb62:  mov    %edx,-0x314(%esi)
0xf67dcb68:  pop    %esi
0xf67dcb69:  pop    %edi
0xf67dcb6a:  je     0xf67dcff1

----------------
IN: 
0xf67dcb70:  mov    0x15c(%eax),%ecx
0xf67dcb76:  mov    %ebx,%eax
0xf67dcb78:  sub    $0x1,%eax
0xf67dcb7b:  mov    (%ecx,%eax,4),%edx
0xf67dcb7e:  orb    $0x10,0x194(%edx)
0xf67dcb85:  test   %eax,%eax
0xf67dcb87:  jne    0xf67dcb78

----------------
IN: 
0xf67dcb78:  sub    $0x1,%eax
0xf67dcb7b:  mov    (%ecx,%eax,4),%edx
0xf67dcb7e:  orb    $0x10,0x194(%edx)
0xf67dcb85:  test   %eax,%eax
0xf67dcb87:  jne    0xf67dcb78

----------------
IN: 
0xf67dcb89:  mov    -0x4c(%ebp),%edi
0xf67dcb8c:  mov    0x548(%edi),%eax
0xf67dcb92:  mov    0x54c(%edi),%edx
0xf67dcb98:  mov    %eax,0xc(%edx)
0xf67dcb9b:  mov    0x548(%edi),%eax
0xf67dcba1:  test   %eax,%eax
0xf67dcba3:  je     0xf67dcba8

----------------
IN: 
0xf67dcba5:  mov    %edx,0x10(%eax)
0xf67dcba8:  cmp    $0x1,%ebx
0xf67dcbab:  jbe    0xf67dcbe3

----------------
IN: 
0xf67dcbad:  mov    -0x50(%ebp),%eax
0xf67dcbb0:  mov    0x15c(%eax),%esi
0xf67dcbb6:  mov    -0x5c(%ebp),%eax
0xf67dcbb9:  cmp    %eax,0x4(%esi)
0xf67dcbbc:  je     0xf67dde36

----------------
IN: 
0xf67dcbc2:  mov    $0x1,%eax
0xf67dcbc7:  lea    0x1(%eax),%edx
0xf67dcbca:  cmp    %edx,%ebx
0xf67dcbcc:  je     0xf67dcbe3

----------------
IN: 
0xf67dcbce:  mov    -0x5c(%ebp),%edi
0xf67dcbd1:  cmp    %edi,(%esi,%edx,4)
0xf67dcbd4:  je     0xf67dd016

----------------
IN: 
0xf67dd016:  shl    $0x2,%eax
0xf67dd019:  mov    -0x4c(%ebp),%ecx
0xf67dd01c:  mov    (%esi,%eax,1),%eax
0xf67dd01f:  mov    %eax,0x54c(%ecx)
0xf67dd025:  mov    -0x58(%ebp),%ecx
0xf67dd028:  test   %ecx,%ecx
0xf67dd02a:  jne    0xf67dde42

----------------
IN: 
0xf67dd030:  add    $0x1,%edx
0xf67dd033:  xor    %ecx,%ecx
0xf67dd035:  cmp    %edx,%ebx
0xf67dd037:  jbe    0xf67dd03c

----------------
IN: 
0xf67dd03c:  mov    -0x4c(%ebp),%edx
0xf67dd03f:  mov    %ecx,0x548(%edx)
0xf67dd045:  mov    -0x12c(%edx),%edx
0xf67dd04b:  mov    0xc(%eax),%ebx
0xf67dd04e:  test   %edx,%edx
0xf67dd050:  je     0xf67dd068

----------------
IN: 
0xf67dd068:  cmp    %ebx,%ecx
0xf67dd06a:  jne    0xf67dde14

----------------
IN: 
0xf67dd070:  mov    -0x5c(%ebp),%edi
0xf67dd073:  mov    %edi,0xc(%eax)
0xf67dd076:  mov    -0x4c(%ebp),%edi
0xf67dd079:  mov    0x548(%edi),%edx
0xf67dd07f:  test   %edx,%edx
0xf67dd081:  je     0xf67dd8d6

----------------
IN: 
0xf67dd8d6:  movb   $0x1,-0x78(%ebp)
0xf67dd8da:  jmp    0xf67dd09a

----------------
IN: 
0xf67dd09a:  mov    -0x58(%ebp),%ecx
0xf67dd09d:  xor    %eax,%eax
0xf67dd09f:  mov    -0x4c(%ebp),%esi
0xf67dd0a2:  test   %ecx,%ecx
0xf67dd0a4:  lea    -0x1f830(%esi),%edx
0xf67dd0aa:  sete   %al
0xf67dd0ad:  mov    %eax,-0x28(%ebp)
0xf67dd0b0:  mov    -0x60(%ebp),%eax
0xf67dd0b3:  mov    %eax,-0x24(%ebp)
0xf67dd0b6:  lea    -0x28(%ebp),%eax
0xf67dd0b9:  mov    %eax,-0x60(%ebp)
0xf67dd0bc:  mov    %eax,%ecx
0xf67dd0be:  lea    -0x233b0(%esi),%eax
0xf67dd0c4:  call   0xf67e9260


call [pc: f67dd0c9, cc: 00029547]
----------------
IN: 
0xf67e9260:  push   %ebp
0xf67e9261:  push   %edi
0xf67e9262:  mov    %eax,%ebp
0xf67e9264:  push   %esi
0xf67e9265:  push   %ebx
0xf67e9266:  call   0xf67f3609


call [pc: f67e926b, cc: f67c072c]

ret [pc: f67e926b, cc: 00029547]
----------------
IN: 
0xf67e926b:  add    $0x14d95,%ebx
0xf67e9271:  sub    $0x1c,%esp
0xf67e9274:  mov    %edx,0xc(%esp)
0xf67e9278:  mov    %ecx,0x8(%esp)
0xf67e927c:  call   *0x538(%ebx)


call [pc: f67e9282, cc: f67c07c5]

call [pc: f67dab15, cc: 0001acd0]

ret [pc: f67dab15, cc: f67c07c5]

ret [pc: f67e9282, cc: 00029547]
----------------
IN: 
0xf67e9282:  mov    %eax,%esi
0xf67e9284:  mov    (%eax),%eax
0xf67e9286:  sub    $0xc,%esp
0xf67e9289:  mov    0x898(%ebx),%edi
0xf67e928f:  movl   $0x0,(%esi)
0xf67e9295:  mov    %ebp,0x898(%ebx)
0xf67e929b:  mov    %eax,0x10(%esp)
0xf67e929f:  mov    0x14(%esp),%ecx
0xf67e92a3:  push   %ecx
0xf67e92a4:  mov    0x1c(%esp),%edx
0xf67e92a8:  call   *%edx


call [pc: f67e92aa, cc: f67c07ed]
----------------
IN: 
0xf67de7d0:  push   %ebx
0xf67de7d1:  mov    $0x1,%edx
0xf67de7d6:  call   0xf67f3601


call [pc: f67de7db, cc: 0001e036]

ret [pc: f67de7db, cc: f67c07ed]
----------------
IN: 
0xf67de7db:  add    $0x1f825,%eax
0xf67de7e0:  sub    $0x8,%esp
0xf67de7e3:  mov    0x10(%esp),%ebx
0xf67de7e7:  mov    0x20(%eax),%eax
0xf67de7ed:  mov    0x4(%ebx),%ecx
0xf67de7f0:  call   0xf67eaa50


call [pc: f67de7f5, cc: 0001e018]
----------------
IN: 
0xf67eaa50:  push   %ebp
0xf67eaa51:  push   %edi
0xf67eaa52:  push   %esi
0xf67eaa53:  push   %ebx
0xf67eaa54:  sub    $0xc,%esp
0xf67eaa57:  test   %eax,%eax
0xf67eaa59:  je     0xf67eaaa2

----------------
IN: 
0xf67eaa5b:  mov    %eax,%ebx
0xf67eaa5d:  mov    %edx,%edi
0xf67eaa5f:  mov    %ecx,%ebp
0xf67eaa61:  xor    %esi,%esi
0xf67eaa63:  jmp    0xf67eaa71

----------------
IN: 
0xf67eaa71:  xor    %eax,%eax
0xf67eaa73:  testb  $0x2,0x195(%ebx)
0xf67eaa7a:  jne    0xf67eaa68

----------------
IN: 
0xf67eaa7c:  mov    %ebx,%eax
0xf67eaa7e:  mov    %ebp,%ecx
0xf67eaa80:  mov    %edi,%edx
0xf67eaa82:  call   0xf67ea5f0


call [pc: f67eaa87, cc: f67f4a9f]
----------------
IN: 
0xf67ea5f0:  push   %ebp
0xf67ea5f1:  mov    %esp,%ebp
0xf67ea5f3:  push   %edi
0xf67ea5f4:  push   %esi
0xf67ea5f5:  push   %ebx
0xf67ea5f6:  call   0xf67f3611


call [pc: f67ea5fb, cc: 0001ef64]

ret [pc: f67ea5fb, cc: f67f4a9f]
----------------
IN: 
0xf67ea5fb:  add    $0x13a05,%edi
0xf67ea601:  sub    $0x6c,%esp
0xf67ea604:  mov    0x34(%eax),%ebx
0xf67ea607:  mov    %edi,-0x58(%ebp)
0xf67ea60a:  test   %ebx,%ebx
0xf67ea60c:  je     0xf67ea981

----------------
IN: 
0xf67ea612:  mov    %edi,%esi
0xf67ea614:  mov    0x4(%ebx),%edi
0xf67ea617:  mov    %ecx,-0x68(%ebp)
0xf67ea61a:  mov    %eax,-0x44(%ebp)
0xf67ea61d:  mov    %edx,-0x54(%ebp)
0xf67ea620:  mov    %edi,-0x48(%ebp)
0xf67ea623:  mov    0xac(%eax),%edi
0xf67ea629:  mov    %edi,%ecx
0xf67ea62b:  mov    %edi,-0x70(%ebp)
0xf67ea62e:  mov    %eax,%edi
0xf67ea630:  mov    0xb4(%eax),%eax
0xf67ea636:  test   %ecx,%ecx
0xf67ea638:  mov    %eax,-0x6c(%ebp)
0xf67ea63b:  je     0xf67ea968

----------------
IN: 
0xf67ea641:  mov    0x4(%ecx),%eax
0xf67ea644:  add    (%edi),%eax
0xf67ea646:  cmpw   $0x1,(%eax)
0xf67ea64a:  mov    %eax,-0x60(%ebp)
0xf67ea64d:  jne    0xf67ea98b

----------------
IN: 
0xf67ea653:  lea    0x20(%esi),%eax
0xf67ea659:  movl   $0x0,-0x40(%ebp)
0xf67ea660:  movl   $0x0,-0x50(%ebp)
0xf67ea667:  mov    %eax,-0x64(%ebp)
0xf67ea66a:  lea    -0x97e1(%esi),%eax
0xf67ea670:  mov    %eax,-0x5c(%ebp)
0xf67ea673:  nop    
0xf67ea674:  lea    0x0(%esi),%esi
0xf67ea678:  mov    -0x60(%ebp),%eax
0xf67ea67b:  mov    -0x48(%ebp),%ebx
0xf67ea67e:  mov    -0x64(%ebp),%edi
0xf67ea681:  add    0x4(%eax),%ebx
0xf67ea684:  mov    -0x44(%ebp),%eax
0xf67ea687:  imul   $0x4c,0x18(%eax),%eax
0xf67ea68b:  mov    (%edi,%eax,1),%esi
0xf67ea68e:  test   %esi,%esi
0xf67ea690:  jne    0xf67ea6ab

----------------
IN: 
0xf67ea6ab:  mov    %esi,%edx
0xf67ea6ad:  mov    %ebx,%eax
0xf67ea6af:  call   0xf67ea160


call [pc: f67ea6b4, cc: 0001ec2b]

call [pc: f67ea16c, cc: f67f4d47]

ret [pc: f67ea16c, cc: 0001ec2b]

call [pc: f67ea17e, cc: f67f4d55]

ret [pc: f67ea17e, cc: 0001ec2b]

call [pc: f67ea1a2, cc: f67f4d89]

ret [pc: f67ea1a2, cc: 0001ec2b]

ret [pc: f67ea6b4, cc: f67f4a9f]
----------------
IN: 
0xf67ea6b4:  test   %eax,%eax
0xf67ea6b6:  je     0xf67ea6a0

----------------
IN: 
0xf67ea6a0:  mov    0xc(%esi),%esi
0xf67ea6a3:  test   %esi,%esi
0xf67ea6a5:  je     0xf67ea760


call [pc: f67ea6b4, cc: 0001ec2b]

call [pc: f67ea16c, cc: f67f4d47]

ret [pc: f67ea16c, cc: 0001ec2b]

call [pc: f67ea17e, cc: f67f4d55]

ret [pc: f67ea17e, cc: 0001ec2b]

call [pc: f67ea1a2, cc: f67f4d89]

ret [pc: f67ea1a2, cc: 0001ec2b]

ret [pc: f67ea6b4, cc: f67f4a9f]
----------------
IN: 
0xf67ea6b8:  mov    %esi,-0x4c(%ebp)
0xf67ea6bb:  mov    -0x68(%ebp),%ebx
0xf67ea6be:  test   %ebx,%ebx
0xf67ea6c0:  jne    0xf67ea7e2

----------------
IN: 
0xf67ea6c6:  mov    -0x60(%ebp),%eax
0xf67ea6c9:  mov    -0x40(%ebp),%edi
0xf67ea6cc:  mov    0x8(%eax),%esi
0xf67ea6cf:  add    %eax,%esi
0xf67ea6d1:  jmp    0xf67ea6da

----------------
IN: 
0xf67ea6da:  mov    -0x4c(%ebp),%eax
0xf67ea6dd:  movzwl 0x4(%esi),%ebx
0xf67ea6e1:  mov    (%esi),%ecx
0xf67ea6e3:  mov    0x14(%eax),%eax
0xf67ea6e6:  and    $0x2,%ebx
0xf67ea6e9:  movzwl %bx,%ebx
0xf67ea6ec:  mov    %eax,-0x3c(%ebp)
0xf67ea6ef:  mov    -0x48(%ebp),%eax
0xf67ea6f2:  add    0x8(%esi),%eax
0xf67ea6f5:  mov    %eax,-0x40(%ebp)
0xf67ea6f8:  mov    -0x44(%ebp),%eax
0xf67ea6fb:  mov    0x18(%eax),%edx
0xf67ea6fe:  mov    0x4(%eax),%eax
0xf67ea701:  cmpb   $0x0,(%eax)
0xf67ea704:  jne    0xf67ea717

----------------
IN: 
0xf67ea706:  mov    -0x58(%ebp),%eax
0xf67ea709:  mov    -0x308(%eax),%eax
0xf67ea70f:  mov    (%eax),%eax
0xf67ea711:  test   %eax,%eax
0xf67ea713:  cmove  -0x5c(%ebp),%eax
0xf67ea717:  push   %ebx
0xf67ea718:  pushl  -0x54(%ebp)
0xf67ea71b:  pushl  -0x3c(%ebp)
0xf67ea71e:  pushl  -0x40(%ebp)
0xf67ea721:  call   0xf67ea230


call [pc: f67ea726, cc: 0001edb9]
----------------
IN: 
0xf67ea230:  push   %ebp
0xf67ea231:  mov    %esp,%ebp
0xf67ea233:  push   %edi
0xf67ea234:  push   %esi
0xf67ea235:  push   %ebx
0xf67ea236:  mov    %ecx,%edi
0xf67ea238:  call   0xf67f3609


call [pc: f67ea23d, cc: f67f4f84]

ret [pc: f67ea23d, cc: 0001edb9]
----------------
IN: 
0xf67ea23d:  add    $0x13dc3,%ebx
0xf67ea243:  sub    $0x3c,%esp
0xf67ea246:  mov    %eax,-0x40(%ebp)
0xf67ea249:  mov    0xc(%ebp),%eax
0xf67ea24c:  testb  $0x10,-0x300(%ebx)
0xf67ea253:  mov    0x34(%eax),%eax
0xf67ea256:  mov    0x4(%eax),%ecx
0xf67ea259:  jne    0xf67ea448

----------------
IN: 
0xf67ea25f:  mov    0xc(%ebp),%eax
0xf67ea262:  mov    0xb4(%eax),%eax
0xf67ea268:  test   %eax,%eax
0xf67ea26a:  je     0xf67ea4a0

----------------
IN: 
0xf67ea270:  mov    0x4(%eax),%esi
0xf67ea273:  test   %esi,%esi
0xf67ea275:  je     0xf67ea5cd

----------------
IN: 
0xf67ea27b:  mov    0xc(%ebp),%eax
0xf67ea27e:  add    (%eax),%esi
0xf67ea280:  cmpw   $0x1,(%esi)
0xf67ea284:  jne    0xf67ea2a2

----------------
IN: 
0xf67ea286:  cmp    %edi,0x8(%esi)
0xf67ea289:  je     0xf67ea320

----------------
IN: 
0xf67ea28f:  mov    0x10(%esi),%eax
0xf67ea292:  test   %eax,%eax
0xf67ea294:  je     0xf67ea350

----------------
IN: 
0xf67ea29a:  add    %eax,%esi
0xf67ea29c:  cmpw   $0x1,(%esi)
0xf67ea2a0:  je     0xf67ea286

----------------
IN: 
0xf67ea320:  mov    0xc(%esi),%eax
0xf67ea323:  mov    %ecx,%edx
0xf67ea325:  sub    $0x8,%esp
0xf67ea328:  mov    %ecx,-0x3c(%ebp)
0xf67ea32b:  add    (%esi,%eax,1),%edx
0xf67ea32e:  push   %edx
0xf67ea32f:  pushl  0x8(%ebp)
0xf67ea332:  call   0xf67f2cd0


call [pc: f67ea337, cc: f67f4e8e]

ret [pc: f67ea337, cc: 0001edb9]
----------------
IN: 
0xf67ea337:  add    $0x10,%esp
0xf67ea33a:  test   %eax,%eax
0xf67ea33c:  mov    -0x3c(%ebp),%ecx
0xf67ea33f:  jne    0xf67ea28f

----------------
IN: 
0xf67ea345:  lea    -0xc(%ebp),%esp
0xf67ea348:  pop    %ebx
0xf67ea349:  pop    %esi
0xf67ea34a:  pop    %edi
0xf67ea34b:  pop    %ebp
0xf67ea34c:  ret    $0x10


ret [pc: f67ea726, cc: f67f4a9f]
----------------
IN: 
0xf67ea726:  or     %eax,-0x50(%ebp)
0xf67ea729:  movzwl 0x6(%esi),%eax
0xf67ea72d:  and    $0x7fff,%eax
0xf67ea732:  cmp    %eax,%edi
0xf67ea734:  cmovb  %eax,%edi
0xf67ea737:  mov    0xc(%esi),%eax
0xf67ea73a:  test   %eax,%eax
0xf67ea73c:  jne    0xf67ea6d8

----------------
IN: 
0xf67ea6d8:  add    %eax,%esi
0xf67ea6da:  mov    -0x4c(%ebp),%eax
0xf67ea6dd:  movzwl 0x4(%esi),%ebx
0xf67ea6e1:  mov    (%esi),%ecx
0xf67ea6e3:  mov    0x14(%eax),%eax
0xf67ea6e6:  and    $0x2,%ebx
0xf67ea6e9:  movzwl %bx,%ebx
0xf67ea6ec:  mov    %eax,-0x3c(%ebp)
0xf67ea6ef:  mov    -0x48(%ebp),%eax
0xf67ea6f2:  add    0x8(%esi),%eax
0xf67ea6f5:  mov    %eax,-0x40(%ebp)
0xf67ea6f8:  mov    -0x44(%ebp),%eax
0xf67ea6fb:  mov    0x18(%eax),%edx
0xf67ea6fe:  mov    0x4(%eax),%eax
0xf67ea701:  cmpb   $0x0,(%eax)
0xf67ea704:  jne    0xf67ea717


call [pc: f67ea726, cc: 0001edb9]

call [pc: f67ea23d, cc: f67f4f84]

ret [pc: f67ea23d, cc: 0001edb9]

call [pc: f67ea337, cc: f67f4e8e]

ret [pc: f67ea337, cc: 0001edb9]

ret [pc: f67ea726, cc: f67f4a9f]
----------------
IN: 
0xf67ea73e:  mov    %edi,-0x40(%ebp)
0xf67ea741:  mov    -0x60(%ebp),%edi
0xf67ea744:  mov    0xc(%edi),%eax
0xf67ea747:  test   %eax,%eax
0xf67ea749:  je     0xf67ea800

----------------
IN: 
0xf67ea800:  mov    -0x6c(%ebp),%ecx
0xf67ea803:  test   %ecx,%ecx
0xf67ea805:  je     0xf67ea84a

----------------
IN: 
0xf67ea84a:  mov    -0x40(%ebp),%edx
0xf67ea84d:  mov    -0x50(%ebp),%eax
0xf67ea850:  test   %edx,%edx
0xf67ea852:  jne    0xf67ea85c

----------------
IN: 
0xf67ea85c:  mov    -0x40(%ebp),%esi
0xf67ea85f:  sub    $0x8,%esp
0xf67ea862:  mov    -0x58(%ebp),%ebx
0xf67ea865:  push   $0x10
0xf67ea867:  add    $0x1,%esi
0xf67ea86a:  push   %esi
0xf67ea86b:  call   0xf67da830


call [pc: f67ea870, cc: 0001e2ef]

call [pc: f67f0ec0, cc: f67eec2f]

ret [pc: f67f0ec0, cc: 0001e2ef]

call [pc: f67f0ef9, cc: f67eec16]

call [pc: f67f0e96, cc: 0001e280]

ret [pc: f67f0e96, cc: f67eec16]

call [pc: f67f0eaa, cc: 0001e2bc]

call [pc: f67f0dcc, cc: f67eef70]

ret [pc: f67f0dcc, cc: 0001e2bc]

ret [pc: f67f0eaa, cc: f67eec16]

ret [pc: f67f0ef9, cc: 0001e2ef]

ret [pc: f67ea870, cc: f67f4a9f]
----------------
IN: 
0xf67ea870:  mov    -0x44(%ebp),%ecx
0xf67ea873:  mov    %eax,%edi
0xf67ea875:  add    $0x10,%esp
0xf67ea878:  test   %edi,%edi
0xf67ea87a:  mov    %edi,0x170(%ecx)
0xf67ea880:  je     0xf67eaa31

----------------
IN: 
0xf67ea886:  mov    0xe4(%ecx),%eax
0xf67ea88c:  mov    %esi,0x174(%ecx)
0xf67ea892:  mov    0x4(%eax),%eax
0xf67ea895:  mov    %eax,0x1a4(%ecx)
0xf67ea89b:  mov    -0x70(%ebp),%eax
0xf67ea89e:  test   %eax,%eax
0xf67ea8a0:  je     0xf67ea911

----------------
IN: 
0xf67ea8a2:  mov    0x4(%eax),%ebx
0xf67ea8a5:  add    (%ecx),%ebx
0xf67ea8a7:  mov    %edi,-0x40(%ebp)
0xf67ea8aa:  mov    -0x48(%ebp),%edi
0xf67ea8ad:  lea    0x0(%esi),%esi
0xf67ea8b0:  mov    0x8(%ebx),%ecx
0xf67ea8b3:  mov    %ebx,-0x3c(%ebp)
0xf67ea8b6:  add    %ebx,%ecx
0xf67ea8b8:  jmp    0xf67ea8c2

----------------
IN: 
0xf67ea8c2:  movzwl 0x6(%ecx),%edx
0xf67ea8c6:  mov    %edx,%eax
0xf67ea8c8:  and    $0x7fff,%eax
0xf67ea8cd:  cmp    %eax,%esi
0xf67ea8cf:  jbe    0xf67ea8f9

----------------
IN: 
0xf67ea8d1:  shl    $0x4,%eax
0xf67ea8d4:  add    -0x40(%ebp),%eax
0xf67ea8d7:  mov    (%ecx),%ebx
0xf67ea8d9:  and    $0x8000,%dx
0xf67ea8de:  movzwl %dx,%edx
0xf67ea8e1:  mov    %edx,0x8(%eax)
0xf67ea8e4:  mov    0x8(%ecx),%edx
0xf67ea8e7:  mov    %ebx,0x4(%eax)
0xf67ea8ea:  mov    -0x3c(%ebp),%ebx
0xf67ea8ed:  add    %edi,%edx
0xf67ea8ef:  mov    %edx,(%eax)
0xf67ea8f1:  mov    %edi,%edx
0xf67ea8f3:  add    0x4(%ebx),%edx
0xf67ea8f6:  mov    %edx,0xc(%eax)
0xf67ea8f9:  mov    0xc(%ecx),%eax
0xf67ea8fc:  test   %eax,%eax
0xf67ea8fe:  jne    0xf67ea8c0

----------------
IN: 
0xf67ea8c0:  add    %eax,%ecx
0xf67ea8c2:  movzwl 0x6(%ecx),%edx
0xf67ea8c6:  mov    %edx,%eax
0xf67ea8c8:  and    $0x7fff,%eax
0xf67ea8cd:  cmp    %eax,%esi
0xf67ea8cf:  jbe    0xf67ea8f9

----------------
IN: 
0xf67ea900:  mov    -0x3c(%ebp),%ebx
0xf67ea903:  mov    0xc(%ebx),%eax
0xf67ea906:  test   %eax,%eax
0xf67ea908:  je     0xf67ea90e

----------------
IN: 
0xf67ea90e:  mov    -0x40(%ebp),%edi
0xf67ea911:  mov    -0x6c(%ebp),%eax
0xf67ea914:  test   %eax,%eax
0xf67ea916:  je     0xf67ea95d

----------------
IN: 
0xf67ea95d:  mov    -0x50(%ebp),%eax
0xf67ea960:  lea    -0xc(%ebp),%esp
0xf67ea963:  pop    %ebx
0xf67ea964:  pop    %esi
0xf67ea965:  pop    %edi
0xf67ea966:  pop    %ebp
0xf67ea967:  ret    


ret [pc: f67eaa87, cc: 0001e018]
----------------
IN: 
0xf67eaa87:  mov    0xc(%ebx),%ebx
0xf67eaa8a:  test   %eax,%eax
0xf67eaa8c:  setne  %al
0xf67eaa8f:  movzbl %al,%eax
0xf67eaa92:  or     %eax,%esi
0xf67eaa94:  test   %ebx,%ebx
0xf67eaa96:  jne    0xf67eaa71


call [pc: f67eaa87, cc: f67f4a9f]

call [pc: f67ea5fb, cc: 0001ef64]

ret [pc: f67ea5fb, cc: f67f4a9f]

call [pc: f67ea6b4, cc: 0001ec2b]

call [pc: f67ea16c, cc: f67f4d47]

ret [pc: f67ea16c, cc: 0001ec2b]

call [pc: f67ea17e, cc: f67f4d55]

ret [pc: f67ea17e, cc: 0001ec2b]

call [pc: f67ea1a2, cc: f67f4d89]

ret [pc: f67ea1a2, cc: 0001ec2b]

ret [pc: f67ea6b4, cc: f67f4a9f]

call [pc: f67ea6b4, cc: 0001ec2b]

call [pc: f67ea16c, cc: f67f4d47]

ret [pc: f67ea16c, cc: 0001ec2b]

call [pc: f67ea17e, cc: f67f4d55]

ret [pc: f67ea17e, cc: 0001ec2b]

call [pc: f67ea1a2, cc: f67f4d89]

ret [pc: f67ea1a2, cc: 0001ec2b]

ret [pc: f67ea6b4, cc: f67f4a9f]

call [pc: f67ea6b4, cc: 0001ec2b]

call [pc: f67ea16c, cc: f67f4d47]

ret [pc: f67ea16c, cc: 0001ec2b]

call [pc: f67ea17e, cc: f67f4d55]

ret [pc: f67ea17e, cc: 0001ec2b]

call [pc: f67ea1a2, cc: f67f4d89]

ret [pc: f67ea1a2, cc: 0001ec2b]

call [pc: f67ea1a2, cc: f67f4d89]

ret [pc: f67ea1a2, cc: 0001ec2b]

ret [pc: f67ea6b4, cc: f67f4a9f]
----------------
IN: 
0xf67ea717:  push   %ebx
0xf67ea718:  pushl  -0x54(%ebp)
0xf67ea71b:  pushl  -0x3c(%ebp)
0xf67ea71e:  pushl  -0x40(%ebp)
0xf67ea721:  call   0xf67ea230


call [pc: f67ea726, cc: 0001edb9]

call [pc: f67ea23d, cc: f67f4f84]

ret [pc: f67ea23d, cc: 0001edb9]

call [pc: f67ea337, cc: f67f4e8e]

ret [pc: f67ea337, cc: 0001edb9]

ret [pc: f67ea726, cc: f67f4a9f]

call [pc: f67ea726, cc: 0001edb9]

call [pc: f67ea23d, cc: f67f4f84]

ret [pc: f67ea23d, cc: 0001edb9]

call [pc: f67ea337, cc: f67f4e8e]

ret [pc: f67ea337, cc: 0001edb9]

ret [pc: f67ea726, cc: f67f4a9f]

call [pc: f67ea726, cc: 0001edb9]

call [pc: f67ea23d, cc: f67f4f84]

ret [pc: f67ea23d, cc: 0001edb9]

call [pc: f67ea337, cc: f67f4e8e]

ret [pc: f67ea337, cc: 0001edb9]

ret [pc: f67ea726, cc: f67f4a9f]
----------------
IN: 
0xf67ea807:  mov    -0x6c(%ebp),%eax
0xf67ea80a:  mov    -0x40(%ebp),%edi
0xf67ea80d:  mov    0x4(%eax),%edx
0xf67ea810:  mov    -0x44(%ebp),%eax
0xf67ea813:  add    (%eax),%edx
0xf67ea815:  movzwl 0x4(%edx),%eax
0xf67ea819:  and    $0x7fff,%eax
0xf67ea81e:  cmp    %eax,%edi
0xf67ea820:  cmovae %edi,%eax
0xf67ea823:  mov    %eax,%ecx
0xf67ea825:  mov    %eax,-0x40(%ebp)
0xf67ea828:  mov    0x10(%edx),%eax
0xf67ea82b:  test   %eax,%eax
0xf67ea82d:  je     0xf67ea84a

----------------
IN: 
0xf67ea82f:  nop    
0xf67ea830:  add    %eax,%edx
0xf67ea832:  movzwl 0x4(%edx),%eax
0xf67ea836:  and    $0x7fff,%eax
0xf67ea83b:  cmp    %eax,%ecx
0xf67ea83d:  cmovb  %eax,%ecx
0xf67ea840:  mov    0x10(%edx),%eax
0xf67ea843:  test   %eax,%eax
0xf67ea845:  jne    0xf67ea830

----------------
IN: 
0xf67ea830:  add    %eax,%edx
0xf67ea832:  movzwl 0x4(%edx),%eax
0xf67ea836:  and    $0x7fff,%eax
0xf67ea83b:  cmp    %eax,%ecx
0xf67ea83d:  cmovb  %eax,%ecx
0xf67ea840:  mov    0x10(%edx),%eax
0xf67ea843:  test   %eax,%eax
0xf67ea845:  jne    0xf67ea830

----------------
IN: 
0xf67ea847:  mov    %ecx,-0x40(%ebp)
0xf67ea84a:  mov    -0x40(%ebp),%edx
0xf67ea84d:  mov    -0x50(%ebp),%eax
0xf67ea850:  test   %edx,%edx
0xf67ea852:  jne    0xf67ea85c


call [pc: f67ea870, cc: 0001e2ef]

call [pc: f67f0ec0, cc: f67eec2f]

ret [pc: f67f0ec0, cc: 0001e2ef]

call [pc: f67f0ef9, cc: f67eec16]

call [pc: f67f0e96, cc: 0001e280]

ret [pc: f67f0e96, cc: f67eec16]

call [pc: f67f0eaa, cc: 0001e2bc]

call [pc: f67f0dcc, cc: f67eef70]

ret [pc: f67f0dcc, cc: 0001e2bc]

ret [pc: f67f0eaa, cc: f67eec16]

ret [pc: f67f0ef9, cc: 0001e2ef]

ret [pc: f67ea870, cc: f67f4a9f]
----------------
IN: 
0xf67ea918:  mov    -0x44(%ebp),%ecx
0xf67ea91b:  mov    0x4(%eax),%eax
0xf67ea91e:  mov    -0x48(%ebp),%ebx
0xf67ea921:  add    (%ecx),%eax
0xf67ea923:  jmp    0xf67ea92a

----------------
IN: 
0xf67ea92a:  testb  $0x1,0x2(%eax)
0xf67ea92e:  jne    0xf67ea956

----------------
IN: 
0xf67ea956:  mov    0x10(%eax),%edx
0xf67ea959:  test   %edx,%edx
0xf67ea95b:  jne    0xf67ea928

----------------
IN: 
0xf67ea928:  add    %edx,%eax
0xf67ea92a:  testb  $0x1,0x2(%eax)
0xf67ea92e:  jne    0xf67ea956

----------------
IN: 
0xf67ea930:  movzwl 0x4(%eax),%edx
0xf67ea934:  mov    0xc(%eax),%ecx
0xf67ea937:  mov    0x8(%eax),%esi
0xf67ea93a:  and    $0x7fff,%edx
0xf67ea940:  shl    $0x4,%edx
0xf67ea943:  add    %edi,%edx
0xf67ea945:  mov    %esi,0x4(%edx)
0xf67ea948:  mov    (%eax,%ecx,1),%esi
0xf67ea94b:  movl   $0x0,0xc(%edx)
0xf67ea952:  add    %ebx,%esi
0xf67ea954:  mov    %esi,(%edx)
0xf67ea956:  mov    0x10(%eax),%edx
0xf67ea959:  test   %edx,%edx
0xf67ea95b:  jne    0xf67ea928


ret [pc: f67eaa87, cc: 0001e018]

call [pc: f67eaa87, cc: f67f4a9f]

call [pc: f67ea5fb, cc: 0001ef64]

ret [pc: f67ea5fb, cc: f67f4a9f]
----------------
IN: 
0xf67ea968:  mov    -0x6c(%ebp),%eax
0xf67ea96b:  movl   $0x0,-0x40(%ebp)
0xf67ea972:  movl   $0x0,-0x50(%ebp)
0xf67ea979:  test   %eax,%eax
0xf67ea97b:  jne    0xf67ea807


call [pc: f67ea870, cc: 0001e2ef]

call [pc: f67f0ec0, cc: f67eec2f]

ret [pc: f67f0ec0, cc: 0001e2ef]

call [pc: f67f0ef9, cc: f67eec16]

call [pc: f67f0e96, cc: 0001e280]

ret [pc: f67f0e96, cc: f67eec16]

call [pc: f67f0eaa, cc: 0001e2bc]

call [pc: f67f0dcc, cc: f67eef70]

ret [pc: f67f0dcc, cc: 0001e2bc]

ret [pc: f67f0eaa, cc: f67eec16]

ret [pc: f67f0ef9, cc: 0001e2ef]

ret [pc: f67ea870, cc: f67f4a9f]
----------------
IN: 
0xf67ea911:  mov    -0x6c(%ebp),%eax
0xf67ea914:  test   %eax,%eax
0xf67ea916:  je     0xf67ea95d


ret [pc: f67eaa87, cc: 0001e018]
----------------
IN: 
0xf67eaa98:  add    $0xc,%esp
0xf67eaa9b:  mov    %esi,%eax
0xf67eaa9d:  pop    %ebx
0xf67eaa9e:  pop    %esi
0xf67eaa9f:  pop    %edi
0xf67eaaa0:  pop    %ebp
0xf67eaaa1:  ret    


ret [pc: f67de7f5, cc: f67c07ed]
----------------
IN: 
0xf67de7f5:  test   %eax,%eax
0xf67de7f7:  je     0xf67de7ff

----------------
IN: 
0xf67de7ff:  add    $0x8,%esp
0xf67de802:  pop    %ebx
0xf67de803:  ret    


ret [pc: f67e92aa, cc: 00029547]
----------------
IN: 
0xf67e92aa:  mov    0x14(%esp),%eax
0xf67e92ae:  mov    %edi,0x898(%ebx)
0xf67e92b4:  mov    %eax,(%esi)
0xf67e92b6:  add    $0x2c,%esp
0xf67e92b9:  pop    %ebx
0xf67e92ba:  pop    %esi
0xf67e92bb:  pop    %edi
0xf67e92bc:  pop    %ebp
0xf67e92bd:  ret    


ret [pc: f67dd0c9, cc: f67f458e]
----------------
IN: 
0xf67dd0c9:  movzbl 0x868(%esi),%eax
0xf67dd0d0:  mov    -0x6c(%ebp),%ebx
0xf67dd0d3:  test   %ebx,%ebx
0xf67dd0d5:  mov    %al,-0x8c(%ebp)
0xf67dd0db:  jne    0xf67dd0e5

----------------
IN: 
0xf67dd0dd:  call   0xf67da8f4


call [pc: f67dd0e2, cc: 0002956c]
----------------
IN: 
0xf67da8f4:  push   %edi
0xf67da8f5:  push   %esi
0xf67da8f6:  xor    %eax,%eax
0xf67da8f8:  call   0xf67f360d


call [pc: f67da8fd, cc: f67f3d91]

ret [pc: f67da8fd, cc: 0002956c]
----------------
IN: 
0xf67da8fd:  add    $0x23703,%esi
0xf67da903:  push   %ebx
0xf67da904:  sub    $0x10,%esp
0xf67da907:  cmpl   $0x0,0x844(%esi)
0xf67da90e:  mov    0x82c(%esi),%edi
0xf67da914:  mov    %edi,0x834(%esi)
0xf67da91a:  jne    0xf67daa63

----------------
IN: 
0xf67da920:  lea    0x200(,%edi,8),%eax
0xf67da927:  push   %ecx
0xf67da928:  push   %ecx
0xf67da929:  push   $0x1
0xf67da92b:  mov    %esi,%ebx
0xf67da92d:  push   %eax
0xf67da92e:  call   0xf67da830


call [pc: f67da933, cc: f67f3c5f]

call [pc: f67f0ec0, cc: 0000329f]

ret [pc: f67f0ec0, cc: f67f3c5f]

call [pc: f67f0ef9, cc: 000032a6]

call [pc: f67f0e96, cc: f67f3c30]

ret [pc: f67f0e96, cc: 000032a6]

call [pc: f67f0eaa, cc: f67f3c0c]

call [pc: f67f0dcc, cc: 000031c0]

ret [pc: f67f0dcc, cc: f67f3c0c]

call [pc: f67f0e2c, cc: 00003220]

call [pc: f67f2849, cc: f67f1a69]

ret [pc: f67f2849, cc: 00003220]

ret [pc: f67f0e2c, cc: f67f3c0c]

ret [pc: f67f0eaa, cc: 000032a6]

ret [pc: f67f0ef9, cc: f67f3c5f]

ret [pc: f67da933, cc: 0002956c]
----------------
IN: 
0xf67da933:  add    $0x10,%esp
0xf67da936:  cmpl   $0x0,0x6c(%esi)
0xf67da93d:  lea    0x3f(%edi),%edx
0xf67da940:  mov    %eax,0x830(%esi)
0xf67da946:  lea    0x8(%eax),%ecx
0xf67da949:  movl   $0x0,0x4(%eax)
0xf67da950:  mov    %edx,(%eax)
0xf67da952:  je     0xf67da973

----------------
IN: 
0xf67da973:  mov    0x20(%esi),%eax
0xf67da979:  xor    %edx,%edx
0xf67da97b:  test   %eax,%eax
0xf67da97d:  je     0xf67da992

----------------
IN: 
0xf67da97f:  cmpl   $0x0,0x234(%eax)
0xf67da986:  je     0xf67da98d

----------------
IN: 
0xf67da98d:  mov    0xc(%eax),%eax
0xf67da990:  jmp    0xf67da97b

----------------
IN: 
0xf67da97b:  test   %eax,%eax
0xf67da97d:  je     0xf67da992

----------------
IN: 
0xf67da988:  mov    %eax,0x4(%ecx,%edx,8)
0xf67da98c:  inc    %edx
0xf67da98d:  mov    0xc(%eax),%eax
0xf67da990:  jmp    0xf67da97b

----------------
IN: 
0xf67da992:  cmp    %edx,%edi
0xf67da994:  je     0xf67da9b5

----------------
IN: 
0xf67da9b5:  call   0xf67eba20


call [pc: f67da9ba, cc: f67f3cd6]
----------------
IN: 
0xf67eba20:  push   %ebp
0xf67eba21:  push   %edi
0xf67eba22:  push   %esi
0xf67eba23:  push   %ebx
0xf67eba24:  call   0xf67f3601


call [pc: f67eba29, cc: 000186ff]

ret [pc: f67eba29, cc: f67f3cd6]
----------------
IN: 
0xf67eba29:  add    $0x125d7,%eax
0xf67eba2e:  sub    $0x3c,%esp
0xf67eba31:  mov    %eax,0x2c(%esp)
0xf67eba35:  mov    0x830(%eax),%eax
0xf67eba3b:  test   %eax,%eax
0xf67eba3d:  je     0xf67ebc0e

----------------
IN: 
0xf67eba43:  mov    0x4(%eax),%edx
0xf67eba46:  test   %edx,%edx
0xf67eba48:  jne    0xf67ebbeb

----------------
IN: 
0xf67eba4e:  lea    0x8(%eax),%edi
0xf67eba51:  mov    %edi,0x24(%esp)
0xf67eba55:  mov    0xc(%eax),%edi
0xf67eba58:  test   %edi,%edi
0xf67eba5a:  je     0xf67ebbab

----------------
IN: 
0xf67eba60:  mov    (%eax),%eax
0xf67eba62:  test   %eax,%eax
0xf67eba64:  mov    %eax,0x28(%esp)
0xf67eba68:  je     0xf67ebbc8

----------------
IN: 
0xf67eba6e:  movl   $0x0,0xc(%esp)
0xf67eba76:  movl   $0x0,0x10(%esp)
0xf67eba7e:  movl   $0x0,0x1c(%esp)
0xf67eba86:  movl   $0x0,0x14(%esp)
0xf67eba8e:  movl   $0x40,0x18(%esp)
0xf67eba96:  jmp    0xf67ebae7

----------------
IN: 
0xf67ebae7:  mov    0x238(%edi),%ecx
0xf67ebaed:  mov    0x23c(%edi),%eax
0xf67ebaf3:  mov    0x234(%edi),%ebp
0xf67ebaf9:  lea    -0x1(%ecx),%esi
0xf67ebafc:  neg    %eax
0xf67ebafe:  lea    -0x1(%ecx,%ebp,1),%ebx
0xf67ebb02:  and    %eax,%esi
0xf67ebb04:  mov    0x18(%esp),%eax
0xf67ebb08:  cmp    %ecx,%eax
0xf67ebb0a:  cmovb  %ecx,%eax
0xf67ebb0d:  sub    %esi,%ebx
0xf67ebb0f:  mov    %eax,0x18(%esp)
0xf67ebb13:  mov    0x1c(%esp),%eax
0xf67ebb17:  sub    0x14(%esp),%eax
0xf67ebb1b:  cmp    %ebp,%eax
0xf67ebb1d:  mov    %eax,0x20(%esp)
0xf67ebb21:  jae    0xf67ebaa0

----------------
IN: 
0xf67ebb27:  mov    0x10(%esp),%eax
0xf67ebb2b:  xor    %edx,%edx
0xf67ebb2d:  add    %ebx,%eax
0xf67ebb2f:  mov    0x10(%esp),%ebx
0xf67ebb33:  div    %ecx
0xf67ebb35:  imul   %eax,%ecx
0xf67ebb38:  mov    %ebx,%eax
0xf67ebb3a:  add    %ebp,%eax
0xf67ebb3c:  add    0x20(%esp),%eax
0xf67ebb40:  add    %ecx,%esi
0xf67ebb42:  cmp    %eax,%esi
0xf67ebb44:  jbe    0xf67ebb52

----------------
IN: 
0xf67ebb52:  mov    %esi,0x240(%edi)
0xf67ebb58:  mov    %esi,0x10(%esp)
0xf67ebb5c:  jmp    0xf67ebac0

----------------
IN: 
0xf67ebac0:  addl   $0x1,0xc(%esp)
0xf67ebac5:  mov    0x24(%esp),%edi
0xf67ebac9:  mov    0xc(%esp),%eax
0xf67ebacd:  mov    0x4(%edi,%eax,8),%edi
0xf67ebad1:  test   %edi,%edi
0xf67ebad3:  je     0xf67ebb68

----------------
IN: 
0xf67ebb68:  mov    0x10(%esp),%eax
0xf67ebb6c:  mov    0x2c(%esp),%edi
0xf67ebb70:  xor    %edx,%edx
0xf67ebb72:  mov    %eax,0x83c(%edi)
0xf67ebb78:  mov    0x18(%esp),%edi
0xf67ebb7c:  mov    %eax,%esi
0xf67ebb7e:  lea    0x67f(%esi,%edi,1),%eax
0xf67ebb85:  div    %edi
0xf67ebb87:  imul   %edi,%eax
0xf67ebb8a:  add    $0x4c0,%eax
0xf67ebb8f:  mov    0x2c(%esp),%esi
0xf67ebb93:  mov    %eax,0x838(%esi)
0xf67ebb99:  mov    0x18(%esp),%eax
0xf67ebb9d:  mov    %eax,0x840(%esi)
0xf67ebba3:  add    $0x3c,%esp
0xf67ebba6:  pop    %ebx
0xf67ebba7:  pop    %esi
0xf67ebba8:  pop    %edi
0xf67ebba9:  pop    %ebp
0xf67ebbaa:  ret    


ret [pc: f67da9ba, cc: 0002956c]
----------------
IN: 
0xf67da9ba:  call   0xf67ebd10


call [pc: f67da9bf, cc: f67f3cd3]
----------------
IN: 
0xf67ebd10:  push   %edi
0xf67ebd11:  push   %esi
0xf67ebd12:  push   %ebx
0xf67ebd13:  call   0xf67f3609


call [pc: f67ebd18, cc: 000181cb]

ret [pc: f67ebd18, cc: f67f3cd3]
----------------
IN: 
0xf67ebd18:  add    $0x122e8,%ebx
0xf67ebd1e:  sub    $0x18,%esp
0xf67ebd21:  mov    0x838(%ebx),%edi
0xf67ebd27:  push   %edi
0xf67ebd28:  pushl  0x840(%ebx)
0xf67ebd2e:  call   0xf67da810


call [pc: f67ebd33, cc: 000181e0]

call [pc: f67f0dcc, cc: f67e8c2c]

ret [pc: f67f0dcc, cc: 000181e0]

ret [pc: f67ebd33, cc: f67f3cd3]
----------------
IN: 
0xf67ebd33:  add    $0x10,%esp
0xf67ebd36:  test   %eax,%eax
0xf67ebd38:  je     0xf67ebd80

----------------
IN: 
0xf67ebd3a:  lea    -0x4c0(%eax,%edi,1),%edx
0xf67ebd41:  mov    %eax,%esi
0xf67ebd43:  xor    %eax,%eax
0xf67ebd45:  lea    0x4(%edx),%edi
0xf67ebd48:  mov    %edx,%ecx
0xf67ebd4a:  movl   $0x0,(%edx)
0xf67ebd50:  movl   $0x0,0x4bc(%edx)
0xf67ebd5a:  and    $0xfffffffc,%edi
0xf67ebd5d:  sub    %edi,%ecx
0xf67ebd5f:  add    $0x4c0,%ecx
0xf67ebd65:  shr    $0x2,%ecx
0xf67ebd68:  rep stos %eax,%es:(%edi)

----------------
IN: 
0xf67ebd68:  rep stos %eax,%es:(%edi)

----------------
IN: 
0xf67ebd6a:  mov    %edx,%eax
0xf67ebd6c:  call   0xf67eb600


call [pc: f67ebd71, cc: 000181a2]
----------------
IN: 
0xf67eb600:  push   %edi
0xf67eb601:  push   %esi
0xf67eb602:  mov    %eax,%edi
0xf67eb604:  push   %ebx
0xf67eb605:  call   0xf67f3609


call [pc: f67eb60a, cc: f67f37a8]

ret [pc: f67eb60a, cc: 000181a2]
----------------
IN: 
0xf67eb60a:  add    $0x129f6,%ebx
0xf67eb610:  sub    $0x8,%esp
0xf67eb613:  mov    0x82c(%ebx),%eax
0xf67eb619:  push   $0x8
0xf67eb61b:  lea    0xe(%eax),%esi
0xf67eb61e:  add    $0x10,%eax
0xf67eb621:  push   %eax
0xf67eb622:  call   0xf67da830


call [pc: f67eb627, cc: f67f3785]

call [pc: f67f0ec0, cc: 00003945]

ret [pc: f67f0ec0, cc: f67f3785]

call [pc: f67f0ef9, cc: 0000397c]

call [pc: f67f0e96, cc: f67f37ea]

ret [pc: f67f0e96, cc: 0000397c]

call [pc: f67f0eaa, cc: f67f37d6]

call [pc: f67f0dcc, cc: 00003a1a]

ret [pc: f67f0dcc, cc: f67f37d6]

ret [pc: f67f0eaa, cc: 0000397c]

ret [pc: f67f0ef9, cc: f67f3785]

ret [pc: f67eb627, cc: 000181a2]
----------------
IN: 
0xf67eb627:  add    $0x10,%esp
0xf67eb62a:  test   %eax,%eax
0xf67eb62c:  je     0xf67eb640

----------------
IN: 
0xf67eb62e:  mov    %esi,(%eax)
0xf67eb630:  add    $0x8,%eax
0xf67eb633:  mov    %eax,0x4(%edi)
0xf67eb636:  mov    %edi,%eax
0xf67eb638:  pop    %ebx
0xf67eb639:  pop    %esi
0xf67eb63a:  pop    %edi
0xf67eb63b:  ret    


ret [pc: f67ebd71, cc: f67f3cd3]
----------------
IN: 
0xf67ebd71:  test   %eax,%eax
0xf67ebd73:  je     0xf67ebd90

----------------
IN: 
0xf67ebd75:  add    $0x10,%esp
0xf67ebd78:  pop    %ebx
0xf67ebd79:  pop    %esi
0xf67ebd7a:  pop    %edi
0xf67ebd7b:  ret    


ret [pc: f67da9bf, cc: 0002956c]
----------------
IN: 
0xf67da9bf:  test   %eax,%eax
0xf67da9c1:  mov    %eax,%edx
0xf67da9c3:  jne    0xf67da9e6

----------------
IN: 
0xf67da9e6:  mov    0x4(%eax),%eax
0xf67da9e9:  mov    %esp,%ebx
0xf67da9eb:  mov    %eax,0x844(%esi)
0xf67da9f1:  mov    -0x134(%esi),%eax
0xf67da9f7:  mov    %edx,(%edx)
0xf67da9f9:  mov    %edx,0x8(%edx)
0xf67da9fc:  movl   $0xffffffff,(%esp)
0xf67daa03:  mov    %eax,0x10(%edx)
0xf67daa06:  mov    %edx,0x4(%esp)
0xf67daa0a:  mov    $0xf3,%eax
0xf67daa0f:  movl   $0xfffff,0x8(%esp)
0xf67daa17:  movl   $0x51,0xc(%esp)
0xf67daa1f:  int    $0x80

----------------
IN: 
0xf67daa21:  test   %eax,%eax
0xf67daa23:  jne    0xf67daa3c

----------------
IN: 
0xf67daa25:  mov    (%esp),%eax
0xf67daa28:  lea    0x3(,%eax,8),%eax
0xf67daa2f:  mov    %eax,%gs
0xf67daa31:  movb   $0x1,0x868(%esi)
0xf67daa38:  mov    %edx,%eax
0xf67daa3a:  jmp    0xf67daa63

----------------
IN: 
0xf67daa63:  add    $0x10,%esp
0xf67daa66:  pop    %ebx
0xf67daa67:  pop    %esi
0xf67daa68:  pop    %edi
0xf67daa69:  ret    


ret [pc: f67dd0e2, cc: f67f458e]
----------------
IN: 
0xf67dd0e2:  mov    %eax,-0x6c(%ebp)
0xf67dd0e5:  mov    -0x4c(%ebp),%esi
0xf67dd0e8:  mov    0x890(%esi),%edx
0xf67dd0ee:  test   %edx,%edx
0xf67dd0f0:  jne    0xf67dd11b

----------------
IN: 
0xf67dd0f2:  mov    -0xd0(%esi),%edx
0xf67dd0f8:  mov    (%edx),%eax
0xf67dd0fa:  xor    %al,%al
0xf67dd0fc:  mov    %eax,%gs:0x14
0xf67dd102:  mov    0x4(%edx),%eax
0xf67dd105:  mov    %eax,%gs:0x18
0xf67dd10b:  mov    %eax,-0x310(%esi)
0xf67dd111:  movl   $0x0,-0xd0(%esi)
0xf67dd11b:  mov    -0x58(%ebp),%eax
0xf67dd11e:  test   %eax,%eax
0xf67dd120:  jne    0xf67dd7b1

----------------
IN: 
0xf67dd126:  mov    -0x50(%ebp),%ecx
0xf67dd129:  mov    0x13c(%ecx),%edx
0xf67dd12f:  test   %edx,%edx
0xf67dd131:  je     0xf67dd61d

----------------
IN: 
0xf67dd61d:  mov    -0x50(%ebp),%edx
0xf67dd620:  mov    -0x4c(%ebp),%esi
0xf67dd623:  mov    %edx,%eax
0xf67dd625:  add    $0x15c,%eax
0xf67dd62a:  testb  $0x2,-0x2ff(%esi)
0xf67dd631:  mov    %eax,0x28(%esi)
0xf67dd637:  mov    %edx,%eax
0xf67dd639:  mov    0x160(%edx),%edx
0xf67dd63f:  mov    0x15c(%eax),%eax
0xf67dd645:  mov    %edx,-0x2e4(%esi)
0xf67dd64b:  mov    %eax,-0x2e8(%esi)
0xf67dd651:  mov    0x534(%esi),%eax
0xf67dd657:  mov    %eax,-0x138(%esi)
0xf67dd65d:  je     0xf67dd521

----------------
IN: 
0xf67dd521:  mov    -0x4c(%ebp),%edx
0xf67dd524:  mov    -0x148(%edx),%eax
0xf67dd52a:  test   %eax,%eax
0xf67dd52c:  setne  %al
0xf67dd52f:  movzbl %al,%eax
0xf67dd532:  mov    %eax,%edi
0xf67dd534:  or     %edi,-0x2d4(%edx)
0xf67dd53a:  rdtsc  
0xf67dd53c:  mov    %eax,-0x58(%ebp)
0xf67dd53f:  mov    -0x50(%ebp),%eax
0xf67dd542:  mov    %edi,-0x68(%ebp)
0xf67dd545:  mov    %edx,-0x54(%ebp)
0xf67dd548:  mov    0x160(%eax),%esi
0xf67dd54e:  lea    -0x4(,%esi,4),%ebx
0xf67dd555:  mov    %ebx,%edi
0xf67dd557:  jmp    0xf67dd5c6

----------------
IN: 
0xf67dd5c6:  test   %esi,%esi
0xf67dd5c8:  jne    0xf67dd560

----------------
IN: 
0xf67dd560:  mov    -0x50(%ebp),%eax
0xf67dd563:  mov    0x1f0(%eax),%eax
0xf67dd569:  mov    (%eax,%edi,1),%ebx
0xf67dd56c:  mov    0x1c(%ebx),%eax
0xf67dd56f:  mov    0x4(%eax),%eax
0xf67dd572:  test   %eax,%eax
0xf67dd574:  jne    0xf67dd609

----------------
IN: 
0xf67dd609:  movl   $0x1,0x8(%eax)
0xf67dd610:  mov    0x4(%eax),%eax
0xf67dd613:  test   %eax,%eax
0xf67dd615:  je     0xf67dd57a

----------------
IN: 
0xf67dd57a:  andb   $0xfe,0x196(%ebx)
0xf67dd581:  cmp    -0x5c(%ebp),%ebx
0xf67dd584:  je     0xf67dd5aa

----------------
IN: 
0xf67dd5aa:  mov    0x234(%ebx),%eax
0xf67dd5b0:  test   %eax,%eax
0xf67dd5b2:  je     0xf67dd5c0

----------------
IN: 
0xf67dd5c0:  sub    $0x1,%esi
0xf67dd5c3:  sub    $0x4,%edi
0xf67dd5c6:  test   %esi,%esi
0xf67dd5c8:  jne    0xf67dd560

----------------
IN: 
0xf67dd586:  mov    -0x4c(%ebp),%eax
0xf67dd589:  pushl  -0x68(%ebp)
0xf67dd58c:  mov    -0x2d4(%eax),%eax
0xf67dd592:  test   %eax,%eax
0xf67dd594:  setne  %al
0xf67dd597:  movzbl %al,%eax
0xf67dd59a:  push   %eax
0xf67dd59b:  pushl  0x1cc(%ebx)
0xf67dd5a1:  push   %ebx
0xf67dd5a2:  call   0xf67e4fa0


call [pc: f67dd5a7, cc: 00029029]
----------------
IN: 
0xf67e4fa0:  push   %ebp
0xf67e4fa1:  call   0xf67f3601


call [pc: f67e4fa6, cc: f67cdf8f]

ret [pc: f67e4fa6, cc: 00029029]
----------------
IN: 
0xf67e4fa6:  add    $0x1905a,%eax
0xf67e4fab:  mov    %esp,%ebp
0xf67e4fad:  push   %edi
0xf67e4fae:  push   %esi
0xf67e4faf:  push   %ebx
0xf67e4fb0:  sub    $0xac,%esp
0xf67e4fb6:  testl  $0x8000000,0x10(%ebp)
0xf67e4fbd:  mov    %eax,-0x60(%ebp)
0xf67e4fc0:  mov    0x8(%ebp),%edi
0xf67e4fc3:  jne    0xf67e4fd6

----------------
IN: 
0xf67e4fc5:  mov    -0xf8(%eax),%eax
0xf67e4fcb:  test   %eax,%eax
0xf67e4fcd:  setne  %al
0xf67e4fd0:  movzbl %al,%eax
0xf67e4fd3:  or     %eax,0x14(%ebp)
0xf67e4fd6:  testb  $0x4,0x194(%edi)
0xf67e4fdd:  jne    0xf67e5491

----------------
IN: 
0xf67e4fe3:  mov    0x14(%ebp),%esi
0xf67e4fe6:  test   %esi,%esi
0xf67e4fe8:  je     0xf67e54a0

----------------
IN: 
0xf67e54a0:  mov    0x80(%edi),%ebx
0xf67e54a6:  test   %ebx,%ebx
0xf67e54a8:  je     0xf67e4fee

----------------
IN: 
0xf67e4fee:  mov    0x10(%ebp),%eax
0xf67e4ff1:  and    $0x1,%eax
0xf67e4ff4:  mov    %eax,-0x94(%ebp)
0xf67e4ffa:  mov    -0x60(%ebp),%eax
0xf67e4ffd:  testb  $0x20,-0x300(%eax)
0xf67e5004:  jne    0xf67e5c4a

----------------
IN: 
0xf67e500a:  mov    0x78(%edi),%esi
0xf67e500d:  movl   $0x0,-0x98(%ebp)
0xf67e5017:  test   %esi,%esi
0xf67e5019:  jne    0xf67e5b83

----------------
IN: 
0xf67e501f:  mov    0x34(%edi),%eax
0xf67e5022:  mov    0x7c(%edi),%ebx
0xf67e5025:  mov    0x4(%eax),%eax
0xf67e5028:  test   %ebx,%ebx
0xf67e502a:  mov    %eax,-0x84(%ebp)
0xf67e5030:  je     0xf67e5067

----------------
IN: 
0xf67e5032:  mov    -0x94(%ebp),%ecx
0xf67e5038:  test   %ecx,%ecx
0xf67e503a:  je     0xf67e5067

----------------
IN: 
0xf67e503c:  mov    0x2c(%edi),%eax
0xf67e503f:  mov    0x4(%eax),%eax
0xf67e5042:  mov    0x4(%eax),%edx
0xf67e5045:  test   %edx,%edx
0xf67e5047:  jne    0xf67e5500

----------------
IN: 
0xf67e504d:  mov    0x14(%ebp),%edx
0xf67e5050:  mov    %edi,0x4(%eax)
0xf67e5053:  mov    -0x60(%ebp),%esi
0xf67e5056:  test   %edx,%edx
0xf67e5058:  jne    0xf67e66a4

----------------
IN: 
0xf67e505e:  lea    -0xf100(%esi),%edx
0xf67e5064:  mov    %edx,0x8(%eax)
0xf67e5067:  xor    %eax,%eax
0xf67e5069:  movl   $0x0,-0x38(%ebp,%eax,1)
0xf67e5071:  add    $0x4,%eax
0xf67e5074:  cmp    $0x20,%eax
0xf67e5077:  jb     0xf67e5069

----------------
IN: 
0xf67e5069:  movl   $0x0,-0x38(%ebp,%eax,1)
0xf67e5071:  add    $0x4,%eax
0xf67e5074:  cmp    $0x20,%eax
0xf67e5077:  jb     0xf67e5069

----------------
IN: 
0xf67e5079:  mov    0x64(%edi),%eax
0xf67e507c:  test   %eax,%eax
0xf67e507e:  je     0xf67e5b60

----------------
IN: 
0xf67e5084:  mov    0x4(%eax),%eax
0xf67e5087:  mov    %eax,-0x5c(%ebp)
0xf67e508a:  mov    %eax,-0x38(%ebp)
0xf67e508d:  mov    0x68(%edi),%eax
0xf67e5090:  mov    0x4(%eax),%esi
0xf67e5093:  mov    0xbc(%edi),%eax
0xf67e5099:  test   %eax,%eax
0xf67e509b:  mov    %esi,-0x34(%ebp)
0xf67e509e:  je     0xf67e50a6

----------------
IN: 
0xf67e50a0:  mov    0x4(%eax),%eax
0xf67e50a3:  mov    %eax,-0x30(%ebp)
0xf67e50a6:  mov    -0x5c(%ebp),%eax
0xf67e50a9:  add    %esi,%eax
0xf67e50ab:  mov    0x70(%edi),%edx
0xf67e50ae:  test   %edx,%edx
0xf67e50b0:  je     0xf67e50bc

----------------
IN: 
0xf67e50b2:  cmpl   $0x11,0x4(%edx)
0xf67e50b6:  je     0xf67e5a90

----------------
IN: 
0xf67e5a90:  mov    0x7c(%edi),%edx
0xf67e5a93:  mov    0x28(%edi),%ecx
0xf67e5a96:  mov    0x4(%edx),%edx
0xf67e5a99:  mov    0x4(%ecx),%ecx
0xf67e5a9c:  lea    (%edx,%ecx,1),%ebx
0xf67e5a9f:  cmp    %eax,%ebx
0xf67e5aa1:  je     0xf67e65fe

----------------
IN: 
0xf67e5aa7:  mov    -0x94(%ebp),%ebx
0xf67e5aad:  test   %ebx,%ebx
0xf67e5aaf:  jne    0xf67e5ab9

----------------
IN: 
0xf67e5ab9:  mov    -0x94(%ebp),%eax
0xf67e5abf:  mov    %edx,-0x28(%ebp)
0xf67e5ac2:  mov    %ecx,-0x24(%ebp)
0xf67e5ac5:  mov    %eax,-0x1c(%ebp)
0xf67e5ac8:  jmp    0xf67e50bc

----------------
IN: 
0xf67e50bc:  mov    (%edi),%edx
0xf67e50be:  mov    0x10(%ebp),%eax
0xf67e50c1:  mov    %edi,0x8(%ebp)
0xf67e50c4:  mov    %edx,%ecx
0xf67e50c6:  mov    -0x60(%ebp),%edx
0xf67e50c9:  and    $0x2000000,%eax
0xf67e50ce:  mov    %eax,-0x8c(%ebp)
0xf67e50d4:  lea    -0x38(%ebp),%eax
0xf67e50d7:  mov    %ecx,%edi
0xf67e50d9:  lea    0x53c(%edx),%ebx
0xf67e50df:  mov    %eax,-0xa0(%ebp)
0xf67e50e5:  mov    %eax,-0x90(%ebp)
0xf67e50eb:  lea    -0xe070(%edx),%edx
0xf67e50f1:  lea    -0x18(%ebp),%eax
0xf67e50f4:  mov    %ebx,-0xa4(%ebp)
0xf67e50fa:  mov    -0x5c(%ebp),%ebx
0xf67e50fd:  mov    %eax,-0x9c(%ebp)
0xf67e5103:  mov    %edx,-0xa8(%ebp)
0xf67e5109:  xor    %eax,%eax
0xf67e510b:  add    %ebx,%esi
0xf67e510d:  test   %eax,%eax
0xf67e510f:  mov    %esi,-0x5c(%ebp)
0xf67e5112:  je     0xf67e5650

----------------
IN: 
0xf67e5650:  mov    0x8(%ebp),%eax
0xf67e5653:  mov    0x38(%eax),%eax
0xf67e5656:  mov    0x4(%eax),%eax
0xf67e5659:  mov    %eax,-0x68(%ebp)
0xf67e565c:  mov    -0x90(%ebp),%eax
0xf67e5662:  mov    0x8(%eax),%eax
0xf67e5665:  lea    (%ebx,%eax,8),%eax
0xf67e5668:  mov    %eax,-0x78(%ebp)
0xf67e566b:  mov    -0xa4(%ebp),%eax
0xf67e5671:  cmp    %eax,0x8(%ebp)
0xf67e5674:  je     0xf67e56af

----------------
IN: 
0xf67e5676:  test   %edi,%edi
0xf67e5678:  je     0xf67e56af

----------------
IN: 
0xf67e567a:  cmp    -0x78(%ebp),%ebx
0xf67e567d:  jae    0xf67e56af

----------------
IN: 
0xf67e567f:  mov    (%ebx),%eax
0xf67e5681:  add    %edi,%eax
0xf67e5683:  cmpb   $0x8,0x4(%ebx)
0xf67e5687:  jne    0xf67e6d4e

----------------
IN: 
0xf67e568d:  mov    -0x78(%ebp),%edx
0xf67e5690:  jmp    0xf67e56a6

----------------
IN: 
0xf67e56a6:  add    $0x8,%ebx
0xf67e56a9:  add    %edi,(%eax)
0xf67e56ab:  cmp    %ebx,%edx
0xf67e56ad:  ja     0xf67e5698

----------------
IN: 
0xf67e5698:  mov    (%ebx),%eax
0xf67e569a:  add    %edi,%eax
0xf67e569c:  cmpb   $0x8,0x4(%ebx)
0xf67e56a0:  jne    0xf67e6d4e

----------------
IN: 
0xf67e56af:  mov    0x8(%ebp),%eax
0xf67e56b2:  mov    0xe4(%eax),%eax
0xf67e56b8:  test   %eax,%eax
0xf67e56ba:  je     0xf67e62eb

----------------
IN: 
0xf67e56c0:  mov    -0x78(%ebp),%ecx
0xf67e56c3:  cmp    %ecx,-0x5c(%ebp)
0xf67e56c6:  mov    0x4(%eax),%eax
0xf67e56c9:  mov    %eax,-0x7c(%ebp)
0xf67e56cc:  jbe    0xf67e5190

----------------
IN: 
0xf67e56d2:  mov    -0x60(%ebp),%eax
0xf67e56d5:  mov    %edi,-0x80(%ebp)
0xf67e56d8:  lea    -0x9854(%eax),%eax
0xf67e56de:  mov    %eax,-0xac(%ebp)
0xf67e56e4:  lea    0x0(%esi),%esi
0xf67e56e8:  mov    -0x78(%ebp),%edi
0xf67e56eb:  mov    -0x7c(%ebp),%eax
0xf67e56ee:  mov    -0x80(%ebp),%esi
0xf67e56f1:  mov    0x4(%edi),%ecx
0xf67e56f4:  add    (%edi),%esi
0xf67e56f6:  mov    0x8(%ebp),%edi
0xf67e56f9:  mov    %ecx,%ebx
0xf67e56fb:  shr    $0x8,%ebx
0xf67e56fe:  mov    %esi,-0x64(%ebp)
0xf67e5701:  movzbl %cl,%esi
0xf67e5704:  movzwl (%eax,%ebx,2),%eax
0xf67e5708:  shl    $0x4,%ebx
0xf67e570b:  add    -0x68(%ebp),%ebx
0xf67e570e:  cmp    $0x8,%esi
0xf67e5711:  mov    0x170(%edi),%edx
0xf67e5717:  mov    %ebx,-0x44(%ebp)
0xf67e571a:  je     0xf67e5a30

----------------
IN: 
0xf67e5720:  test   %esi,%esi
0xf67e5722:  je     0xf67e5830

----------------
IN: 
0xf67e5728:  movzbl 0xc(%ebx),%ecx
0xf67e572c:  shr    $0x4,%cl
0xf67e572f:  test   %cl,%cl
0xf67e5731:  je     0xf67e59e0

----------------
IN: 
0xf67e5737:  mov    0x8(%ebp),%ecx
0xf67e573a:  cmp    0x21c(%ecx),%ebx
0xf67e5740:  je     0xf67e5ad0

----------------
IN: 
0xf67e5746:  cmp    $0x7,%esi
0xf67e5749:  je     0xf67e59f0

----------------
IN: 
0xf67e574f:  cmp    $0x23,%esi
0xf67e5752:  je     0xf67e59f0

----------------
IN: 
0xf67e5758:  lea    -0xe(%esi),%ecx
0xf67e575b:  xor    %edi,%edi
0xf67e575d:  cmp    $0x1b,%ecx
0xf67e5760:  ja     0xf67e576c

----------------
IN: 
0xf67e576c:  cmp    $0x5,%esi
0xf67e576f:  je     0xf67e59fe

----------------
IN: 
0xf67e5775:  xor    %ecx,%ecx
0xf67e5777:  cmp    $0x6,%esi
0xf67e577a:  sete   %cl
0xf67e577d:  shl    $0x2,%ecx
0xf67e5780:  or     %ecx,%edi
0xf67e5782:  and    $0x7fff,%eax
0xf67e5787:  mov    0x8(%ebp),%ecx
0xf67e578a:  shl    $0x4,%eax
0xf67e578d:  add    %eax,%edx
0xf67e578f:  mov    %edi,0x220(%ecx)
0xf67e5795:  mov    %ebx,0x21c(%ecx)
0xf67e579b:  je     0xf67e57aa

----------------
IN: 
0xf67e579d:  mov    0x4(%edx),%eax
0xf67e57a0:  test   %eax,%eax
0xf67e57a2:  mov    $0x0,%eax
0xf67e57a7:  cmove  %eax,%edx
0xf67e57aa:  sub    $0xc,%esp
0xf67e57ad:  mov    -0x84(%ebp),%eax
0xf67e57b3:  add    (%ebx),%eax
0xf67e57b5:  push   $0x0
0xf67e57b7:  push   $0x1
0xf67e57b9:  lea    -0x44(%ebp),%ecx
0xf67e57bc:  push   %edi
0xf67e57bd:  push   %edx
0xf67e57be:  mov    0x8(%ebp),%edx
0xf67e57c1:  pushl  0xc(%ebp)
0xf67e57c4:  call   0xf67e3960


call [pc: f67e57c9, cc: f67cc7e0]
----------------
IN: 
0xf67e3960:  push   %ebp
0xf67e3961:  mov    %esp,%ebp
0xf67e3963:  push   %edi
0xf67e3964:  push   %esi
0xf67e3965:  push   %ebx
0xf67e3966:  mov    $0x1505,%ebx
0xf67e396b:  call   0xf67f3611


call [pc: f67e3970, cc: 0002fe90]

ret [pc: f67e3970, cc: f67cc7e0]
----------------
IN: 
0xf67e3970:  add    $0x1a690,%edi
0xf67e3976:  sub    $0x7c,%esp
0xf67e3979:  mov    %eax,-0x64(%ebp)
0xf67e397c:  mov    %edx,-0x6c(%ebp)
0xf67e397f:  mov    %eax,%edx
0xf67e3981:  movzbl (%eax),%eax
0xf67e3984:  mov    %edi,-0x70(%ebp)
0xf67e3987:  mov    %ecx,-0x5c(%ebp)
0xf67e398a:  test   %al,%al
0xf67e398c:  je     0xf67e39a3

----------------
IN: 
0xf67e398e:  xchg   %ax,%ax
0xf67e3990:  mov    %ebx,%ecx
0xf67e3992:  add    $0x1,%edx
0xf67e3995:  shl    $0x5,%ecx
0xf67e3998:  add    %ecx,%ebx
0xf67e399a:  add    %eax,%ebx
0xf67e399c:  movzbl (%edx),%eax
0xf67e399f:  test   %al,%al
0xf67e39a1:  jne    0xf67e3990

----------------
IN: 
0xf67e3990:  mov    %ebx,%ecx
0xf67e3992:  add    $0x1,%edx
0xf67e3995:  shl    $0x5,%ecx
0xf67e3998:  add    %ecx,%ebx
0xf67e399a:  add    %eax,%ebx
0xf67e399c:  movzbl (%edx),%eax
0xf67e399f:  test   %al,%al
0xf67e39a1:  jne    0xf67e3990

----------------
IN: 
0xf67e39a3:  mov    -0x70(%ebp),%eax
0xf67e39a6:  mov    0xc(%ebp),%esi
0xf67e39a9:  movl   $0xffffffff,-0x50(%ebp)
0xf67e39b0:  movl   $0x0,-0x48(%ebp)
0xf67e39b7:  movl   $0x0,-0x44(%ebp)
0xf67e39be:  addl   $0x1,0x52c(%eax)
0xf67e39c5:  test   %esi,%esi
0xf67e39c7:  je     0xf67e39d6

----------------
IN: 
0xf67e39c9:  testl  $0xfffffffa,0x14(%ebp)
0xf67e39d0:  jne    0xf67e448d

----------------
IN: 
0xf67e39d6:  mov    0x18(%ebp),%ecx
0xf67e39d9:  mov    0x8(%ebp),%eax
0xf67e39dc:  test   %ecx,%ecx
0xf67e39de:  mov    (%eax),%eax
0xf67e39e0:  jne    0xf67e3b92

----------------
IN: 
0xf67e39e6:  test   %eax,%eax
0xf67e39e8:  movl   $0x0,-0x74(%ebp)
0xf67e39ef:  je     0xf67e3bb8

----------------
IN: 
0xf67e39f5:  lea    -0x50(%ebp),%edi
0xf67e39f8:  mov    %ebx,-0x60(%ebp)
0xf67e39fb:  mov    -0x74(%ebp),%edx
0xf67e39fe:  mov    0x8(%ebp),%esi
0xf67e3a01:  mov    0x18(%ebp),%ebx
0xf67e3a04:  mov    %edi,-0x68(%ebp)
0xf67e3a07:  lea    -0x48(%ebp),%edi
0xf67e3a0a:  jmp    0xf67e3a25

----------------
IN: 
0xf67e3a25:  sub    $0xc,%esp
0xf67e3a28:  pushl  -0x6c(%ebp)
0xf67e3a2b:  pushl  0x10(%ebp)
0xf67e3a2e:  push   %ebx
0xf67e3a2f:  pushl  0x14(%ebp)
0xf67e3a32:  pushl  0xc(%ebp)
0xf67e3a35:  push   %edx
0xf67e3a36:  push   %eax
0xf67e3a37:  mov    -0x5c(%ebp),%eax
0xf67e3a3a:  push   %edi
0xf67e3a3b:  mov    -0x68(%ebp),%ecx
0xf67e3a3e:  mov    -0x60(%ebp),%edx
0xf67e3a41:  pushl  (%eax)
0xf67e3a43:  mov    -0x64(%ebp),%eax
0xf67e3a46:  call   0xf67e2ec0


call [pc: f67e3a4b, cc: 0002fdab]
----------------
IN: 
0xf67e2ec0:  push   %ebp
0xf67e2ec1:  push   %edi
0xf67e2ec2:  push   %esi
0xf67e2ec3:  push   %ebx
0xf67e2ec4:  call   0xf67f3609


call [pc: f67e2ec9, cc: f67cd362]

ret [pc: f67e2ec9, cc: 0002fdab]
----------------
IN: 
0xf67e2ec9:  add    $0x1b137,%ebx
0xf67e2ecf:  sub    $0x5c,%esp
0xf67e2ed2:  mov    %eax,0xc(%esp)
0xf67e2ed6:  mov    0x78(%esp),%eax
0xf67e2eda:  mov    %ebx,0x8(%esp)
0xf67e2ede:  mov    %edx,0x10(%esp)
0xf67e2ee2:  mov    %ecx,0x2c(%esp)
0xf67e2ee6:  mov    0x7c(%esp),%esi
0xf67e2eea:  mov    0x4(%eax),%edi
0xf67e2eed:  mov    (%eax),%ebp
0xf67e2eef:  mov    %edx,%eax
0xf67e2ef1:  mov    %edi,(%esp)
0xf67e2ef4:  shr    $0x5,%eax
0xf67e2ef7:  mov    %eax,0x24(%esp)
0xf67e2efb:  lea    -0x7698(%ebx),%eax
0xf67e2f01:  mov    %eax,0x28(%esp)
0xf67e2f05:  lea    -0x97e1(%ebx),%eax
0xf67e2f0b:  mov    %eax,0x30(%esp)
0xf67e2f0f:  nop    
0xf67e2f10:  mov    0x0(%ebp,%esi,4),%eax
0xf67e2f14:  mov    0x14(%eax),%edi
0xf67e2f17:  cmp    0x88(%esp),%edi
0xf67e2f1e:  je     0xf67e3008

----------------
IN: 
0xf67e2f24:  mov    0x8c(%esp),%eax
0xf67e2f2b:  and    $0x2,%eax
0xf67e2f2e:  mov    %eax,0x4(%esp)
0xf67e2f32:  je     0xf67e2f41

----------------
IN: 
0xf67e2f41:  testb  $0x20,0x195(%edi)
0xf67e2f48:  jne    0xf67e3008

----------------
IN: 
0xf67e2f4e:  mov    0x8(%esp),%eax
0xf67e2f52:  testb  $0x8,-0x300(%eax)
0xf67e2f59:  jne    0xf67e3020

----------------
IN: 
0xf67e2f5f:  mov    0x178(%edi),%eax
0xf67e2f65:  test   %eax,%eax
0xf67e2f67:  mov    %eax,0x18(%esp)
0xf67e2f6b:  je     0xf67e3008

----------------
IN: 
0xf67e2f71:  mov    0x38(%edi),%eax
0xf67e2f74:  mov    0x184(%edi),%edx
0xf67e2f7a:  movl   $0x0,0x48(%esp)
0xf67e2f82:  movl   $0x0,0x4c(%esp)
0xf67e2f8a:  mov    0x4(%eax),%eax
0xf67e2f8d:  test   %edx,%edx
0xf67e2f8f:  mov    %eax,0x14(%esp)
0xf67e2f93:  mov    0x34(%edi),%eax
0xf67e2f96:  mov    0x4(%eax),%eax
0xf67e2f99:  mov    %eax,0x1c(%esp)
0xf67e2f9d:  je     0xf67e3060

----------------
IN: 
0xf67e2fa3:  mov    0x24(%esp),%eax
0xf67e2fa7:  and    0x17c(%edi),%eax
0xf67e2fad:  mov    0x10(%esp),%ebx
0xf67e2fb1:  mov    0x180(%edi),%ecx
0xf67e2fb7:  mov    (%edx,%eax,4),%eax
0xf67e2fba:  mov    %ebx,%edx
0xf67e2fbc:  shr    %cl,%edx
0xf67e2fbe:  mov    %edx,%ecx
0xf67e2fc0:  mov    %eax,%edx
0xf67e2fc2:  shr    %cl,%edx
0xf67e2fc4:  mov    %ebx,%ecx
0xf67e2fc6:  shr    %cl,%eax
0xf67e2fc8:  and    %edx,%eax
0xf67e2fca:  test   $0x1,%al
0xf67e2fcc:  jne    0xf67e34a0

----------------
IN: 
0xf67e2fd2:  mov    $0x1,%eax
0xf67e2fd7:  mov    0x80(%esp),%edx
0xf67e2fde:  test   %edx,%edx
0xf67e2fe0:  je     0xf67e3008

----------------
IN: 
0xf67e2fe2:  test   %al,%al
0xf67e2fe4:  je     0xf67e3008

----------------
IN: 
0xf67e2fe6:  mov    0x80(%esp),%eax
0xf67e2fed:  mov    0xc(%eax),%eax
0xf67e2ff0:  test   %eax,%eax
0xf67e2ff2:  je     0xf67e3008

----------------
IN: 
0xf67e3008:  add    $0x1,%esi
0xf67e300b:  cmp    %esi,(%esp)
0xf67e300e:  ja     0xf67e2f10

----------------
IN: 
0xf67e2f10:  mov    0x0(%ebp,%esi,4),%eax
0xf67e2f14:  mov    0x14(%eax),%edi
0xf67e2f17:  cmp    0x88(%esp),%edi
0xf67e2f1e:  je     0xf67e3008

----------------
IN: 
0xf67e34a0:  xor    %edx,%edx
0xf67e34a2:  mov    %ebx,%eax
0xf67e34a4:  divl   0x18(%esp)
0xf67e34a8:  mov    0x188(%edi),%eax
0xf67e34ae:  mov    (%eax,%edx,4),%eax
0xf67e34b1:  test   %eax,%eax
0xf67e34b3:  je     0xf67e2fd2

----------------
IN: 
0xf67e34b9:  mov    0x18c(%edi),%edx
0xf67e34bf:  mov    %ebp,0x34(%esp)
0xf67e34c3:  mov    %ecx,%ebp
0xf67e34c5:  mov    %esi,0x7c(%esp)
0xf67e34c9:  lea    (%edx,%eax,4),%ebx
0xf67e34cc:  lea    0x48(%esp),%edx
0xf67e34d0:  mov    %edx,0x18(%esp)
0xf67e34d4:  lea    0x4c(%esp),%edx
0xf67e34d8:  mov    %edx,0x20(%esp)
0xf67e34dc:  jmp    0xf67e34eb

----------------
IN: 
0xf67e34eb:  mov    (%ebx),%eax
0xf67e34ed:  mov    %ebp,%edx
0xf67e34ef:  xor    %eax,%edx
0xf67e34f1:  shr    %edx
0xf67e34f3:  jne    0xf67e34e0

----------------
IN: 
0xf67e34e0:  add    $0x4,%ebx
0xf67e34e3:  test   $0x1,%al
0xf67e34e5:  jne    0xf67e36fb

----------------
IN: 
0xf67e34f5:  mov    %ebx,%esi
0xf67e34f7:  sub    0x18c(%edi),%esi
0xf67e34fd:  pushl  0x18(%esp)
0xf67e3501:  pushl  0x24(%esp)
0xf67e3505:  push   %edi
0xf67e3506:  pushl  0x28(%esp)
0xf67e350a:  sar    $0x2,%esi
0xf67e350d:  mov    %esi,%eax
0xf67e350f:  push   %esi
0xf67e3510:  shl    $0x4,%eax
0xf67e3513:  add    0x28(%esp),%eax
0xf67e3517:  push   %eax
0xf67e3518:  pushl  0xa4(%esp)
0xf67e351f:  pushl  0xa0(%esp)
0xf67e3526:  mov    0xa0(%esp),%ecx
0xf67e352d:  mov    0x90(%esp),%edx
0xf67e3534:  mov    0x2c(%esp),%eax
0xf67e3538:  call   0xf67e2d30


call [pc: f67e353d, cc: f67cc896]
----------------
IN: 
0xf67e2d30:  push   %ebp
0xf67e2d31:  push   %edi
0xf67e2d32:  push   %esi
0xf67e2d33:  push   %ebx
0xf67e2d34:  call   0xf67f3609


call [pc: f67e2d39, cc: 0002e5af]

ret [pc: f67e2d39, cc: f67cc896]
----------------
IN: 
0xf67e2d39:  add    $0x1b2c7,%ebx
0xf67e2d3f:  sub    $0x1c,%esp
0xf67e2d42:  mov    0x38(%esp),%esi
0xf67e2d46:  mov    %eax,0xc(%esp)
0xf67e2d4a:  movzbl 0xc(%esi),%edi
0xf67e2d4e:  mov    0x4(%esi),%ebp
0xf67e2d51:  and    $0xf,%edi
0xf67e2d54:  test   %ebp,%ebp
0xf67e2d56:  jne    0xf67e2d62

----------------
IN: 
0xf67e2d62:  xor    %eax,%eax
0xf67e2d64:  cmpw   $0x0,0xe(%esi)
0xf67e2d69:  sete   %al
0xf67e2d6c:  mov    %eax,%ebp
0xf67e2d6e:  test   %ebp,0x34(%esp)
0xf67e2d72:  jne    0xf67e2e43

----------------
IN: 
0xf67e2d78:  mov    $0x467,%ebp
0xf67e2d7d:  bt     %edi,%ebp
0xf67e2d80:  jae    0xf67e2e43

----------------
IN: 
0xf67e2d86:  cmp    %edx,%esi
0xf67e2d88:  mov    %ecx,%edi
0xf67e2d8a:  mov    0xc(%esp),%eax
0xf67e2d8e:  je     0xf67e2dab

----------------
IN: 
0xf67e2dab:  mov    0x44(%esp),%eax
0xf67e2daf:  test   %edi,%edi
0xf67e2db1:  mov    0x1a4(%eax),%eax
0xf67e2db7:  je     0xf67e2e00

----------------
IN: 
0xf67e2db9:  test   %eax,%eax
0xf67e2dbb:  je     0xf67e2e78

----------------
IN: 
0xf67e2dc1:  mov    0x3c(%esp),%ecx
0xf67e2dc5:  movzwl (%eax,%ecx,2),%ebp
0xf67e2dc9:  mov    0x44(%esp),%ecx
0xf67e2dcd:  mov    %ebp,%eax
0xf67e2dcf:  and    $0x7fff,%eax
0xf67e2dd4:  shl    $0x4,%eax
0xf67e2dd7:  add    0x170(%ecx),%eax
0xf67e2ddd:  mov    0x4(%eax),%edx
0xf67e2de0:  cmp    0x4(%edi),%edx
0xf67e2de3:  je     0xf67e2e50

----------------
IN: 
0xf67e2e50:  mov    %edx,0xc(%esp)
0xf67e2e54:  sub    $0x8,%esp
0xf67e2e57:  pushl  (%edi)
0xf67e2e59:  pushl  (%eax)
0xf67e2e5b:  call   0xf67f2cd0


call [pc: f67e2e60, cc: 0002e6f6]

ret [pc: f67e2e60, cc: f67cc896]
----------------
IN: 
0xf67e2e60:  add    $0x10,%esp
0xf67e2e63:  test   %eax,%eax
0xf67e2e65:  mov    0xc(%esp),%edx
0xf67e2e69:  jne    0xf67e2de5

----------------
IN: 
0xf67e2e6f:  jmp    0xf67e2df5

----------------
IN: 
0xf67e2df5:  add    $0x1c,%esp
0xf67e2df8:  mov    %esi,%eax
0xf67e2dfa:  pop    %ebx
0xf67e2dfb:  pop    %esi
0xf67e2dfc:  pop    %edi
0xf67e2dfd:  pop    %ebp
0xf67e2dfe:  ret    


ret [pc: f67e353d, cc: 0002fdab]
----------------
IN: 
0xf67e353d:  add    $0x20,%esp
0xf67e3540:  test   %eax,%eax
0xf67e3542:  jne    0xf67e38c1

----------------
IN: 
0xf67e38c1:  mov    %esi,0x18(%esp)
0xf67e38c5:  mov    %eax,0x20(%esp)
0xf67e38c9:  mov    0x34(%esp),%ebp
0xf67e38cd:  mov    0x7c(%esp),%esi
0xf67e38d1:  jmp    0xf67e3100

----------------
IN: 
0xf67e3100:  mov    0x90(%esp),%eax
0xf67e3107:  test   %eax,%eax
0xf67e3109:  je     0xf67e33b0

----------------
IN: 
0xf67e310f:  mov    0x20(%esp),%eax
0xf67e3113:  movzbl 0xc(%eax),%eax
0xf67e3117:  mov    %al,0x14(%esp)
0xf67e311b:  shr    $0x4,%al
0xf67e311e:  cmp    $0x2,%al
0xf67e3120:  je     0xf67e3140

----------------
IN: 
0xf67e3122:  cmp    $0xa,%al
0xf67e3124:  je     0xf67e3170

----------------
IN: 
0xf67e3126:  cmp    $0x1,%al
0xf67e3128:  je     0xf67e3152

----------------
IN: 
0xf67e3152:  mov    0x74(%esp),%eax
0xf67e3156:  mov    0x20(%esp),%ebx
0xf67e315a:  mov    %edi,0x4(%eax)
0xf67e315d:  mov    %ebx,(%eax)
0xf67e315f:  add    $0x5c,%esp
0xf67e3162:  pop    %ebx
0xf67e3163:  mov    $0x1,%eax
0xf67e3168:  pop    %esi
0xf67e3169:  pop    %edi
0xf67e316a:  pop    %ebp
0xf67e316b:  ret    


ret [pc: f67e3a4b, cc: f67cc7e0]
----------------
IN: 
0xf67e3a4b:  add    $0x30,%esp
0xf67e3a4e:  cmp    $0x0,%eax
0xf67e3a51:  jle    0xf67e3a10

----------------
IN: 
0xf67e3a53:  mov    -0x48(%ebp),%eax
0xf67e3a56:  mov    -0x60(%ebp),%ebx
0xf67e3a59:  test   %eax,%eax
0xf67e3a5b:  je     0xf67e3bb8

----------------
IN: 
0xf67e3a61:  mov    -0x5c(%ebp),%eax
0xf67e3a64:  mov    (%eax),%eax
0xf67e3a66:  test   %eax,%eax
0xf67e3a68:  je     0xf67e3a76

----------------
IN: 
0xf67e3a6a:  movzbl 0xd(%eax),%edx
0xf67e3a6e:  and    $0x3,%edx
0xf67e3a71:  cmp    $0x3,%dl
0xf67e3a74:  je     0xf67e3ad0

----------------
IN: 
0xf67e3a76:  mov    -0x44(%ebp),%edi
0xf67e3a79:  movl   $0x0,-0x60(%ebp)
0xf67e3a80:  movzbl 0x194(%edi),%edx
0xf67e3a87:  mov    %edi,%eax
0xf67e3a89:  and    $0x3,%edx
0xf67e3a8c:  cmp    $0x2,%dl
0xf67e3a8f:  je     0xf67e3be7

----------------
IN: 
0xf67e3a95:  mov    0x1fc(%eax),%edi
0xf67e3a9b:  test   %edi,%edi
0xf67e3a9d:  je     0xf67e3d68

----------------
IN: 
0xf67e3aa3:  mov    -0x70(%ebp),%edi
0xf67e3aa6:  mov    -0x300(%edi),%edx
0xf67e3aac:  test   $0x804,%edx
0xf67e3ab2:  jne    0xf67e3d77

----------------
IN: 
0xf67e3ab8:  mov    -0x48(%ebp),%edx
0xf67e3abb:  mov    -0x5c(%ebp),%edi
0xf67e3abe:  mov    %edx,(%edi)
0xf67e3ac0:  lea    -0xc(%ebp),%esp
0xf67e3ac3:  pop    %ebx
0xf67e3ac4:  pop    %esi
0xf67e3ac5:  pop    %edi
0xf67e3ac6:  pop    %ebp
0xf67e3ac7:  ret    $0x14


ret [pc: f67e57c9, cc: 00029029]
----------------
IN: 
0xf67e57c9:  mov    -0x44(%ebp),%edx
0xf67e57cc:  mov    %eax,%edi
0xf67e57ce:  mov    0x8(%ebp),%eax
0xf67e57d1:  add    $0xc,%esp
0xf67e57d4:  mov    %edx,0x228(%eax)
0xf67e57da:  mov    %edi,0x224(%eax)
0xf67e57e0:  test   %edi,%edi
0xf67e57e2:  je     0xf67e5a10

----------------
IN: 
0xf67e57e8:  mov    0x4(%edx),%eax
0xf67e57eb:  add    (%edi),%eax
0xf67e57ed:  mov    %eax,-0x88(%ebp)
0xf67e57f3:  movzbl 0xc(%edx),%ecx
0xf67e57f7:  and    $0xf,%ecx
0xf67e57fa:  cmp    $0xa,%cl
0xf67e57fd:  je     0xf67e5a40

----------------
IN: 
0xf67e5803:  cmp    $0x2a,%esi
0xf67e5806:  ja     0xf67e59d0

----------------
IN: 
0xf67e580c:  mov    -0x60(%ebp),%eax
0xf67e580f:  add    -0xa394(%eax,%esi,4),%eax
0xf67e5816:  jmp    *%eax

----------------
IN: 
0xf67e58a0:  mov    -0x64(%ebp),%eax
0xf67e58a3:  mov    -0x88(%ebp),%esi
0xf67e58a9:  add    %esi,(%eax)
0xf67e58ab:  jmp    0xf67e5830

----------------
IN: 
0xf67e5830:  addl   $0x8,-0x78(%ebp)
0xf67e5834:  mov    -0x78(%ebp),%eax
0xf67e5837:  cmp    %eax,-0x5c(%ebp)
0xf67e583a:  ja     0xf67e56e8

----------------
IN: 
0xf67e56e8:  mov    -0x78(%ebp),%edi
0xf67e56eb:  mov    -0x7c(%ebp),%eax
0xf67e56ee:  mov    -0x80(%ebp),%esi
0xf67e56f1:  mov    0x4(%edi),%ecx
0xf67e56f4:  add    (%edi),%esi
0xf67e56f6:  mov    0x8(%ebp),%edi
0xf67e56f9:  mov    %ecx,%ebx
0xf67e56fb:  shr    $0x8,%ebx
0xf67e56fe:  mov    %esi,-0x64(%ebp)
0xf67e5701:  movzbl %cl,%esi
0xf67e5704:  movzwl (%eax,%ebx,2),%eax
0xf67e5708:  shl    $0x4,%ebx
0xf67e570b:  add    -0x68(%ebp),%ebx
0xf67e570e:  cmp    $0x8,%esi
0xf67e5711:  mov    0x170(%edi),%edx
0xf67e5717:  mov    %ebx,-0x44(%ebp)
0xf67e571a:  je     0xf67e5a30

----------------
IN: 
0xf67e59e0:  mov    %ebx,%edx
0xf67e59e2:  mov    0x8(%ebp),%edi
0xf67e59e5:  jmp    0xf67e57e8

----------------
IN: 
0xf67e58d0:  mov    0x240(%edi),%eax
0xf67e58d6:  lea    0x1(%eax),%ecx
0xf67e58d9:  cmp    $0x1,%ecx
0xf67e58dc:  jbe    0xf67e69b5

----------------
IN: 
0xf67e58e2:  mov    -0x64(%ebp),%edi
0xf67e58e5:  mov    0x4(%edx),%edx
0xf67e58e8:  add    (%edi),%edx
0xf67e58ea:  sub    %eax,%edx
0xf67e58ec:  mov    %edx,(%edi)
0xf67e58ee:  jmp    0xf67e5830


call [pc: f67e57c9, cc: f67cc7e0]

call [pc: f67e3970, cc: 0002fe90]

ret [pc: f67e3970, cc: f67cc7e0]

call [pc: f67e3a4b, cc: 0002fdab]

call [pc: f67e2ec9, cc: f67cd362]

ret [pc: f67e2ec9, cc: 0002fdab]
----------------
IN: 
0xf67e2ff4:  mov    %edi,%edx
0xf67e2ff6:  call   0xf67ea160


call [pc: f67e2ffb, cc: f67cd250]

call [pc: f67ea16c, cc: 0002733c]

ret [pc: f67ea16c, cc: f67cd250]

call [pc: f67ea17e, cc: 0002732e]

ret [pc: f67ea17e, cc: f67cd250]

call [pc: f67ea1a2, cc: 000273f2]

ret [pc: f67ea1a2, cc: f67cd250]

ret [pc: f67e2ffb, cc: 0002fdab]
----------------
IN: 
0xf67e2ffb:  test   %eax,%eax
0xf67e2ffd:  jne    0xf67e36f1

----------------
IN: 
0xf67e3003:  nop    
0xf67e3004:  lea    0x0(%esi),%esi
0xf67e3008:  add    $0x1,%esi
0xf67e300b:  cmp    %esi,(%esp)
0xf67e300e:  ja     0xf67e2f10

----------------
IN: 
0xf67e36fb:  mov    0x34(%esp),%ebp
0xf67e36ff:  mov    0x7c(%esp),%esi
0xf67e3703:  jmp    0xf67e355f

----------------
IN: 
0xf67e355f:  cmpl   $0x1,0x48(%esp)
0xf67e3564:  jne    0xf67e2fd2


call [pc: f67e2ffb, cc: f67cd250]

call [pc: f67ea16c, cc: 0002733c]

ret [pc: f67ea16c, cc: f67cd250]

call [pc: f67ea17e, cc: 0002732e]

ret [pc: f67ea17e, cc: f67cd250]

call [pc: f67ea1a2, cc: 000273f2]

ret [pc: f67ea1a2, cc: f67cd250]

ret [pc: f67e2ffb, cc: 0002fdab]

call [pc: f67e353d, cc: f67cc896]

call [pc: f67e2d39, cc: 0002e5af]

ret [pc: f67e2d39, cc: f67cc896]
----------------
IN: 
0xf67e2d90:  sub    $0x8,%esp
0xf67e2d93:  push   %eax
0xf67e2d94:  mov    0x4c(%esp),%eax
0xf67e2d98:  add    (%esi),%eax
0xf67e2d9a:  push   %eax
0xf67e2d9b:  call   0xf67f2cd0


call [pc: f67e2da0, cc: 0002e536]

ret [pc: f67e2da0, cc: f67cc896]
----------------
IN: 
0xf67e2da0:  add    $0x10,%esp
0xf67e2da3:  test   %eax,%eax
0xf67e2da5:  jne    0xf67e2e43


call [pc: f67e2e60, cc: 0002e6f6]

ret [pc: f67e2e60, cc: f67cc896]

ret [pc: f67e353d, cc: 0002fdab]

ret [pc: f67e3a4b, cc: f67cc7e0]
----------------
IN: 
0xf67e3d68:  movl   $0x1,0x1fc(%eax)
0xf67e3d72:  jmp    0xf67e3aa3


ret [pc: f67e57c9, cc: 00029029]
----------------
IN: 
0xf67e5868:  mov    -0x64(%ebp),%eax
0xf67e586b:  mov    -0x88(%ebp),%edi
0xf67e5871:  mov    %edi,(%eax)
0xf67e5873:  jmp    0xf67e5830


call [pc: f67e57c9, cc: f67cc7e0]

call [pc: f67e3970, cc: 0002fe90]

ret [pc: f67e3970, cc: f67cc7e0]

call [pc: f67e3a4b, cc: 0002fdab]

call [pc: f67e2ec9, cc: f67cd362]

ret [pc: f67e2ec9, cc: 0002fdab]

call [pc: f67e353d, cc: f67cc896]

call [pc: f67e2d39, cc: 0002e5af]

ret [pc: f67e2d39, cc: f67cc896]

call [pc: f67e2e60, cc: 0002e6f6]

ret [pc: f67e2e60, cc: f67cc896]

ret [pc: f67e353d, cc: 0002fdab]

ret [pc: f67e3a4b, cc: f67cc7e0]

ret [pc: f67e57c9, cc: 00029029]

call [pc: f67e57c9, cc: f67cc7e0]

call [pc: f67e3970, cc: 0002fe90]

ret [pc: f67e3970, cc: f67cc7e0]

call [pc: f67e3a4b, cc: 0002fdab]

call [pc: f67e2ec9, cc: f67cd362]

ret [pc: f67e2ec9, cc: 0002fdab]

call [pc: f67e353d, cc: f67cc896]

call [pc: f67e2d39, cc: 0002e5af]

ret [pc: f67e2d39, cc: f67cc896]

call [pc: f67e2e60, cc: 0002e6f6]

ret [pc: f67e2e60, cc: f67cc896]

ret [pc: f67e353d, cc: 0002fdab]

ret [pc: f67e3a4b, cc: f67cc7e0]

ret [pc: f67e57c9, cc: 00029029]

call [pc: f67e57c9, cc: f67cc7e0]

call [pc: f67e3970, cc: 0002fe90]

ret [pc: f67e3970, cc: f67cc7e0]

call [pc: f67e3a4b, cc: 0002fdab]

call [pc: f67e2ec9, cc: f67cd362]

ret [pc: f67e2ec9, cc: 0002fdab]

call [pc: f67e353d, cc: f67cc896]

call [pc: f67e2d39, cc: 0002e5af]

ret [pc: f67e2d39, cc: f67cc896]

call [pc: f67e2e60, cc: 0002e6f6]

ret [pc: f67e2e60, cc: f67cc896]

ret [pc: f67e353d, cc: 0002fdab]
----------------
IN: 
0xf67e3140:  mov    0x8(%esp),%eax
0xf67e3144:  mov    -0x2cc(%eax),%eax
0xf67e314a:  test   %eax,%eax
0xf67e314c:  jne    0xf67e36bf


ret [pc: f67e3a4b, cc: f67cc7e0]

ret [pc: f67e57c9, cc: 00029029]

call [pc: f67e57c9, cc: f67cc7e0]

call [pc: f67e3970, cc: 0002fe90]

ret [pc: f67e3970, cc: f67cc7e0]

call [pc: f67e3a4b, cc: 0002fdab]

call [pc: f67e2ec9, cc: f67cd362]

ret [pc: f67e2ec9, cc: 0002fdab]

call [pc: f67e353d, cc: f67cc896]

call [pc: f67e2d39, cc: 0002e5af]

ret [pc: f67e2d39, cc: f67cc896]

call [pc: f67e2e60, cc: 0002e6f6]

ret [pc: f67e2e60, cc: f67cc896]

ret [pc: f67e353d, cc: 0002fdab]

ret [pc: f67e3a4b, cc: f67cc7e0]

ret [pc: f67e57c9, cc: 00029029]

call [pc: f67e57c9, cc: f67cc7e0]

call [pc: f67e3970, cc: 0002fe90]

ret [pc: f67e3970, cc: f67cc7e0]

call [pc: f67e3a4b, cc: 0002fdab]

call [pc: f67e2ec9, cc: f67cd362]

ret [pc: f67e2ec9, cc: 0002fdab]

call [pc: f67e353d, cc: f67cc896]

call [pc: f67e2d39, cc: 0002e5af]

ret [pc: f67e2d39, cc: f67cc896]

call [pc: f67e2e60, cc: 0002e6f6]

ret [pc: f67e2e60, cc: f67cc896]

ret [pc: f67e353d, cc: 0002fdab]

ret [pc: f67e3a4b, cc: f67cc7e0]

ret [pc: f67e57c9, cc: 00029029]

call [pc: f67e57c9, cc: f67cc7e0]

call [pc: f67e3970, cc: 0002fe90]

ret [pc: f67e3970, cc: f67cc7e0]

call [pc: f67e3a4b, cc: 0002fdab]

call [pc: f67e2ec9, cc: f67cd362]

ret [pc: f67e2ec9, cc: 0002fdab]

call [pc: f67e353d, cc: f67cc896]

call [pc: f67e2d39, cc: 0002e5af]

ret [pc: f67e2d39, cc: f67cc896]

call [pc: f67e2e60, cc: 0002e6f6]

ret [pc: f67e2e60, cc: f67cc896]

ret [pc: f67e353d, cc: 0002fdab]

ret [pc: f67e3a4b, cc: f67cc7e0]

ret [pc: f67e57c9, cc: 00029029]

call [pc: f67e57c9, cc: f67cc7e0]

call [pc: f67e3970, cc: 0002fe90]

ret [pc: f67e3970, cc: f67cc7e0]

call [pc: f67e3a4b, cc: 0002fdab]

call [pc: f67e2ec9, cc: f67cd362]

ret [pc: f67e2ec9, cc: 0002fdab]

call [pc: f67e353d, cc: f67cc896]

call [pc: f67e2d39, cc: 0002e5af]

ret [pc: f67e2d39, cc: f67cc896]

call [pc: f67e2e60, cc: 0002e6f6]

ret [pc: f67e2e60, cc: f67cc896]

ret [pc: f67e353d, cc: 0002fdab]

ret [pc: f67e3a4b, cc: f67cc7e0]

ret [pc: f67e57c9, cc: 00029029]

call [pc: f67e57c9, cc: f67cc7e0]

call [pc: f67e3970, cc: 0002fe90]

ret [pc: f67e3970, cc: f67cc7e0]

call [pc: f67e3a4b, cc: 0002fdab]

call [pc: f67e2ec9, cc: f67cd362]

ret [pc: f67e2ec9, cc: 0002fdab]

call [pc: f67e353d, cc: f67cc896]

call [pc: f67e2d39, cc: 0002e5af]

ret [pc: f67e2d39, cc: f67cc896]

call [pc: f67e2e60, cc: 0002e6f6]

ret [pc: f67e2e60, cc: f67cc896]

ret [pc: f67e353d, cc: 0002fdab]

ret [pc: f67e3a4b, cc: f67cc7e0]

ret [pc: f67e57c9, cc: 00029029]

call [pc: f67e57c9, cc: f67cc7e0]

call [pc: f67e3970, cc: 0002fe90]

ret [pc: f67e3970, cc: f67cc7e0]

call [pc: f67e3a4b, cc: 0002fdab]

call [pc: f67e2ec9, cc: f67cd362]

ret [pc: f67e2ec9, cc: 0002fdab]

call [pc: f67e353d, cc: f67cc896]

call [pc: f67e2d39, cc: 0002e5af]

ret [pc: f67e2d39, cc: f67cc896]

call [pc: f67e2e60, cc: 0002e6f6]

ret [pc: f67e2e60, cc: f67cc896]

ret [pc: f67e353d, cc: 0002fdab]

ret [pc: f67e3a4b, cc: f67cc7e0]

ret [pc: f67e57c9, cc: 00029029]

call [pc: f67e57c9, cc: f67cc7e0]

call [pc: f67e3970, cc: 0002fe90]

ret [pc: f67e3970, cc: f67cc7e0]

call [pc: f67e3a4b, cc: 0002fdab]

call [pc: f67e2ec9, cc: f67cd362]

ret [pc: f67e2ec9, cc: 0002fdab]

call [pc: f67e2ffb, cc: f67cd250]

call [pc: f67ea16c, cc: 0002733c]

ret [pc: f67ea16c, cc: f67cd250]

call [pc: f67ea17e, cc: 0002732e]

ret [pc: f67ea17e, cc: f67cd250]

call [pc: f67ea1a2, cc: 000273f2]

ret [pc: f67ea1a2, cc: f67cd250]

ret [pc: f67e2ffb, cc: 0002fdab]

call [pc: f67e2ffb, cc: f67cd250]

call [pc: f67ea16c, cc: 0002733c]

ret [pc: f67ea16c, cc: f67cd250]

call [pc: f67ea17e, cc: 0002732e]

ret [pc: f67ea17e, cc: f67cd250]

call [pc: f67ea1a2, cc: 000273f2]

ret [pc: f67ea1a2, cc: f67cd250]

ret [pc: f67e2ffb, cc: 0002fdab]

call [pc: f67e353d, cc: f67cc896]

call [pc: f67e2d39, cc: 0002e5af]

ret [pc: f67e2d39, cc: f67cc896]

call [pc: f67e2da0, cc: 0002e536]

ret [pc: f67e2da0, cc: f67cc896]

call [pc: f67e2e60, cc: 0002e6f6]

ret [pc: f67e2e60, cc: f67cc896]

ret [pc: f67e353d, cc: 0002fdab]

ret [pc: f67e3a4b, cc: f67cc7e0]

ret [pc: f67e57c9, cc: 00029029]

call [pc: f67e57c9, cc: f67cc7e0]

call [pc: f67e3970, cc: 0002fe90]

ret [pc: f67e3970, cc: f67cc7e0]

call [pc: f67e3a4b, cc: 0002fdab]

call [pc: f67e2ec9, cc: f67cd362]

ret [pc: f67e2ec9, cc: 0002fdab]

call [pc: f67e353d, cc: f67cc896]

call [pc: f67e2d39, cc: 0002e5af]

ret [pc: f67e2d39, cc: f67cc896]

call [pc: f67e2e60, cc: 0002e6f6]

ret [pc: f67e2e60, cc: f67cc896]

ret [pc: f67e353d, cc: 0002fdab]

ret [pc: f67e3a4b, cc: f67cc7e0]

ret [pc: f67e57c9, cc: 00029029]

call [pc: f67e57c9, cc: f67cc7e0]

call [pc: f67e3970, cc: 0002fe90]

ret [pc: f67e3970, cc: f67cc7e0]

call [pc: f67e3a4b, cc: 0002fdab]

call [pc: f67e2ec9, cc: f67cd362]

ret [pc: f67e2ec9, cc: 0002fdab]

call [pc: f67e353d, cc: f67cc896]

call [pc: f67e2d39, cc: 0002e5af]

ret [pc: f67e2d39, cc: f67cc896]

call [pc: f67e2e60, cc: 0002e6f6]

ret [pc: f67e2e60, cc: f67cc896]

ret [pc: f67e353d, cc: 0002fdab]

ret [pc: f67e3a4b, cc: f67cc7e0]

ret [pc: f67e57c9, cc: 00029029]

call [pc: f67e57c9, cc: f67cc7e0]

call [pc: f67e3970, cc: 0002fe90]

ret [pc: f67e3970, cc: f67cc7e0]

call [pc: f67e3a4b, cc: 0002fdab]

call [pc: f67e2ec9, cc: f67cd362]

ret [pc: f67e2ec9, cc: 0002fdab]

call [pc: f67e353d, cc: f67cc896]

call [pc: f67e2d39, cc: 0002e5af]

ret [pc: f67e2d39, cc: f67cc896]

call [pc: f67e2e60, cc: 0002e6f6]

ret [pc: f67e2e60, cc: f67cc896]

ret [pc: f67e353d, cc: 0002fdab]

ret [pc: f67e3a4b, cc: f67cc7e0]

ret [pc: f67e57c9, cc: 00029029]

call [pc: f67e57c9, cc: f67cc7e0]

call [pc: f67e3970, cc: 0002fe90]

ret [pc: f67e3970, cc: f67cc7e0]

call [pc: f67e3a4b, cc: 0002fdab]

call [pc: f67e2ec9, cc: f67cd362]

ret [pc: f67e2ec9, cc: 0002fdab]

call [pc: f67e353d, cc: f67cc896]

call [pc: f67e2d39, cc: 0002e5af]

ret [pc: f67e2d39, cc: f67cc896]

call [pc: f67e2e60, cc: 0002e6f6]

ret [pc: f67e2e60, cc: f67cc896]

ret [pc: f67e353d, cc: 0002fdab]

ret [pc: f67e3a4b, cc: f67cc7e0]

ret [pc: f67e57c9, cc: 00029029]

call [pc: f67e57c9, cc: f67cc7e0]

call [pc: f67e3970, cc: 0002fe90]

ret [pc: f67e3970, cc: f67cc7e0]

call [pc: f67e3a4b, cc: 0002fdab]

call [pc: f67e2ec9, cc: f67cd362]

ret [pc: f67e2ec9, cc: 0002fdab]

call [pc: f67e353d, cc: f67cc896]

call [pc: f67e2d39, cc: 0002e5af]

ret [pc: f67e2d39, cc: f67cc896]

call [pc: f67e2e60, cc: 0002e6f6]

ret [pc: f67e2e60, cc: f67cc896]

ret [pc: f67e353d, cc: 0002fdab]

ret [pc: f67e3a4b, cc: f67cc7e0]

ret [pc: f67e57c9, cc: 00029029]

call [pc: f67e57c9, cc: f67cc7e0]

call [pc: f67e3970, cc: 0002fe90]

ret [pc: f67e3970, cc: f67cc7e0]

call [pc: f67e3a4b, cc: 0002fdab]

call [pc: f67e2ec9, cc: f67cd362]

ret [pc: f67e2ec9, cc: 0002fdab]

call [pc: f67e2ffb, cc: f67cd250]

call [pc: f67ea16c, cc: 0002733c]

ret [pc: f67ea16c, cc: f67cd250]

call [pc: f67ea17e, cc: 0002732e]

ret [pc: f67ea17e, cc: f67cd250]

call [pc: f67ea1a2, cc: 000273f2]

ret [pc: f67ea1a2, cc: f67cd250]

ret [pc: f67e2ffb, cc: 0002fdab]

call [pc: f67e2ffb, cc: f67cd250]

call [pc: f67ea16c, cc: 0002733c]

ret [pc: f67ea16c, cc: f67cd250]

call [pc: f67ea17e, cc: 0002732e]

ret [pc: f67ea17e, cc: f67cd250]

call [pc: f67ea1a2, cc: 000273f2]

ret [pc: f67ea1a2, cc: f67cd250]

ret [pc: f67e2ffb, cc: 0002fdab]

call [pc: f67e353d, cc: f67cc896]

call [pc: f67e2d39, cc: 0002e5af]

ret [pc: f67e2d39, cc: f67cc896]

call [pc: f67e2da0, cc: 0002e536]

ret [pc: f67e2da0, cc: f67cc896]

call [pc: f67e2e60, cc: 0002e6f6]

ret [pc: f67e2e60, cc: f67cc896]

ret [pc: f67e353d, cc: 0002fdab]

ret [pc: f67e3a4b, cc: f67cc7e0]

ret [pc: f67e57c9, cc: 00029029]

call [pc: f67e57c9, cc: f67cc7e0]

call [pc: f67e3970, cc: 0002fe90]

ret [pc: f67e3970, cc: f67cc7e0]

call [pc: f67e3a4b, cc: 0002fdab]

call [pc: f67e2ec9, cc: f67cd362]

ret [pc: f67e2ec9, cc: 0002fdab]

call [pc: f67e353d, cc: f67cc896]

call [pc: f67e2d39, cc: 0002e5af]

ret [pc: f67e2d39, cc: f67cc896]

call [pc: f67e2e60, cc: 0002e6f6]

ret [pc: f67e2e60, cc: f67cc896]

ret [pc: f67e353d, cc: 0002fdab]

ret [pc: f67e3a4b, cc: f67cc7e0]

ret [pc: f67e57c9, cc: 00029029]

call [pc: f67e57c9, cc: f67cc7e0]

call [pc: f67e3970, cc: 0002fe90]

ret [pc: f67e3970, cc: f67cc7e0]

call [pc: f67e3a4b, cc: 0002fdab]

call [pc: f67e2ec9, cc: f67cd362]

ret [pc: f67e2ec9, cc: 0002fdab]

call [pc: f67e353d, cc: f67cc896]

call [pc: f67e2d39, cc: 0002e5af]

ret [pc: f67e2d39, cc: f67cc896]

call [pc: f67e2da0, cc: 0002e536]

ret [pc: f67e2da0, cc: f67cc896]
----------------
IN: 
0xf67e2e00:  test   %eax,%eax
0xf67e2e02:  je     0xf67e2df5

----------------
IN: 
0xf67e2e04:  mov    0x3c(%esp),%ebx
0xf67e2e08:  movzwl (%eax,%ebx,2),%edx
0xf67e2e0c:  mov    0x30(%esp),%eax
0xf67e2e10:  shl    $0x1e,%eax
0xf67e2e13:  sar    $0x1f,%eax
0xf67e2e16:  mov    %edx,%ecx
0xf67e2e18:  and    $0x7fff,%ecx
0xf67e2e1e:  add    $0x3,%eax
0xf67e2e21:  cmp    %ecx,%eax
0xf67e2e23:  jg     0xf67e2df5


ret [pc: f67e353d, cc: 0002fdab]

ret [pc: f67e3a4b, cc: f67cc7e0]

ret [pc: f67e57c9, cc: 00029029]

call [pc: f67e57c9, cc: f67cc7e0]

call [pc: f67e3970, cc: 0002fe90]

ret [pc: f67e3970, cc: f67cc7e0]

call [pc: f67e3a4b, cc: 0002fdab]

call [pc: f67e2ec9, cc: f67cd362]

ret [pc: f67e2ec9, cc: 0002fdab]

call [pc: f67e353d, cc: f67cc896]

call [pc: f67e2d39, cc: 0002e5af]

ret [pc: f67e2d39, cc: f67cc896]

call [pc: f67e2e60, cc: 0002e6f6]

ret [pc: f67e2e60, cc: f67cc896]

ret [pc: f67e353d, cc: 0002fdab]

ret [pc: f67e3a4b, cc: f67cc7e0]

ret [pc: f67e57c9, cc: 00029029]

call [pc: f67e57c9, cc: f67cc7e0]

call [pc: f67e3970, cc: 0002fe90]

ret [pc: f67e3970, cc: f67cc7e0]

call [pc: f67e3a4b, cc: 0002fdab]

call [pc: f67e2ec9, cc: f67cd362]

ret [pc: f67e2ec9, cc: 0002fdab]

call [pc: f67e353d, cc: f67cc896]

call [pc: f67e2d39, cc: 0002e5af]

ret [pc: f67e2d39, cc: f67cc896]

call [pc: f67e2e60, cc: 0002e6f6]

ret [pc: f67e2e60, cc: f67cc896]

ret [pc: f67e353d, cc: 0002fdab]

ret [pc: f67e3a4b, cc: f67cc7e0]

ret [pc: f67e57c9, cc: 00029029]

call [pc: f67e57c9, cc: f67cc7e0]

call [pc: f67e3970, cc: 0002fe90]

ret [pc: f67e3970, cc: f67cc7e0]

call [pc: f67e3a4b, cc: 0002fdab]

call [pc: f67e2ec9, cc: f67cd362]

ret [pc: f67e2ec9, cc: 0002fdab]

call [pc: f67e353d, cc: f67cc896]

call [pc: f67e2d39, cc: 0002e5af]

ret [pc: f67e2d39, cc: f67cc896]

call [pc: f67e2e60, cc: 0002e6f6]

ret [pc: f67e2e60, cc: f67cc896]

ret [pc: f67e353d, cc: 0002fdab]

ret [pc: f67e3a4b, cc: f67cc7e0]

ret [pc: f67e57c9, cc: 00029029]

call [pc: f67e57c9, cc: f67cc7e0]

call [pc: f67e3970, cc: 0002fe90]

ret [pc: f67e3970, cc: f67cc7e0]

call [pc: f67e3a4b, cc: 0002fdab]

call [pc: f67e2ec9, cc: f67cd362]

ret [pc: f67e2ec9, cc: 0002fdab]

call [pc: f67e353d, cc: f67cc896]

call [pc: f67e2d39, cc: 0002e5af]

ret [pc: f67e2d39, cc: f67cc896]

call [pc: f67e2e60, cc: 0002e6f6]

ret [pc: f67e2e60, cc: f67cc896]

ret [pc: f67e353d, cc: 0002fdab]

ret [pc: f67e3a4b, cc: f67cc7e0]

ret [pc: f67e57c9, cc: 00029029]

call [pc: f67e57c9, cc: f67cc7e0]

call [pc: f67e3970, cc: 0002fe90]

ret [pc: f67e3970, cc: f67cc7e0]

call [pc: f67e3a4b, cc: 0002fdab]

call [pc: f67e2ec9, cc: f67cd362]

ret [pc: f67e2ec9, cc: 0002fdab]

call [pc: f67e2ffb, cc: f67cd250]

call [pc: f67ea16c, cc: 0002733c]

ret [pc: f67ea16c, cc: f67cd250]

call [pc: f67ea17e, cc: 0002732e]

ret [pc: f67ea17e, cc: f67cd250]

call [pc: f67ea1a2, cc: 000273f2]

ret [pc: f67ea1a2, cc: f67cd250]

ret [pc: f67e2ffb, cc: 0002fdab]

call [pc: f67e2ffb, cc: f67cd250]

call [pc: f67ea16c, cc: 0002733c]

ret [pc: f67ea16c, cc: f67cd250]

call [pc: f67ea17e, cc: 0002732e]

ret [pc: f67ea17e, cc: f67cd250]

call [pc: f67ea1a2, cc: 000273f2]

ret [pc: f67ea1a2, cc: f67cd250]

ret [pc: f67e2ffb, cc: 0002fdab]

call [pc: f67e353d, cc: f67cc896]

call [pc: f67e2d39, cc: 0002e5af]

ret [pc: f67e2d39, cc: f67cc896]

call [pc: f67e2da0, cc: 0002e536]

ret [pc: f67e2da0, cc: f67cc896]

call [pc: f67e2e60, cc: 0002e6f6]

ret [pc: f67e2e60, cc: f67cc896]

ret [pc: f67e353d, cc: 0002fdab]

ret [pc: f67e3a4b, cc: f67cc7e0]

ret [pc: f67e57c9, cc: 00029029]

call [pc: f67e57c9, cc: f67cc7e0]

call [pc: f67e3970, cc: 0002fe90]

ret [pc: f67e3970, cc: f67cc7e0]

call [pc: f67e3a4b, cc: 0002fdab]

call [pc: f67e2ec9, cc: f67cd362]

ret [pc: f67e2ec9, cc: 0002fdab]

call [pc: f67e353d, cc: f67cc896]

call [pc: f67e2d39, cc: 0002e5af]

ret [pc: f67e2d39, cc: f67cc896]

call [pc: f67e2e60, cc: 0002e6f6]

ret [pc: f67e2e60, cc: f67cc896]

ret [pc: f67e353d, cc: 0002fdab]

ret [pc: f67e3a4b, cc: f67cc7e0]

ret [pc: f67e57c9, cc: 00029029]

call [pc: f67e57c9, cc: f67cc7e0]

call [pc: f67e3970, cc: 0002fe90]

ret [pc: f67e3970, cc: f67cc7e0]

call [pc: f67e3a4b, cc: 0002fdab]

call [pc: f67e2ec9, cc: f67cd362]

ret [pc: f67e2ec9, cc: 0002fdab]

call [pc: f67e353d, cc: f67cc896]

call [pc: f67e2d39, cc: 0002e5af]

ret [pc: f67e2d39, cc: f67cc896]

call [pc: f67e2e60, cc: 0002e6f6]

ret [pc: f67e2e60, cc: f67cc896]

ret [pc: f67e353d, cc: 0002fdab]

ret [pc: f67e3a4b, cc: f67cc7e0]

ret [pc: f67e57c9, cc: 00029029]

call [pc: f67e57c9, cc: f67cc7e0]

call [pc: f67e3970, cc: 0002fe90]

ret [pc: f67e3970, cc: f67cc7e0]

call [pc: f67e3a4b, cc: 0002fdab]

call [pc: f67e2ec9, cc: f67cd362]

ret [pc: f67e2ec9, cc: 0002fdab]

call [pc: f67e353d, cc: f67cc896]

call [pc: f67e2d39, cc: 0002e5af]

ret [pc: f67e2d39, cc: f67cc896]

call [pc: f67e2e60, cc: 0002e6f6]

ret [pc: f67e2e60, cc: f67cc896]

ret [pc: f67e353d, cc: 0002fdab]

ret [pc: f67e3a4b, cc: f67cc7e0]

ret [pc: f67e57c9, cc: 00029029]

call [pc: f67e57c9, cc: f67cc7e0]

call [pc: f67e3970, cc: 0002fe90]

ret [pc: f67e3970, cc: f67cc7e0]

call [pc: f67e3a4b, cc: 0002fdab]

call [pc: f67e2ec9, cc: f67cd362]

ret [pc: f67e2ec9, cc: 0002fdab]

call [pc: f67e353d, cc: f67cc896]

call [pc: f67e2d39, cc: 0002e5af]

ret [pc: f67e2d39, cc: f67cc896]

call [pc: f67e2e60, cc: 0002e6f6]

ret [pc: f67e2e60, cc: f67cc896]

ret [pc: f67e353d, cc: 0002fdab]

ret [pc: f67e3a4b, cc: f67cc7e0]

ret [pc: f67e57c9, cc: 00029029]

call [pc: f67e57c9, cc: f67cc7e0]

call [pc: f67e3970, cc: 0002fe90]

ret [pc: f67e3970, cc: f67cc7e0]

call [pc: f67e3a4b, cc: 0002fdab]

call [pc: f67e2ec9, cc: f67cd362]

ret [pc: f67e2ec9, cc: 0002fdab]

call [pc: f67e353d, cc: f67cc896]

call [pc: f67e2d39, cc: 0002e5af]

ret [pc: f67e2d39, cc: f67cc896]

call [pc: f67e2e60, cc: 0002e6f6]

ret [pc: f67e2e60, cc: f67cc896]

ret [pc: f67e353d, cc: 0002fdab]

ret [pc: f67e3a4b, cc: f67cc7e0]

ret [pc: f67e57c9, cc: 00029029]

call [pc: f67e57c9, cc: f67cc7e0]

call [pc: f67e3970, cc: 0002fe90]

ret [pc: f67e3970, cc: f67cc7e0]

call [pc: f67e3a4b, cc: 0002fdab]

call [pc: f67e2ec9, cc: f67cd362]

ret [pc: f67e2ec9, cc: 0002fdab]

call [pc: f67e353d, cc: f67cc896]

call [pc: f67e2d39, cc: 0002e5af]

ret [pc: f67e2d39, cc: f67cc896]

call [pc: f67e2e60, cc: 0002e6f6]

ret [pc: f67e2e60, cc: f67cc896]

ret [pc: f67e353d, cc: 0002fdab]

ret [pc: f67e3a4b, cc: f67cc7e0]

ret [pc: f67e57c9, cc: 00029029]
----------------
IN: 
0xf67e5ad0:  lea    -0x7(%esi),%ecx
0xf67e5ad3:  cmp    $0x1e,%ecx
0xf67e5ad6:  jbe    0xf67e5b04

----------------
IN: 
0xf67e5ad8:  xor    %ecx,%ecx
0xf67e5ada:  cmp    $0x29,%esi
0xf67e5add:  sete   %cl
0xf67e5ae0:  cmp    $0x5,%esi
0xf67e5ae3:  mov    %ecx,%edi
0xf67e5ae5:  jne    0xf67e5b13

----------------
IN: 
0xf67e5b13:  cmp    $0x6,%esi
0xf67e5b16:  je     0xf67e5fa9

----------------
IN: 
0xf67e5b1c:  mov    0x8(%ebp),%ecx
0xf67e5b1f:  cmp    %edi,0x220(%ecx)
0xf67e5b25:  je     0xf67e6683

----------------
IN: 
0xf67e5b2b:  cmp    $0x23,%esi
0xf67e5b2e:  je     0xf67e5b39

----------------
IN: 
0xf67e5b30:  cmp    $0x7,%esi
0xf67e5b33:  jne    0xf67e5758


call [pc: f67e57c9, cc: f67cc7e0]

call [pc: f67e3970, cc: 0002fe90]

ret [pc: f67e3970, cc: f67cc7e0]

call [pc: f67e3a4b, cc: 0002fdab]

call [pc: f67e2ec9, cc: f67cd362]

ret [pc: f67e2ec9, cc: 0002fdab]

call [pc: f67e353d, cc: f67cc896]

call [pc: f67e2d39, cc: 0002e5af]

ret [pc: f67e2d39, cc: f67cc896]

call [pc: f67e2e60, cc: 0002e6f6]

ret [pc: f67e2e60, cc: f67cc896]

ret [pc: f67e353d, cc: 0002fdab]

ret [pc: f67e3a4b, cc: f67cc7e0]

ret [pc: f67e57c9, cc: 00029029]

call [pc: f67e57c9, cc: f67cc7e0]

call [pc: f67e3970, cc: 0002fe90]

ret [pc: f67e3970, cc: f67cc7e0]

call [pc: f67e3a4b, cc: 0002fdab]

call [pc: f67e2ec9, cc: f67cd362]

ret [pc: f67e2ec9, cc: 0002fdab]

call [pc: f67e353d, cc: f67cc896]

call [pc: f67e2d39, cc: 0002e5af]

ret [pc: f67e2d39, cc: f67cc896]

call [pc: f67e2e60, cc: 0002e6f6]

ret [pc: f67e2e60, cc: f67cc896]

ret [pc: f67e353d, cc: 0002fdab]

ret [pc: f67e3a4b, cc: f67cc7e0]

ret [pc: f67e57c9, cc: 00029029]

call [pc: f67e57c9, cc: f67cc7e0]

call [pc: f67e3970, cc: 0002fe90]

ret [pc: f67e3970, cc: f67cc7e0]

call [pc: f67e3a4b, cc: 0002fdab]

call [pc: f67e2ec9, cc: f67cd362]

ret [pc: f67e2ec9, cc: 0002fdab]

call [pc: f67e353d, cc: f67cc896]

call [pc: f67e2d39, cc: 0002e5af]

ret [pc: f67e2d39, cc: f67cc896]

call [pc: f67e2e60, cc: 0002e6f6]

ret [pc: f67e2e60, cc: f67cc896]

ret [pc: f67e353d, cc: 0002fdab]

ret [pc: f67e3a4b, cc: f67cc7e0]

ret [pc: f67e57c9, cc: 00029029]

call [pc: f67e57c9, cc: f67cc7e0]

call [pc: f67e3970, cc: 0002fe90]

ret [pc: f67e3970, cc: f67cc7e0]

call [pc: f67e3a4b, cc: 0002fdab]

call [pc: f67e2ec9, cc: f67cd362]

ret [pc: f67e2ec9, cc: 0002fdab]

call [pc: f67e353d, cc: f67cc896]

call [pc: f67e2d39, cc: 0002e5af]

ret [pc: f67e2d39, cc: f67cc896]

call [pc: f67e2e60, cc: 0002e6f6]

ret [pc: f67e2e60, cc: f67cc896]

ret [pc: f67e353d, cc: 0002fdab]

ret [pc: f67e3a4b, cc: f67cc7e0]

ret [pc: f67e57c9, cc: 00029029]

call [pc: f67e57c9, cc: f67cc7e0]

call [pc: f67e3970, cc: 0002fe90]

ret [pc: f67e3970, cc: f67cc7e0]

call [pc: f67e3a4b, cc: 0002fdab]

call [pc: f67e2ec9, cc: f67cd362]

ret [pc: f67e2ec9, cc: 0002fdab]

call [pc: f67e353d, cc: f67cc896]

call [pc: f67e2d39, cc: 0002e5af]

ret [pc: f67e2d39, cc: f67cc896]

call [pc: f67e2e60, cc: 0002e6f6]

ret [pc: f67e2e60, cc: f67cc896]

ret [pc: f67e353d, cc: 0002fdab]

ret [pc: f67e3a4b, cc: f67cc7e0]

ret [pc: f67e57c9, cc: 00029029]

call [pc: f67e57c9, cc: f67cc7e0]

call [pc: f67e3970, cc: 0002fe90]

ret [pc: f67e3970, cc: f67cc7e0]

call [pc: f67e3a4b, cc: 0002fdab]

call [pc: f67e2ec9, cc: f67cd362]

ret [pc: f67e2ec9, cc: 0002fdab]

call [pc: f67e353d, cc: f67cc896]

call [pc: f67e2d39, cc: 0002e5af]

ret [pc: f67e2d39, cc: f67cc896]

call [pc: f67e2e60, cc: 0002e6f6]

ret [pc: f67e2e60, cc: f67cc896]

ret [pc: f67e353d, cc: 0002fdab]

ret [pc: f67e3a4b, cc: f67cc7e0]

ret [pc: f67e57c9, cc: 00029029]

call [pc: f67e57c9, cc: f67cc7e0]

call [pc: f67e3970, cc: 0002fe90]

ret [pc: f67e3970, cc: f67cc7e0]

call [pc: f67e3a4b, cc: 0002fdab]

call [pc: f67e2ec9, cc: f67cd362]

ret [pc: f67e2ec9, cc: 0002fdab]

call [pc: f67e353d, cc: f67cc896]

call [pc: f67e2d39, cc: 0002e5af]

ret [pc: f67e2d39, cc: f67cc896]

call [pc: f67e2e60, cc: 0002e6f6]

ret [pc: f67e2e60, cc: f67cc896]

ret [pc: f67e353d, cc: 0002fdab]

ret [pc: f67e3a4b, cc: f67cc7e0]

ret [pc: f67e57c9, cc: 00029029]

call [pc: f67e57c9, cc: f67cc7e0]

call [pc: f67e3970, cc: 0002fe90]

ret [pc: f67e3970, cc: f67cc7e0]

call [pc: f67e3a4b, cc: 0002fdab]

call [pc: f67e2ec9, cc: f67cd362]

ret [pc: f67e2ec9, cc: 0002fdab]

call [pc: f67e353d, cc: f67cc896]

call [pc: f67e2d39, cc: 0002e5af]

ret [pc: f67e2d39, cc: f67cc896]

call [pc: f67e2e60, cc: 0002e6f6]

ret [pc: f67e2e60, cc: f67cc896]

ret [pc: f67e353d, cc: 0002fdab]

ret [pc: f67e3a4b, cc: f67cc7e0]

ret [pc: f67e57c9, cc: 00029029]

call [pc: f67e57c9, cc: f67cc7e0]

call [pc: f67e3970, cc: 0002fe90]

ret [pc: f67e3970, cc: f67cc7e0]

call [pc: f67e3a4b, cc: 0002fdab]

call [pc: f67e2ec9, cc: f67cd362]

ret [pc: f67e2ec9, cc: 0002fdab]

call [pc: f67e353d, cc: f67cc896]

call [pc: f67e2d39, cc: 0002e5af]

ret [pc: f67e2d39, cc: f67cc896]

call [pc: f67e2e60, cc: 0002e6f6]

ret [pc: f67e2e60, cc: f67cc896]

ret [pc: f67e353d, cc: 0002fdab]

ret [pc: f67e3a4b, cc: f67cc7e0]

ret [pc: f67e57c9, cc: 00029029]

call [pc: f67e57c9, cc: f67cc7e0]

call [pc: f67e3970, cc: 0002fe90]

ret [pc: f67e3970, cc: f67cc7e0]

call [pc: f67e3a4b, cc: 0002fdab]

call [pc: f67e2ec9, cc: f67cd362]

ret [pc: f67e2ec9, cc: 0002fdab]

call [pc: f67e353d, cc: f67cc896]

call [pc: f67e2d39, cc: 0002e5af]

ret [pc: f67e2d39, cc: f67cc896]

call [pc: f67e2e60, cc: 0002e6f6]

ret [pc: f67e2e60, cc: f67cc896]

ret [pc: f67e353d, cc: 0002fdab]

ret [pc: f67e3a4b, cc: f67cc7e0]

ret [pc: f67e57c9, cc: 00029029]

call [pc: f67e57c9, cc: f67cc7e0]

call [pc: f67e3970, cc: 0002fe90]

ret [pc: f67e3970, cc: f67cc7e0]

call [pc: f67e3a4b, cc: 0002fdab]

call [pc: f67e2ec9, cc: f67cd362]

ret [pc: f67e2ec9, cc: 0002fdab]

call [pc: f67e353d, cc: f67cc896]

call [pc: f67e2d39, cc: 0002e5af]

ret [pc: f67e2d39, cc: f67cc896]

call [pc: f67e2e60, cc: 0002e6f6]

ret [pc: f67e2e60, cc: f67cc896]

ret [pc: f67e353d, cc: 0002fdab]

ret [pc: f67e3a4b, cc: f67cc7e0]

ret [pc: f67e57c9, cc: 00029029]

call [pc: f67e57c9, cc: f67cc7e0]

call [pc: f67e3970, cc: 0002fe90]

ret [pc: f67e3970, cc: f67cc7e0]

call [pc: f67e3a4b, cc: 0002fdab]

call [pc: f67e2ec9, cc: f67cd362]

ret [pc: f67e2ec9, cc: 0002fdab]

call [pc: f67e353d, cc: f67cc896]

call [pc: f67e2d39, cc: 0002e5af]

ret [pc: f67e2d39, cc: f67cc896]

call [pc: f67e2e60, cc: 0002e6f6]

ret [pc: f67e2e60, cc: f67cc896]

ret [pc: f67e353d, cc: 0002fdab]

ret [pc: f67e3a4b, cc: f67cc7e0]

ret [pc: f67e57c9, cc: 00029029]

call [pc: f67e57c9, cc: f67cc7e0]

call [pc: f67e3970, cc: 0002fe90]

ret [pc: f67e3970, cc: f67cc7e0]

call [pc: f67e3a4b, cc: 0002fdab]

call [pc: f67e2ec9, cc: f67cd362]

ret [pc: f67e2ec9, cc: 0002fdab]

call [pc: f67e353d, cc: f67cc896]

call [pc: f67e2d39, cc: 0002e5af]

ret [pc: f67e2d39, cc: f67cc896]

call [pc: f67e2e60, cc: 0002e6f6]

ret [pc: f67e2e60, cc: f67cc896]

ret [pc: f67e353d, cc: 0002fdab]

ret [pc: f67e3a4b, cc: f67cc7e0]

ret [pc: f67e57c9, cc: 00029029]

call [pc: f67e57c9, cc: f67cc7e0]

call [pc: f67e3970, cc: 0002fe90]

ret [pc: f67e3970, cc: f67cc7e0]

call [pc: f67e3a4b, cc: 0002fdab]

call [pc: f67e2ec9, cc: f67cd362]

ret [pc: f67e2ec9, cc: 0002fdab]

call [pc: f67e353d, cc: f67cc896]

call [pc: f67e2d39, cc: 0002e5af]

ret [pc: f67e2d39, cc: f67cc896]

call [pc: f67e2e60, cc: 0002e6f6]

ret [pc: f67e2e60, cc: f67cc896]

ret [pc: f67e353d, cc: 0002fdab]

ret [pc: f67e3a4b, cc: f67cc7e0]

ret [pc: f67e57c9, cc: 00029029]

call [pc: f67e57c9, cc: f67cc7e0]

call [pc: f67e3970, cc: 0002fe90]

ret [pc: f67e3970, cc: f67cc7e0]

call [pc: f67e3a4b, cc: 0002fdab]

call [pc: f67e2ec9, cc: f67cd362]

ret [pc: f67e2ec9, cc: 0002fdab]

call [pc: f67e353d, cc: f67cc896]

call [pc: f67e2d39, cc: 0002e5af]

ret [pc: f67e2d39, cc: f67cc896]

call [pc: f67e2e60, cc: 0002e6f6]

ret [pc: f67e2e60, cc: f67cc896]

ret [pc: f67e353d, cc: 0002fdab]

ret [pc: f67e3a4b, cc: f67cc7e0]

ret [pc: f67e57c9, cc: 00029029]

call [pc: f67e57c9, cc: f67cc7e0]

call [pc: f67e3970, cc: 0002fe90]

ret [pc: f67e3970, cc: f67cc7e0]

call [pc: f67e3a4b, cc: 0002fdab]

call [pc: f67e2ec9, cc: f67cd362]

ret [pc: f67e2ec9, cc: 0002fdab]

call [pc: f67e353d, cc: f67cc896]

call [pc: f67e2d39, cc: 0002e5af]

ret [pc: f67e2d39, cc: f67cc896]

call [pc: f67e2e60, cc: 0002e6f6]

ret [pc: f67e2e60, cc: f67cc896]

ret [pc: f67e353d, cc: 0002fdab]

ret [pc: f67e3a4b, cc: f67cc7e0]

ret [pc: f67e57c9, cc: 00029029]

call [pc: f67e57c9, cc: f67cc7e0]

call [pc: f67e3970, cc: 0002fe90]

ret [pc: f67e3970, cc: f67cc7e0]

call [pc: f67e3a4b, cc: 0002fdab]

call [pc: f67e2ec9, cc: f67cd362]

ret [pc: f67e2ec9, cc: 0002fdab]

call [pc: f67e353d, cc: f67cc896]

call [pc: f67e2d39, cc: 0002e5af]

ret [pc: f67e2d39, cc: f67cc896]

call [pc: f67e2e60, cc: 0002e6f6]

ret [pc: f67e2e60, cc: f67cc896]

ret [pc: f67e353d, cc: 0002fdab]

ret [pc: f67e3a4b, cc: f67cc7e0]

ret [pc: f67e57c9, cc: 00029029]

call [pc: f67e57c9, cc: f67cc7e0]

call [pc: f67e3970, cc: 0002fe90]

ret [pc: f67e3970, cc: f67cc7e0]

call [pc: f67e3a4b, cc: 0002fdab]

call [pc: f67e2ec9, cc: f67cd362]

ret [pc: f67e2ec9, cc: 0002fdab]

call [pc: f67e353d, cc: f67cc896]

call [pc: f67e2d39, cc: 0002e5af]

ret [pc: f67e2d39, cc: f67cc896]

call [pc: f67e2e60, cc: 0002e6f6]

ret [pc: f67e2e60, cc: f67cc896]

ret [pc: f67e353d, cc: 0002fdab]

ret [pc: f67e3a4b, cc: f67cc7e0]

ret [pc: f67e57c9, cc: 00029029]

call [pc: f67e57c9, cc: f67cc7e0]

call [pc: f67e3970, cc: 0002fe90]

ret [pc: f67e3970, cc: f67cc7e0]

call [pc: f67e3a4b, cc: 0002fdab]

call [pc: f67e2ec9, cc: f67cd362]

ret [pc: f67e2ec9, cc: 0002fdab]
----------------
IN: 
0xf67e3014:  xor    %eax,%eax
0xf67e3016:  add    $0x5c,%esp
0xf67e3019:  pop    %ebx
0xf67e301a:  pop    %esi
0xf67e301b:  pop    %edi
0xf67e301c:  pop    %ebp
0xf67e301d:  ret    


ret [pc: f67e3a4b, cc: f67cc7e0]
----------------
IN: 
0xf67e3a10:  je     0xf67e3a1a

----------------
IN: 
0xf67e3a1a:  add    $0x4,%esi
0xf67e3a1d:  mov    (%esi),%eax
0xf67e3a1f:  xor    %edx,%edx
0xf67e3a21:  test   %eax,%eax
0xf67e3a23:  je     0xf67e3a53

----------------
IN: 
0xf67e3bb8:  mov    -0x5c(%ebp),%eax
0xf67e3bbb:  mov    (%eax),%eax
0xf67e3bbd:  test   %eax,%eax
0xf67e3bbf:  je     0xf67e3bcc

----------------
IN: 
0xf67e3bc1:  movzbl 0xc(%eax),%eax
0xf67e3bc5:  shr    $0x4,%al
0xf67e3bc8:  cmp    $0x2,%al
0xf67e3bca:  je     0xf67e3bd7

----------------
IN: 
0xf67e3bd7:  mov    -0x5c(%ebp),%eax
0xf67e3bda:  movl   $0x0,(%eax)
0xf67e3be0:  xor    %eax,%eax
0xf67e3be2:  jmp    0xf67e3ac0

----------------
IN: 
0xf67e3ac0:  lea    -0xc(%ebp),%esp
0xf67e3ac3:  pop    %ebx
0xf67e3ac4:  pop    %esi
0xf67e3ac5:  pop    %edi
0xf67e3ac6:  pop    %ebp
0xf67e3ac7:  ret    $0x14


ret [pc: f67e57c9, cc: 00029029]
----------------
IN: 
0xf67e5a10:  test   %edx,%edx
0xf67e5a12:  jne    0xf67e6dda

----------------
IN: 
0xf67e5a18:  cmp    $0x2a,%esi
0xf67e5a1b:  ja     0xf67e59d0

----------------
IN: 
0xf67e5a1d:  mov    -0x60(%ebp),%eax
0xf67e5a20:  add    -0xa2e8(%eax,%esi,4),%eax
0xf67e5a27:  jmp    *%eax

----------------
IN: 
0xf67e5859:  movl   $0x0,-0x88(%ebp)
0xf67e5863:  nop    
0xf67e5864:  lea    0x0(%esi),%esi
0xf67e5868:  mov    -0x64(%ebp),%eax
0xf67e586b:  mov    -0x88(%ebp),%edi
0xf67e5871:  mov    %edi,(%eax)
0xf67e5873:  jmp    0xf67e5830


call [pc: f67e57c9, cc: f67cc7e0]

call [pc: f67e3970, cc: 0002fe90]

ret [pc: f67e3970, cc: f67cc7e0]

call [pc: f67e3a4b, cc: 0002fdab]

call [pc: f67e2ec9, cc: f67cd362]

ret [pc: f67e2ec9, cc: 0002fdab]

call [pc: f67e353d, cc: f67cc896]

call [pc: f67e2d39, cc: 0002e5af]

ret [pc: f67e2d39, cc: f67cc896]

call [pc: f67e2e60, cc: 0002e6f6]

ret [pc: f67e2e60, cc: f67cc896]

ret [pc: f67e353d, cc: 0002fdab]

ret [pc: f67e3a4b, cc: f67cc7e0]

ret [pc: f67e57c9, cc: 00029029]

call [pc: f67e57c9, cc: f67cc7e0]

call [pc: f67e3970, cc: 0002fe90]

ret [pc: f67e3970, cc: f67cc7e0]

call [pc: f67e3a4b, cc: 0002fdab]

call [pc: f67e2ec9, cc: f67cd362]

ret [pc: f67e2ec9, cc: 0002fdab]

call [pc: f67e353d, cc: f67cc896]

call [pc: f67e2d39, cc: 0002e5af]

ret [pc: f67e2d39, cc: f67cc896]

call [pc: f67e2e60, cc: 0002e6f6]

ret [pc: f67e2e60, cc: f67cc896]

ret [pc: f67e353d, cc: 0002fdab]

ret [pc: f67e3a4b, cc: f67cc7e0]

ret [pc: f67e57c9, cc: 00029029]

call [pc: f67e57c9, cc: f67cc7e0]

call [pc: f67e3970, cc: 0002fe90]

ret [pc: f67e3970, cc: f67cc7e0]

call [pc: f67e3a4b, cc: 0002fdab]

call [pc: f67e2ec9, cc: f67cd362]

ret [pc: f67e2ec9, cc: 0002fdab]

call [pc: f67e353d, cc: f67cc896]

call [pc: f67e2d39, cc: 0002e5af]

ret [pc: f67e2d39, cc: f67cc896]

call [pc: f67e2e60, cc: 0002e6f6]

ret [pc: f67e2e60, cc: f67cc896]

ret [pc: f67e353d, cc: 0002fdab]

ret [pc: f67e3a4b, cc: f67cc7e0]

ret [pc: f67e57c9, cc: 00029029]

call [pc: f67e57c9, cc: f67cc7e0]

call [pc: f67e3970, cc: 0002fe90]

ret [pc: f67e3970, cc: f67cc7e0]

call [pc: f67e3a4b, cc: 0002fdab]

call [pc: f67e2ec9, cc: f67cd362]

ret [pc: f67e2ec9, cc: 0002fdab]

call [pc: f67e353d, cc: f67cc896]

call [pc: f67e2d39, cc: 0002e5af]

ret [pc: f67e2d39, cc: f67cc896]

call [pc: f67e2e60, cc: 0002e6f6]

ret [pc: f67e2e60, cc: f67cc896]

ret [pc: f67e353d, cc: 0002fdab]

ret [pc: f67e3a4b, cc: f67cc7e0]

ret [pc: f67e57c9, cc: 00029029]

call [pc: f67e57c9, cc: f67cc7e0]

call [pc: f67e3970, cc: 0002fe90]

ret [pc: f67e3970, cc: f67cc7e0]

call [pc: f67e3a4b, cc: 0002fdab]

call [pc: f67e2ec9, cc: f67cd362]

ret [pc: f67e2ec9, cc: 0002fdab]

call [pc: f67e353d, cc: f67cc896]

call [pc: f67e2d39, cc: 0002e5af]

ret [pc: f67e2d39, cc: f67cc896]

call [pc: f67e2e60, cc: 0002e6f6]

ret [pc: f67e2e60, cc: f67cc896]

ret [pc: f67e353d, cc: 0002fdab]

ret [pc: f67e3a4b, cc: f67cc7e0]

ret [pc: f67e57c9, cc: 00029029]

call [pc: f67e57c9, cc: f67cc7e0]

call [pc: f67e3970, cc: 0002fe90]

ret [pc: f67e3970, cc: f67cc7e0]

call [pc: f67e3a4b, cc: 0002fdab]

call [pc: f67e2ec9, cc: f67cd362]

ret [pc: f67e2ec9, cc: 0002fdab]

call [pc: f67e353d, cc: f67cc896]

call [pc: f67e2d39, cc: 0002e5af]

ret [pc: f67e2d39, cc: f67cc896]

call [pc: f67e2e60, cc: 0002e6f6]

ret [pc: f67e2e60, cc: f67cc896]

ret [pc: f67e353d, cc: 0002fdab]

ret [pc: f67e3a4b, cc: f67cc7e0]

ret [pc: f67e57c9, cc: 00029029]

call [pc: f67e57c9, cc: f67cc7e0]

call [pc: f67e3970, cc: 0002fe90]

ret [pc: f67e3970, cc: f67cc7e0]

call [pc: f67e3a4b, cc: 0002fdab]

call [pc: f67e2ec9, cc: f67cd362]

ret [pc: f67e2ec9, cc: 0002fdab]

call [pc: f67e353d, cc: f67cc896]

call [pc: f67e2d39, cc: 0002e5af]

ret [pc: f67e2d39, cc: f67cc896]

call [pc: f67e2e60, cc: 0002e6f6]

ret [pc: f67e2e60, cc: f67cc896]

ret [pc: f67e353d, cc: 0002fdab]

ret [pc: f67e3a4b, cc: f67cc7e0]

ret [pc: f67e57c9, cc: 00029029]

call [pc: f67e57c9, cc: f67cc7e0]

call [pc: f67e3970, cc: 0002fe90]

ret [pc: f67e3970, cc: f67cc7e0]

call [pc: f67e3a4b, cc: 0002fdab]

call [pc: f67e2ec9, cc: f67cd362]

ret [pc: f67e2ec9, cc: 0002fdab]

call [pc: f67e353d, cc: f67cc896]

call [pc: f67e2d39, cc: 0002e5af]

ret [pc: f67e2d39, cc: f67cc896]

call [pc: f67e2e60, cc: 0002e6f6]

ret [pc: f67e2e60, cc: f67cc896]

ret [pc: f67e353d, cc: 0002fdab]

ret [pc: f67e3a4b, cc: f67cc7e0]

ret [pc: f67e57c9, cc: 00029029]

call [pc: f67e57c9, cc: f67cc7e0]

call [pc: f67e3970, cc: 0002fe90]

ret [pc: f67e3970, cc: f67cc7e0]

call [pc: f67e3a4b, cc: 0002fdab]

call [pc: f67e2ec9, cc: f67cd362]

ret [pc: f67e2ec9, cc: 0002fdab]

call [pc: f67e353d, cc: f67cc896]

call [pc: f67e2d39, cc: 0002e5af]

ret [pc: f67e2d39, cc: f67cc896]

call [pc: f67e2e60, cc: 0002e6f6]

ret [pc: f67e2e60, cc: f67cc896]

ret [pc: f67e353d, cc: 0002fdab]

ret [pc: f67e3a4b, cc: f67cc7e0]

ret [pc: f67e57c9, cc: 00029029]

call [pc: f67e57c9, cc: f67cc7e0]

call [pc: f67e3970, cc: 0002fe90]

ret [pc: f67e3970, cc: f67cc7e0]

call [pc: f67e3a4b, cc: 0002fdab]

call [pc: f67e2ec9, cc: f67cd362]

ret [pc: f67e2ec9, cc: 0002fdab]

call [pc: f67e353d, cc: f67cc896]

call [pc: f67e2d39, cc: 0002e5af]

ret [pc: f67e2d39, cc: f67cc896]

call [pc: f67e2e60, cc: 0002e6f6]

ret [pc: f67e2e60, cc: f67cc896]

ret [pc: f67e353d, cc: 0002fdab]

ret [pc: f67e3a4b, cc: f67cc7e0]

ret [pc: f67e57c9, cc: 00029029]

call [pc: f67e57c9, cc: f67cc7e0]

call [pc: f67e3970, cc: 0002fe90]

ret [pc: f67e3970, cc: f67cc7e0]

call [pc: f67e3a4b, cc: 0002fdab]

call [pc: f67e2ec9, cc: f67cd362]

ret [pc: f67e2ec9, cc: 0002fdab]

call [pc: f67e353d, cc: f67cc896]

call [pc: f67e2d39, cc: 0002e5af]

ret [pc: f67e2d39, cc: f67cc896]

call [pc: f67e2e60, cc: 0002e6f6]

ret [pc: f67e2e60, cc: f67cc896]

ret [pc: f67e353d, cc: 0002fdab]

ret [pc: f67e3a4b, cc: f67cc7e0]

ret [pc: f67e57c9, cc: 00029029]

call [pc: f67e57c9, cc: f67cc7e0]

call [pc: f67e3970, cc: 0002fe90]

ret [pc: f67e3970, cc: f67cc7e0]

call [pc: f67e3a4b, cc: 0002fdab]

call [pc: f67e2ec9, cc: f67cd362]

ret [pc: f67e2ec9, cc: 0002fdab]

call [pc: f67e353d, cc: f67cc896]

call [pc: f67e2d39, cc: 0002e5af]

ret [pc: f67e2d39, cc: f67cc896]

call [pc: f67e2e60, cc: 0002e6f6]

ret [pc: f67e2e60, cc: f67cc896]

ret [pc: f67e353d, cc: 0002fdab]

ret [pc: f67e3a4b, cc: f67cc7e0]

ret [pc: f67e57c9, cc: 00029029]

call [pc: f67e57c9, cc: f67cc7e0]

call [pc: f67e3970, cc: 0002fe90]

ret [pc: f67e3970, cc: f67cc7e0]

call [pc: f67e3a4b, cc: 0002fdab]

call [pc: f67e2ec9, cc: f67cd362]

ret [pc: f67e2ec9, cc: 0002fdab]

call [pc: f67e353d, cc: f67cc896]

call [pc: f67e2d39, cc: 0002e5af]

ret [pc: f67e2d39, cc: f67cc896]

call [pc: f67e2e60, cc: 0002e6f6]

ret [pc: f67e2e60, cc: f67cc896]

ret [pc: f67e353d, cc: 0002fdab]

ret [pc: f67e3a4b, cc: f67cc7e0]

ret [pc: f67e57c9, cc: 00029029]

call [pc: f67e57c9, cc: f67cc7e0]

call [pc: f67e3970, cc: 0002fe90]

ret [pc: f67e3970, cc: f67cc7e0]

call [pc: f67e3a4b, cc: 0002fdab]

call [pc: f67e2ec9, cc: f67cd362]

ret [pc: f67e2ec9, cc: 0002fdab]

call [pc: f67e353d, cc: f67cc896]

call [pc: f67e2d39, cc: 0002e5af]

ret [pc: f67e2d39, cc: f67cc896]

call [pc: f67e2e60, cc: 0002e6f6]

ret [pc: f67e2e60, cc: f67cc896]

ret [pc: f67e353d, cc: 0002fdab]

ret [pc: f67e3a4b, cc: f67cc7e0]

ret [pc: f67e57c9, cc: 00029029]

call [pc: f67e57c9, cc: f67cc7e0]

call [pc: f67e3970, cc: 0002fe90]

ret [pc: f67e3970, cc: f67cc7e0]

call [pc: f67e3a4b, cc: 0002fdab]

call [pc: f67e2ec9, cc: f67cd362]

ret [pc: f67e2ec9, cc: 0002fdab]

call [pc: f67e353d, cc: f67cc896]

call [pc: f67e2d39, cc: 0002e5af]

ret [pc: f67e2d39, cc: f67cc896]

call [pc: f67e2e60, cc: 0002e6f6]

ret [pc: f67e2e60, cc: f67cc896]

ret [pc: f67e353d, cc: 0002fdab]

ret [pc: f67e3a4b, cc: f67cc7e0]

ret [pc: f67e57c9, cc: 00029029]

call [pc: f67e57c9, cc: f67cc7e0]

call [pc: f67e3970, cc: 0002fe90]

ret [pc: f67e3970, cc: f67cc7e0]

call [pc: f67e3a4b, cc: 0002fdab]

call [pc: f67e2ec9, cc: f67cd362]

ret [pc: f67e2ec9, cc: 0002fdab]

call [pc: f67e353d, cc: f67cc896]

call [pc: f67e2d39, cc: 0002e5af]

ret [pc: f67e2d39, cc: f67cc896]

call [pc: f67e2e60, cc: 0002e6f6]

ret [pc: f67e2e60, cc: f67cc896]

ret [pc: f67e353d, cc: 0002fdab]

ret [pc: f67e3a4b, cc: f67cc7e0]

ret [pc: f67e57c9, cc: 00029029]

call [pc: f67e57c9, cc: f67cc7e0]

call [pc: f67e3970, cc: 0002fe90]

ret [pc: f67e3970, cc: f67cc7e0]

call [pc: f67e3a4b, cc: 0002fdab]

call [pc: f67e2ec9, cc: f67cd362]

ret [pc: f67e2ec9, cc: 0002fdab]

call [pc: f67e353d, cc: f67cc896]

call [pc: f67e2d39, cc: 0002e5af]

ret [pc: f67e2d39, cc: f67cc896]

call [pc: f67e2e60, cc: 0002e6f6]

ret [pc: f67e2e60, cc: f67cc896]

ret [pc: f67e353d, cc: 0002fdab]

ret [pc: f67e3a4b, cc: f67cc7e0]

ret [pc: f67e57c9, cc: 00029029]

call [pc: f67e57c9, cc: f67cc7e0]

call [pc: f67e3970, cc: 0002fe90]

ret [pc: f67e3970, cc: f67cc7e0]

call [pc: f67e3a4b, cc: 0002fdab]

call [pc: f67e2ec9, cc: f67cd362]

ret [pc: f67e2ec9, cc: 0002fdab]

call [pc: f67e353d, cc: f67cc896]

call [pc: f67e2d39, cc: 0002e5af]

ret [pc: f67e2d39, cc: f67cc896]

call [pc: f67e2e60, cc: 0002e6f6]

ret [pc: f67e2e60, cc: f67cc896]

ret [pc: f67e353d, cc: 0002fdab]

ret [pc: f67e3a4b, cc: f67cc7e0]

ret [pc: f67e57c9, cc: 00029029]

call [pc: f67e57c9, cc: f67cc7e0]

call [pc: f67e3970, cc: 0002fe90]

ret [pc: f67e3970, cc: f67cc7e0]

call [pc: f67e3a4b, cc: 0002fdab]

call [pc: f67e2ec9, cc: f67cd362]

ret [pc: f67e2ec9, cc: 0002fdab]

call [pc: f67e353d, cc: f67cc896]

call [pc: f67e2d39, cc: 0002e5af]

ret [pc: f67e2d39, cc: f67cc896]

call [pc: f67e2e60, cc: 0002e6f6]

ret [pc: f67e2e60, cc: f67cc896]

ret [pc: f67e353d, cc: 0002fdab]

ret [pc: f67e3a4b, cc: f67cc7e0]

ret [pc: f67e57c9, cc: 00029029]

call [pc: f67e57c9, cc: f67cc7e0]

call [pc: f67e3970, cc: 0002fe90]

ret [pc: f67e3970, cc: f67cc7e0]

call [pc: f67e3a4b, cc: 0002fdab]

call [pc: f67e2ec9, cc: f67cd362]

ret [pc: f67e2ec9, cc: 0002fdab]

call [pc: f67e353d, cc: f67cc896]

call [pc: f67e2d39, cc: 0002e5af]

ret [pc: f67e2d39, cc: f67cc896]

call [pc: f67e2e60, cc: 0002e6f6]

ret [pc: f67e2e60, cc: f67cc896]

ret [pc: f67e353d, cc: 0002fdab]

ret [pc: f67e3a4b, cc: f67cc7e0]

ret [pc: f67e57c9, cc: 00029029]

call [pc: f67e57c9, cc: f67cc7e0]

call [pc: f67e3970, cc: 0002fe90]

ret [pc: f67e3970, cc: f67cc7e0]

call [pc: f67e3a4b, cc: 0002fdab]

call [pc: f67e2ec9, cc: f67cd362]

ret [pc: f67e2ec9, cc: 0002fdab]

call [pc: f67e2ffb, cc: f67cd250]

call [pc: f67ea16c, cc: 0002733c]

ret [pc: f67ea16c, cc: f67cd250]

call [pc: f67ea17e, cc: 0002732e]

ret [pc: f67ea17e, cc: f67cd250]

call [pc: f67ea1a2, cc: 000273f2]

ret [pc: f67ea1a2, cc: f67cd250]

ret [pc: f67e2ffb, cc: 0002fdab]

call [pc: f67e2ffb, cc: f67cd250]

call [pc: f67ea16c, cc: 0002733c]

ret [pc: f67ea16c, cc: f67cd250]

call [pc: f67ea17e, cc: 0002732e]

ret [pc: f67ea17e, cc: f67cd250]

call [pc: f67ea1a2, cc: 000273f2]

ret [pc: f67ea1a2, cc: f67cd250]

ret [pc: f67e2ffb, cc: 0002fdab]

call [pc: f67e353d, cc: f67cc896]

call [pc: f67e2d39, cc: 0002e5af]

ret [pc: f67e2d39, cc: f67cc896]

call [pc: f67e2da0, cc: 0002e536]

ret [pc: f67e2da0, cc: f67cc896]

call [pc: f67e2e60, cc: 0002e6f6]

ret [pc: f67e2e60, cc: f67cc896]

ret [pc: f67e353d, cc: 0002fdab]

ret [pc: f67e3a4b, cc: f67cc7e0]

ret [pc: f67e57c9, cc: 00029029]

call [pc: f67e57c9, cc: f67cc7e0]

call [pc: f67e3970, cc: 0002fe90]

ret [pc: f67e3970, cc: f67cc7e0]

call [pc: f67e3a4b, cc: 0002fdab]

call [pc: f67e2ec9, cc: f67cd362]

ret [pc: f67e2ec9, cc: 0002fdab]

call [pc: f67e353d, cc: f67cc896]

call [pc: f67e2d39, cc: 0002e5af]

ret [pc: f67e2d39, cc: f67cc896]

call [pc: f67e2e60, cc: 0002e6f6]

ret [pc: f67e2e60, cc: f67cc896]

ret [pc: f67e353d, cc: 0002fdab]

ret [pc: f67e3a4b, cc: f67cc7e0]

ret [pc: f67e57c9, cc: 00029029]

call [pc: f67e57c9, cc: f67cc7e0]

call [pc: f67e3970, cc: 0002fe90]

ret [pc: f67e3970, cc: f67cc7e0]

call [pc: f67e3a4b, cc: 0002fdab]

call [pc: f67e2ec9, cc: f67cd362]

ret [pc: f67e2ec9, cc: 0002fdab]

call [pc: f67e353d, cc: f67cc896]

call [pc: f67e2d39, cc: 0002e5af]

ret [pc: f67e2d39, cc: f67cc896]

call [pc: f67e2e60, cc: 0002e6f6]

ret [pc: f67e2e60, cc: f67cc896]

ret [pc: f67e353d, cc: 0002fdab]

ret [pc: f67e3a4b, cc: f67cc7e0]

ret [pc: f67e57c9, cc: 00029029]
----------------
IN: 
0xf67e6683:  mov    -0x60(%ebp),%eax
0xf67e6686:  addl   $0x1,0x530(%eax)
0xf67e668d:  mov    0x8(%ebp),%eax
0xf67e6690:  mov    0x228(%eax),%edx
0xf67e6696:  mov    0x224(%eax),%edi
0xf67e669c:  mov    %edx,-0x44(%ebp)
0xf67e669f:  jmp    0xf67e57e0

----------------
IN: 
0xf67e57e0:  test   %edi,%edi
0xf67e57e2:  je     0xf67e5a10


call [pc: f67e57c9, cc: f67cc7e0]

call [pc: f67e3970, cc: 0002fe90]

ret [pc: f67e3970, cc: f67cc7e0]

call [pc: f67e3a4b, cc: 0002fdab]

call [pc: f67e2ec9, cc: f67cd362]

ret [pc: f67e2ec9, cc: 0002fdab]

call [pc: f67e353d, cc: f67cc896]

call [pc: f67e2d39, cc: 0002e5af]

ret [pc: f67e2d39, cc: f67cc896]

call [pc: f67e2e60, cc: 0002e6f6]

ret [pc: f67e2e60, cc: f67cc896]

ret [pc: f67e353d, cc: 0002fdab]

ret [pc: f67e3a4b, cc: f67cc7e0]

ret [pc: f67e57c9, cc: 00029029]

call [pc: f67e57c9, cc: f67cc7e0]

call [pc: f67e3970, cc: 0002fe90]

ret [pc: f67e3970, cc: f67cc7e0]

call [pc: f67e3a4b, cc: 0002fdab]

call [pc: f67e2ec9, cc: f67cd362]

ret [pc: f67e2ec9, cc: 0002fdab]

call [pc: f67e353d, cc: f67cc896]

call [pc: f67e2d39, cc: 0002e5af]

ret [pc: f67e2d39, cc: f67cc896]

call [pc: f67e2e60, cc: 0002e6f6]

ret [pc: f67e2e60, cc: f67cc896]

ret [pc: f67e353d, cc: 0002fdab]

ret [pc: f67e3a4b, cc: f67cc7e0]

ret [pc: f67e57c9, cc: 00029029]
----------------
IN: 
0xf67e5840:  jmp    0xf67e5190

----------------
IN: 
0xf67e5190:  mov    0x8(%ebp),%eax
0xf67e5193:  mov    (%eax),%edi
0xf67e5195:  addl   $0x10,-0x90(%ebp)
0xf67e519c:  mov    -0x90(%ebp),%eax
0xf67e51a2:  cmp    -0x9c(%ebp),%eax
0xf67e51a8:  jne    0xf67e66d5

----------------
IN: 
0xf67e66d5:  mov    -0x90(%ebp),%edx
0xf67e66db:  mov    0xc(%edx),%eax
0xf67e66de:  mov    0x4(%edx),%esi
0xf67e66e1:  mov    (%edx),%ebx
0xf67e66e3:  jmp    0xf67e510b

----------------
IN: 
0xf67e510b:  add    %ebx,%esi
0xf67e510d:  test   %eax,%eax
0xf67e510f:  mov    %esi,-0x5c(%ebp)
0xf67e5112:  je     0xf67e5650

----------------
IN: 
0xf67e5118:  mov    -0x60(%ebp),%eax
0xf67e511b:  cmp    %esi,%ebx
0xf67e511d:  lea    -0xe080(%eax),%edx
0xf67e5123:  lea    -0xe060(%eax),%eax
0xf67e5129:  mov    %edx,-0x68(%ebp)
0xf67e512c:  mov    %eax,-0x7c(%ebp)
0xf67e512f:  jb     0xf67e5153

----------------
IN: 
0xf67e5153:  mov    0x4(%ebx),%eax
0xf67e5156:  mov    (%ebx),%esi
0xf67e5158:  movzbl %al,%edx
0xf67e515b:  add    %edi,%esi
0xf67e515d:  cmp    $0x7,%edx
0xf67e5160:  je     0xf67e5138

----------------
IN: 
0xf67e5138:  mov    0x8(%ebp),%eax
0xf67e513b:  mov    0x210(%eax),%eax
0xf67e5141:  test   %eax,%eax
0xf67e5143:  jne    0xf67e5520

----------------
IN: 
0xf67e5149:  add    %edi,(%esi)
0xf67e514b:  add    $0x8,%ebx
0xf67e514e:  cmp    %ebx,-0x5c(%ebp)
0xf67e5151:  jbe    0xf67e5190

----------------
IN: 
0xf67e5162:  cmp    $0x29,%edx
0xf67e5165:  jne    0xf67e5b48

----------------
IN: 
0xf67e5b48:  cmp    $0x2a,%edx
0xf67e5b4b:  je     0xf67e6ac0

----------------
IN: 
0xf67e6ac0:  mov    0x8(%ebp),%edx
0xf67e6ac3:  mov    (%esi),%eax
0xf67e6ac5:  add    (%edx),%eax
0xf67e6ac7:  mov    -0x8c(%ebp),%edx
0xf67e6acd:  test   %edx,%edx
0xf67e6acf:  jne    0xf67e5ccd

----------------
IN: 
0xf67e6ad5:  call   *%eax


call [pc: f67e6ad7, cc: f67cfafe]
----------------
IN: 
0xf6672340:  call   0xf671a99d


call [pc: f6672345, cc: 001bd9bb]
----------------
IN: 
0xf671a99d:  mov    (%esp),%edx
0xf671a9a0:  ret    


ret [pc: f6672345, cc: f67cfafe]
----------------
IN: 
0xf6672345:  add    $0x13acbb,%edx
0xf667234b:  mov    -0xdc(%edx),%ecx
0xf6672351:  lea    -0x121ec0(%edx),%eax
0xf6672357:  testl  $0x200,0x64(%ecx)
0xf667235e:  je     0xf6672381

----------------
IN: 
0xf6672381:  ret    


ret [pc: f67e6ad7, cc: 00029029]
----------------
IN: 
0xf67e6ad7:  mov    %eax,(%esi)
0xf67e6ad9:  jmp    0xf67e514b

----------------
IN: 
0xf67e514b:  add    $0x8,%ebx
0xf67e514e:  cmp    %ebx,-0x5c(%ebp)
0xf67e5151:  jbe    0xf67e5190


call [pc: f67e6ad7, cc: f67cfafe]
----------------
IN: 
0xf6678fd0:  call   0xf671a99d


call [pc: f6678fd5, cc: 001b752b]

ret [pc: f6678fd5, cc: f67cfafe]
----------------
IN: 
0xf6678fd5:  add    $0x13402b,%edx
0xf6678fdb:  mov    -0xdc(%edx),%ecx
0xf6678fe1:  testl  $0x4000000,0x68(%ecx)
0xf6678fe8:  je     0xf6678ffd

----------------
IN: 
0xf6678fea:  testl  $0x4,0x94(%ecx)
0xf6678ff4:  je     0xf6679004

----------------
IN: 
0xf6679004:  lea    -0x122700(%edx),%eax
0xf667900a:  ret    


ret [pc: f67e6ad7, cc: 00029029]

call [pc: f67e6ad7, cc: f67cfafe]
----------------
IN: 
0xf668b9b0:  call   0xf671a99d


call [pc: f668b9b5, cc: 0014434b]

ret [pc: f668b9b5, cc: f67cfafe]
----------------
IN: 
0xf668b9b5:  add    $0x12164b,%edx
0xf668b9bb:  mov    -0xdc(%edx),%ecx
0xf668b9c1:  lea    -0x111b60(%edx),%eax
0xf668b9c7:  testl  $0x4000000,0x68(%ecx)
0xf668b9ce:  je     0xf668b9d6

----------------
IN: 
0xf668b9d0:  lea    -0x111d60(%edx),%eax
0xf668b9d6:  ret    


ret [pc: f67e6ad7, cc: 00029029]
----------------
IN: 
0xf67e51ae:  mov    %edi,-0x78(%ebp)
0xf67e51b1:  mov    0x8(%ebp),%edi
0xf67e51b4:  xor    %eax,%eax
0xf67e51b6:  movl   $0x0,-0x38(%ebp,%eax,1)
0xf67e51be:  add    $0x4,%eax
0xf67e51c1:  cmp    $0x20,%eax
0xf67e51c4:  jb     0xf67e51b6

----------------
IN: 
0xf67e51b6:  movl   $0x0,-0x38(%ebp,%eax,1)
0xf67e51be:  add    $0x4,%eax
0xf67e51c1:  cmp    $0x20,%eax
0xf67e51c4:  jb     0xf67e51b6

----------------
IN: 
0xf67e51c6:  mov    0x3c(%edi),%eax
0xf67e51c9:  test   %eax,%eax
0xf67e51cb:  je     0xf67e65d8

----------------
IN: 
0xf67e65d8:  xor    %ecx,%ecx
0xf67e65da:  xor    %esi,%esi
0xf67e65dc:  xor    %edx,%edx
0xf67e65de:  xor    %eax,%eax
0xf67e65e0:  jmp    0xf67e51f3

----------------
IN: 
0xf67e51f3:  mov    0x70(%edi),%ebx
0xf67e51f6:  test   %ebx,%ebx
0xf67e51f8:  je     0xf67e5204

----------------
IN: 
0xf67e51fa:  cmpl   $0x7,0x4(%ebx)
0xf67e51fe:  je     0xf67e622d

----------------
IN: 
0xf67e5204:  mov    -0xa0(%ebp),%esi
0xf67e520a:  mov    %edi,0x8(%ebp)
0xf67e520d:  mov    %esi,-0x90(%ebp)
0xf67e5213:  lea    -0x18(%ebp),%esi
0xf67e5216:  mov    %esi,-0x9c(%ebp)
0xf67e521c:  mov    -0x60(%ebp),%esi
0xf67e521f:  lea    0x53c(%esi),%ebx
0xf67e5225:  mov    %ebx,-0x94(%ebp)
0xf67e522b:  lea    -0x9854(%esi),%ebx
0xf67e5231:  lea    -0x7460(%esi),%esi
0xf67e5237:  mov    %ebx,-0xa0(%ebp)
0xf67e523d:  mov    %esi,-0xa4(%ebp)
0xf67e5243:  lea    (%eax,%edx,1),%edi
0xf67e5246:  mov    %eax,%ebx
0xf67e5248:  mov    %edi,-0x64(%ebp)
0xf67e524b:  mov    0x8(%ebp),%edi
0xf67e524e:  mov    0x38(%edi),%edx
0xf67e5251:  mov    0x4(%edx),%edi
0xf67e5254:  lea    (%ecx,%ecx,2),%edx
0xf67e5257:  lea    (%eax,%edx,4),%esi
0xf67e525a:  mov    %edi,-0x68(%ebp)
0xf67e525d:  mov    -0x94(%ebp),%edi
0xf67e5263:  cmp    %edi,0x8(%ebp)
0xf67e5266:  je     0xf67e5284

----------------
IN: 
0xf67e5268:  mov    -0x78(%ebp),%ecx
0xf67e526b:  test   %ecx,%ecx
0xf67e526d:  jne    0xf67e61f8

----------------
IN: 
0xf67e61f8:  cmp    %esi,%eax
0xf67e61fa:  jae    0xf67e5284

----------------
IN: 
0xf67e5284:  mov    0x8(%ebp),%eax
0xf67e5287:  mov    0xe4(%eax),%eax
0xf67e528d:  test   %eax,%eax
0xf67e528f:  je     0xf67e5cf3

----------------
IN: 
0xf67e5295:  cmp    %esi,-0x64(%ebp)
0xf67e5298:  mov    0x4(%eax),%eax
0xf67e529b:  mov    %eax,-0x80(%ebp)
0xf67e529e:  jbe    0xf67e5444

----------------
IN: 
0xf67e5444:  addl   $0x10,-0x90(%ebp)
0xf67e544b:  mov    -0x90(%ebp),%eax
0xf67e5451:  cmp    -0x9c(%ebp),%eax
0xf67e5457:  jne    0xf67e6628

----------------
IN: 
0xf67e6628:  mov    0x8(%ebp),%esi
0xf67e662b:  mov    -0x90(%ebp),%eax
0xf67e6631:  mov    (%esi),%esi
0xf67e6633:  mov    0x8(%eax),%ecx
0xf67e6636:  mov    0x4(%eax),%edx
0xf67e6639:  mov    (%eax),%eax
0xf67e663b:  mov    %esi,-0x78(%ebp)
0xf67e663e:  jmp    0xf67e5243

----------------
IN: 
0xf67e5243:  lea    (%eax,%edx,1),%edi
0xf67e5246:  mov    %eax,%ebx
0xf67e5248:  mov    %edi,-0x64(%ebp)
0xf67e524b:  mov    0x8(%ebp),%edi
0xf67e524e:  mov    0x38(%edi),%edx
0xf67e5251:  mov    0x4(%edx),%edi
0xf67e5254:  lea    (%ecx,%ecx,2),%edx
0xf67e5257:  lea    (%eax,%edx,4),%esi
0xf67e525a:  mov    %edi,-0x68(%ebp)
0xf67e525d:  mov    -0x94(%ebp),%edi
0xf67e5263:  cmp    %edi,0x8(%ebp)
0xf67e5266:  je     0xf67e5284

----------------
IN: 
0xf67e545d:  mov    0x14(%ebp),%ecx
0xf67e5460:  mov    0x8(%ebp),%edi
0xf67e5463:  test   %ecx,%ecx
0xf67e5465:  jne    0xf67e67d6

----------------
IN: 
0xf67e546b:  mov    -0x98(%ebp),%edx
0xf67e5471:  orb    $0x4,0x194(%edi)
0xf67e5478:  test   %edx,%edx
0xf67e547a:  jne    0xf67e6869

----------------
IN: 
0xf67e5480:  mov    0x250(%edi),%eax
0xf67e5486:  test   %eax,%eax
0xf67e5488:  je     0xf67e5491

----------------
IN: 
0xf67e548a:  mov    %edi,%eax
0xf67e548c:  call   0xf67e4ed0


call [pc: f67e5491, cc: f67cc4b8]
----------------
IN: 
0xf67e4ed0:  push   %edi
0xf67e4ed1:  push   %esi
0xf67e4ed2:  push   %ebx
0xf67e4ed3:  call   0xf67f360d


call [pc: f67e4ed8, cc: 00028a60]

ret [pc: f67e4ed8, cc: f67cc4b8]
----------------
IN: 
0xf67e4ed8:  add    $0x19128,%esi
0xf67e4ede:  sub    $0x10,%esp
0xf67e4ee1:  mov    0x24c(%eax),%ecx
0xf67e4ee7:  add    (%eax),%ecx
0xf67e4ee9:  mov    -0x2f0(%esi),%ebx
0xf67e4eef:  mov    %ecx,%edi
0xf67e4ef1:  add    0x250(%eax),%ecx
0xf67e4ef7:  mov    %ebx,%edx
0xf67e4ef9:  neg    %edx
0xf67e4efb:  mov    %ebx,0xc(%esp)
0xf67e4eff:  and    %edx,%edi
0xf67e4f01:  and    %ecx,%edx
0xf67e4f03:  cmp    %edx,%edi
0xf67e4f05:  je     0xf67e4f1e

----------------
IN: 
0xf67e4f07:  sub    $0x4,%esp
0xf67e4f0a:  sub    %edi,%edx
0xf67e4f0c:  mov    %eax,%ebx
0xf67e4f0e:  push   $0x1
0xf67e4f10:  push   %edx
0xf67e4f11:  push   %edi
0xf67e4f12:  call   0xf67f28e0


call [pc: f67e4f17, cc: 00028baf]

ret [pc: f67e4f17, cc: f67cc4b8]
----------------
IN: 
0xf67e4f17:  add    $0x10,%esp
0xf67e4f1a:  test   %eax,%eax
0xf67e4f1c:  js     0xf67e4f25

----------------
IN: 
0xf67e4f1e:  add    $0x10,%esp
0xf67e4f21:  pop    %ebx
0xf67e4f22:  pop    %esi
0xf67e4f23:  pop    %edi
0xf67e4f24:  ret    


ret [pc: f67e5491, cc: 00029029]
----------------
IN: 
0xf67e5491:  lea    -0xc(%ebp),%esp
0xf67e5494:  pop    %ebx
0xf67e5495:  pop    %esi
0xf67e5496:  pop    %edi
0xf67e5497:  pop    %ebp
0xf67e5498:  ret    


ret [pc: f67dd5a7, cc: f67f458e]
----------------
IN: 
0xf67dd5a7:  add    $0x10,%esp
0xf67dd5aa:  mov    0x234(%ebx),%eax
0xf67dd5b0:  test   %eax,%eax
0xf67dd5b2:  je     0xf67dd5c0

----------------
IN: 
0xf67dd5b4:  mov    -0x4c(%ebp),%eax
0xf67dd5b7:  cmpb   $0x0,0x868(%eax)
0xf67dd5be:  jne    0xf67dd5fb

----------------
IN: 
0xf67dd5fb:  sub    $0xc,%esp
0xf67dd5fe:  push   %ebx
0xf67dd5ff:  call   0xf67ec480


call [pc: f67dd604, cc: 0002938a]
----------------
IN: 
0xf67ec480:  push   %ebp
0xf67ec481:  push   %edi
0xf67ec482:  push   %esi
0xf67ec483:  push   %ebx
0xf67ec484:  call   0xf67f3609


call [pc: f67ec489, cc: f67c5703]

ret [pc: f67ec489, cc: 0002938a]
----------------
IN: 
0xf67ec489:  add    $0x11b77,%ebx
0xf67ec48f:  sub    $0xc,%esp
0xf67ec492:  mov    0x20(%esp),%ebp
0xf67ec496:  mov    0x830(%ebx),%edi
0xf67ec49c:  mov    0x244(%ebp),%esi
0xf67ec4a2:  jmp    0xf67ec4b3

----------------
IN: 
0xf67ec4b3:  mov    (%edi),%eax
0xf67ec4b5:  cmp    %eax,%esi
0xf67ec4b7:  jae    0xf67ec4a8

----------------
IN: 
0xf67ec4b9:  lea    (%edi,%esi,8),%edx
0xf67ec4bc:  mov    %ebp,0xc(%edx)
0xf67ec4bf:  mov    0x848(%ebx),%eax
0xf67ec4c5:  add    $0x1,%eax
0xf67ec4c8:  mov    %eax,0x8(%edx)
0xf67ec4cb:  add    $0xc,%esp
0xf67ec4ce:  pop    %ebx
0xf67ec4cf:  pop    %esi
0xf67ec4d0:  pop    %edi
0xf67ec4d1:  pop    %ebp
0xf67ec4d2:  ret    


ret [pc: f67dd604, cc: f67f458e]
----------------
IN: 
0xf67dd604:  add    $0x10,%esp
0xf67dd607:  jmp    0xf67dd5c0


call [pc: f67dd5a7, cc: 00029029]

call [pc: f67e4fa6, cc: f67cdf8f]

ret [pc: f67e4fa6, cc: 00029029]
----------------
IN: 
0xf67e50a6:  mov    -0x5c(%ebp),%eax
0xf67e50a9:  add    %esi,%eax
0xf67e50ab:  mov    0x70(%edi),%edx
0xf67e50ae:  test   %edx,%edx
0xf67e50b0:  je     0xf67e50bc


call [pc: f67e57c9, cc: f67cc7e0]

call [pc: f67e3970, cc: 0002fe90]

ret [pc: f67e3970, cc: f67cc7e0]

call [pc: f67e3a4b, cc: 0002fdab]

call [pc: f67e2ec9, cc: f67cd362]

ret [pc: f67e2ec9, cc: 0002fdab]

ret [pc: f67e3a4b, cc: f67cc7e0]

ret [pc: f67e57c9, cc: 00029029]
----------------
IN: 
0xf67e5273:  mov    0x8(%ebp),%edx
0xf67e5276:  mov    0x11c(%edx),%edx
0xf67e527c:  test   %edx,%edx
0xf67e527e:  je     0xf67e61f8


call [pc: f67e5491, cc: f67cc4b8]

call [pc: f67e4ed8, cc: 00028a60]

ret [pc: f67e4ed8, cc: f67cc4b8]

call [pc: f67e4f17, cc: 00028baf]

ret [pc: f67e4f17, cc: f67cc4b8]

ret [pc: f67e5491, cc: 00029029]

ret [pc: f67dd5a7, cc: f67f458e]
----------------
IN: 
0xf67dd5ca:  rdtsc  
0xf67dd5cc:  sub    -0x58(%ebp),%eax
0xf67dd5cf:  mov    -0x4c(%ebp),%edi
0xf67dd5d2:  sbb    -0x54(%ebp),%edx
0xf67dd5d5:  xor    %esi,%esi
0xf67dd5d7:  mov    %eax,0x870(%edi)
0xf67dd5dd:  mov    0x528(%edi),%eax
0xf67dd5e3:  mov    %edx,0x874(%edi)
0xf67dd5e9:  test   %eax,%eax
0xf67dd5eb:  je     0xf67dd2f5

----------------
IN: 
0xf67dd2f5:  cmpb   $0x0,-0x8c(%ebp)
0xf67dd2fc:  jne    0xf67dd69d

----------------
IN: 
0xf67dd302:  mov    -0x4c(%ebp),%eax
0xf67dd305:  mov    0x82c(%eax),%edi
0xf67dd30b:  test   %edi,%edi
0xf67dd30d:  je     0xf67dd69d

----------------
IN: 
0xf67dd313:  mov    -0x4c(%ebp),%eax
0xf67dd316:  addl   $0x1,0x848(%eax)
0xf67dd31d:  mov    -0x6c(%ebp),%edi
0xf67dd320:  mov    %edi,%eax
0xf67dd322:  call   0xf67ebdb0


call [pc: f67dd327, cc: 000296a9]
----------------
IN: 
0xf67ebdb0:  push   %ebp
0xf67ebdb1:  push   %edi
0xf67ebdb2:  push   %esi
0xf67ebdb3:  push   %ebx
0xf67ebdb4:  call   0xf67f3615


call [pc: f67ebdb9, cc: f67c2b10]
----------------
IN: 
0xf67f3615:  mov    (%esp),%ebp
0xf67f3618:  ret    


ret [pc: f67ebdb9, cc: 000296a9]
----------------
IN: 
0xf67ebdb9:  add    $0x12247,%ebp
0xf67ebdbf:  sub    $0x3c,%esp
0xf67ebdc2:  test   %eax,%eax
0xf67ebdc4:  je     0xf67ec02d

----------------
IN: 
0xf67ebdca:  mov    %eax,0x28(%esp)
0xf67ebdce:  mov    0x4(%eax),%eax
0xf67ebdd1:  mov    0x82c(%ebp),%edx
0xf67ebdd7:  cmp    %edx,-0x8(%eax)
0xf67ebdda:  mov    %eax,0x24(%esp)
0xf67ebdde:  jb     0xf67ebf96

----------------
IN: 
0xf67ebde4:  mov    0x830(%ebp),%eax
0xf67ebdea:  movl   $0x0,0x10(%esp)
0xf67ebdf2:  movl   $0x0,0x2c(%esp)
0xf67ebdfa:  mov    %eax,0x18(%esp)
0xf67ebdfe:  xchg   %ax,%ax
0xf67ebe00:  mov    0x2c(%esp),%edi
0xf67ebe04:  mov    0x18(%esp),%ecx
0xf67ebe08:  test   %edi,%edi
0xf67ebe0a:  sete   %al
0xf67ebe0d:  movzbl %al,%eax
0xf67ebe10:  cmp    (%ecx),%eax
0xf67ebe12:  jae    0xf67ebf78

----------------
IN: 
0xf67ebe18:  add    %eax,%edi
0xf67ebe1a:  cmp    %edi,%edx
0xf67ebe1c:  mov    %edi,0x1c(%esp)
0xf67ebe20:  jb     0xf67ebf80

----------------
IN: 
0xf67ebe26:  lea    0x20,%ecx
0xf67ebe2c:  mov    0x18(%esp),%edi
0xf67ebe30:  mov    %eax,0x8(%esp)
0xf67ebe34:  mov    0x1c(%esp),%edx
0xf67ebe38:  mov    %ecx,0xc(%esp)
0xf67ebe3c:  mov    0x2c(%esp),%ecx
0xf67ebe40:  lea    (%edi,%eax,8),%edi
0xf67ebe43:  lea    0x1(%ecx,%eax,1),%eax
0xf67ebe47:  mov    %eax,0x20(%esp)
0xf67ebe4b:  jmp    0xf67ebe6e

----------------
IN: 
0xf67ebe6e:  mov    0xc(%edi),%eax
0xf67ebe71:  test   %eax,%eax
0xf67ebe73:  je     0xf67ebf14

----------------
IN: 
0xf67ebe79:  mov    0xc(%esp),%ebx
0xf67ebe7d:  mov    0x8(%edi),%ecx
0xf67ebe80:  cmp    0x828(%ebx,%ebp,1),%ecx
0xf67ebe87:  ja     0xf67ebfb1

----------------
IN: 
0xf67ebe8d:  mov    0x10(%esp),%esi
0xf67ebe91:  mov    0x244(%eax),%ebx
0xf67ebe97:  cmp    %ecx,%esi
0xf67ebe99:  cmovae %esi,%ecx
0xf67ebe9c:  mov    0x24(%esp),%esi
0xf67ebea0:  mov    %ecx,0x10(%esp)
0xf67ebea4:  lea    (%esi,%ebx,8),%ecx
0xf67ebea7:  movl   $0xffffffff,(%ecx)
0xf67ebead:  movb   $0x0,0x4(%ecx)
0xf67ebeb1:  mov    0x240(%eax),%ecx
0xf67ebeb7:  lea    0x1(%ecx),%esi
0xf67ebeba:  cmp    $0x1,%esi
0xf67ebebd:  jbe    0xf67ebf14

----------------
IN: 
0xf67ebebf:  cmp    %edx,%ebx
0xf67ebec1:  jne    0xf67ec00e

----------------
IN: 
0xf67ebec7:  mov    0x234(%eax),%esi
0xf67ebecd:  mov    0x230(%eax),%ebx
0xf67ebed3:  cmp    %ebx,%esi
0xf67ebed5:  jb     0xf67ebfd0

----------------
IN: 
0xf67ebedb:  cmp    %esi,%ecx
0xf67ebedd:  jb     0xf67ebfef

----------------
IN: 
0xf67ebee3:  mov    %edx,0x14(%esp)
0xf67ebee7:  sub    $0x4,%esp
0xf67ebeea:  sub    %ebx,%esi
0xf67ebeec:  push   %ebx
0xf67ebeed:  pushl  0x22c(%eax)
0xf67ebef3:  mov    %ebp,%ebx
0xf67ebef5:  mov    0x34(%esp),%eax
0xf67ebef9:  sub    %ecx,%eax
0xf67ebefb:  push   %eax
0xf67ebefc:  call   0xf67f33e0


call [pc: f67ebf01, cc: f67c29a8]

ret [pc: f67ebf01, cc: 000296a9]
----------------
IN: 
0xf67ebf01:  add    $0xc,%esp
0xf67ebf04:  push   %esi
0xf67ebf05:  push   $0x0
0xf67ebf07:  push   %eax
0xf67ebf08:  call   0xf67f3390


call [pc: f67ebf0d, cc: f67c29a4]

ret [pc: f67ebf0d, cc: 000296a9]
----------------
IN: 
0xf67ebf0d:  add    $0x10,%esp
0xf67ebf10:  mov    0x14(%esp),%edx
0xf67ebf14:  mov    0x18(%esp),%ebx
0xf67ebf18:  addl   $0x1,0x8(%esp)
0xf67ebf1d:  mov    0x8(%esp),%eax
0xf67ebf21:  cmp    %eax,(%ebx)
0xf67ebf23:  ja     0xf67ebe50

----------------
IN: 
0xf67ebe50:  mov    0x20(%esp),%eax
0xf67ebe54:  sub    0x1c(%esp),%eax
0xf67ebe58:  add    $0x8,%edi
0xf67ebe5b:  add    %eax,%edx
0xf67ebe5d:  mov    0xc(%esp),%eax
0xf67ebe61:  cmp    %edx,0x80c(%eax,%ebp,1)
0xf67ebe68:  jb     0xf67ebf80

----------------
IN: 
0xf67ebf80:  mov    0x24(%esp),%eax
0xf67ebf84:  mov    0x10(%esp),%edi
0xf67ebf88:  mov    %edi,(%eax)
0xf67ebf8a:  mov    0x28(%esp),%eax
0xf67ebf8e:  add    $0x3c,%esp
0xf67ebf91:  pop    %ebx
0xf67ebf92:  pop    %esi
0xf67ebf93:  pop    %edi
0xf67ebf94:  pop    %ebp
0xf67ebf95:  ret    


ret [pc: f67dd327, cc: f67f458e]
----------------
IN: 
0xf67dd327:  mov    -0x4c(%ebp),%edx
0xf67dd32a:  cmpb   $0x0,0x868(%edx)
0xf67dd331:  jne    0xf67dd379

----------------
IN: 
0xf67dd379:  mov    -0x4c(%ebp),%eax
0xf67dd37c:  mov    0x534(%eax),%edx
0xf67dd382:  cmp    %edx,-0x138(%eax)
0xf67dd388:  jne    0xf67dd4ae

----------------
IN: 
0xf67dd38e:  mov    %esi,%ecx
0xf67dd390:  cmp    %cl,-0x78(%ebp)
0xf67dd393:  jbe    0xf67dd3db

----------------
IN: 
0xf67dd395:  rdtsc  
0xf67dd397:  mov    -0x4c(%ebp),%ebx
0xf67dd39a:  mov    %eax,%esi
0xf67dd39c:  mov    -0x50(%ebp),%eax
0xf67dd39f:  mov    %edx,%edi
0xf67dd3a1:  andb   $0xfb,0x6d0(%ebx)
0xf67dd3a8:  push   $0x0
0xf67dd3aa:  push   $0x0
0xf67dd3ac:  pushl  0x1cc(%eax)
0xf67dd3b2:  pushl  -0x5c(%ebp)
0xf67dd3b5:  call   0xf67e4fa0


call [pc: f67dd3ba, cc: 00029634]

call [pc: f67e4fa6, cc: f67cd992]

ret [pc: f67e4fa6, cc: 00029634]
----------------
IN: 
0xf67e5067:  xor    %eax,%eax
0xf67e5069:  movl   $0x0,-0x38(%ebp,%eax,1)
0xf67e5071:  add    $0x4,%eax
0xf67e5074:  cmp    $0x20,%eax
0xf67e5077:  jb     0xf67e5069

----------------
IN: 
0xf67e5ab1:  cmp    %eax,%edx
0xf67e5ab3:  je     0xf67e66f6

----------------
IN: 
0xf67e66f6:  add    %ecx,%esi
0xf67e66f8:  mov    %esi,-0x34(%ebp)
0xf67e66fb:  jmp    0xf67e50bc


call [pc: f67e57c9, cc: f67cc1fd]

call [pc: f67e3970, cc: 0002f88d]

ret [pc: f67e3970, cc: f67cc1fd]

call [pc: f67e3a4b, cc: 0002fbb6]

call [pc: f67e2ec9, cc: f67cd57f]

ret [pc: f67e2ec9, cc: 0002fbb6]

call [pc: f67e353d, cc: f67cce8b]

call [pc: f67e2d39, cc: 0002e3b2]

ret [pc: f67e2d39, cc: f67cce8b]

call [pc: f67e2e60, cc: 0002e0eb]

ret [pc: f67e2e60, cc: f67cce8b]

ret [pc: f67e353d, cc: 0002fbb6]

ret [pc: f67e3a4b, cc: f67cc1fd]

ret [pc: f67e57c9, cc: 00029634]

call [pc: f67e57c9, cc: f67cc1fd]

call [pc: f67e3970, cc: 0002f88d]

ret [pc: f67e3970, cc: f67cc1fd]

call [pc: f67e3a4b, cc: 0002fbb6]

call [pc: f67e2ec9, cc: f67cd57f]

ret [pc: f67e2ec9, cc: 0002fbb6]

call [pc: f67e353d, cc: f67cce8b]

call [pc: f67e2d39, cc: 0002e3b2]

ret [pc: f67e2d39, cc: f67cce8b]

call [pc: f67e2da0, cc: 0002e32b]

ret [pc: f67e2da0, cc: f67cce8b]

call [pc: f67e2e60, cc: 0002e0eb]

ret [pc: f67e2e60, cc: f67cce8b]

ret [pc: f67e353d, cc: 0002fbb6]

ret [pc: f67e3a4b, cc: f67cc1fd]

ret [pc: f67e57c9, cc: 00029634]
----------------
IN: 
0xf67e59f0:  cmp    $0x5,%esi
0xf67e59f3:  mov    $0x1,%edi
0xf67e59f8:  jne    0xf67e5775


call [pc: f67e57c9, cc: f67cc1fd]

call [pc: f67e3970, cc: 0002f88d]

ret [pc: f67e3970, cc: f67cc1fd]

call [pc: f67e3a4b, cc: 0002fbb6]

call [pc: f67e2ec9, cc: f67cd57f]

ret [pc: f67e2ec9, cc: 0002fbb6]

call [pc: f67e353d, cc: f67cce8b]

call [pc: f67e2d39, cc: 0002e3b2]

ret [pc: f67e2d39, cc: f67cce8b]

call [pc: f67e2da0, cc: 0002e32b]

ret [pc: f67e2da0, cc: f67cce8b]

call [pc: f67e2e60, cc: 0002e0eb]

ret [pc: f67e2e60, cc: f67cce8b]

ret [pc: f67e353d, cc: 0002fbb6]

ret [pc: f67e3a4b, cc: f67cc1fd]

ret [pc: f67e57c9, cc: 00029634]

call [pc: f67e57c9, cc: f67cc1fd]

call [pc: f67e3970, cc: 0002f88d]

ret [pc: f67e3970, cc: f67cc1fd]

call [pc: f67e3a4b, cc: 0002fbb6]

call [pc: f67e2ec9, cc: f67cd57f]

ret [pc: f67e2ec9, cc: 0002fbb6]

call [pc: f67e353d, cc: f67cce8b]

call [pc: f67e2d39, cc: 0002e3b2]

ret [pc: f67e2d39, cc: f67cce8b]

call [pc: f67e2da0, cc: 0002e32b]

ret [pc: f67e2da0, cc: f67cce8b]

call [pc: f67e2e60, cc: 0002e0eb]

ret [pc: f67e2e60, cc: f67cce8b]

ret [pc: f67e353d, cc: 0002fbb6]

ret [pc: f67e3a4b, cc: f67cc1fd]

ret [pc: f67e57c9, cc: 00029634]

call [pc: f67e57c9, cc: f67cc1fd]

call [pc: f67e3970, cc: 0002f88d]

ret [pc: f67e3970, cc: f67cc1fd]

call [pc: f67e3a4b, cc: 0002fbb6]

call [pc: f67e2ec9, cc: f67cd57f]

ret [pc: f67e2ec9, cc: 0002fbb6]

call [pc: f67e353d, cc: f67cce8b]

call [pc: f67e2d39, cc: 0002e3b2]

ret [pc: f67e2d39, cc: f67cce8b]

call [pc: f67e2da0, cc: 0002e32b]

ret [pc: f67e2da0, cc: f67cce8b]

call [pc: f67e2e60, cc: 0002e0eb]

ret [pc: f67e2e60, cc: f67cce8b]

ret [pc: f67e353d, cc: 0002fbb6]

ret [pc: f67e3a4b, cc: f67cc1fd]

ret [pc: f67e57c9, cc: 00029634]

call [pc: f67e57c9, cc: f67cc1fd]

call [pc: f67e3970, cc: 0002f88d]

ret [pc: f67e3970, cc: f67cc1fd]

call [pc: f67e3a4b, cc: 0002fbb6]

call [pc: f67e2ec9, cc: f67cd57f]

ret [pc: f67e2ec9, cc: 0002fbb6]

call [pc: f67e353d, cc: f67cce8b]

call [pc: f67e2d39, cc: 0002e3b2]

ret [pc: f67e2d39, cc: f67cce8b]

call [pc: f67e2da0, cc: 0002e32b]

ret [pc: f67e2da0, cc: f67cce8b]

call [pc: f67e2e60, cc: 0002e0eb]

ret [pc: f67e2e60, cc: f67cce8b]

ret [pc: f67e353d, cc: 0002fbb6]

ret [pc: f67e3a4b, cc: f67cc1fd]

ret [pc: f67e57c9, cc: 00029634]

call [pc: f67e5491, cc: f67cc2a5]

call [pc: f67e4ed8, cc: 00028c7d]

ret [pc: f67e4ed8, cc: f67cc2a5]

call [pc: f67e4f17, cc: 00028db2]

ret [pc: f67e4f17, cc: f67cc2a5]

ret [pc: f67e5491, cc: 00029634]

ret [pc: f67dd3ba, cc: f67f458e]
----------------
IN: 
0xf67dd3ba:  rdtsc  
0xf67dd3bc:  add    0x870(%ebx),%eax
0xf67dd3c2:  adc    0x874(%ebx),%edx
0xf67dd3c8:  sub    %esi,%eax
0xf67dd3ca:  sbb    %edi,%edx
0xf67dd3cc:  mov    %eax,0x870(%ebx)
0xf67dd3d2:  add    $0x10,%esp
0xf67dd3d5:  mov    %edx,0x874(%ebx)
0xf67dd3db:  call   0xf67f0900


call [pc: f67dd3e0, cc: 0002966e]
----------------
IN: 
0xf67f0900:  repz ret 


ret [pc: f67dd3e0, cc: f67f458e]
----------------
IN: 
0xf67dd3e0:  mov    -0x4c(%ebp),%eax
0xf67dd3e3:  mov    -0xf4(%eax),%ebx
0xf67dd3e9:  test   %ebx,%ebx
0xf67dd3eb:  jne    0xf67dd6b3

----------------
IN: 
0xf67dd3f1:  xor    %edx,%edx
0xf67dd3f3:  xor    %eax,%eax
0xf67dd3f5:  call   0xf67e9b60


call [pc: f67dd3fa, cc: 00029674]

call [pc: f67e9b66, cc: f67c0d12]

ret [pc: f67e9b66, cc: 00029674]

ret [pc: f67dd3fa, cc: f67f458e]
----------------
IN: 
0xf67dd3fa:  movl   $0x0,0xc(%eax)
0xf67dd401:  mov    %eax,%ebx
0xf67dd403:  call   0xf67e9b50


call [pc: f67dd408, cc: 00029186]

ret [pc: f67dd408, cc: f67f458e]
----------------
IN: 
0xf67dd408:  nop    
0xf67dd409:  call   0xf67ef770


call [pc: f67dd40e, cc: 00029180]
----------------
IN: 
0xf67ef770:  push   %ebx
0xf67ef771:  call   0xf67f3609


call [pc: f67ef776, cc: f67c66f6]

ret [pc: f67ef776, cc: 00029180]
----------------
IN: 
0xf67ef776:  add    $0xe88a,%ebx
0xf67ef77c:  sub    $0x8,%esp
0xf67ef77f:  mov    0x8d4(%ebx),%eax
0xf67ef785:  lea    -0x1(%eax),%edx
0xf67ef788:  cmp    $0xfffffffd,%edx
0xf67ef78b:  ja     0xf67ef7a9

----------------
IN: 
0xf67ef78d:  sub    $0x8,%esp
0xf67ef790:  pushl  0x8cc(%ebx)
0xf67ef796:  push   %eax
0xf67ef797:  call   0xf67f28c0


call [pc: f67ef79c, cc: f67c661c]
----------------
IN: 
0xf67f28c0:  mov    %ebx,%edx
0xf67f28c2:  mov    0x8(%esp),%ecx
0xf67f28c6:  mov    0x4(%esp),%ebx
0xf67f28ca:  mov    $0x5b,%eax
0xf67f28cf:  int    $0x80

----------------
IN: 
0xf67f28d1:  mov    %edx,%ebx
0xf67f28d3:  cmp    $0xfffff001,%eax
0xf67f28d8:  jae    0xf67f1de0

----------------
IN: 
0xf67f28de:  ret    


ret [pc: f67ef79c, cc: 00029180]
----------------
IN: 
0xf67ef79c:  movl   $0x0,0x8d4(%ebx)
0xf67ef7a6:  add    $0x10,%esp
0xf67ef7a9:  add    $0x8,%esp
0xf67ef7ac:  pop    %ebx
0xf67ef7ad:  ret    


ret [pc: f67dd40e, cc: f67f458e]
----------------
IN: 
0xf67dd40e:  lea    -0xc(%ebp),%esp
0xf67dd411:  pop    %ebx
0xf67dd412:  pop    %esi
0xf67dd413:  pop    %edi
0xf67dd414:  pop    %ebp
0xf67dd415:  ret    


ret [pc: f67f056b, cc: 000040e5]
----------------
IN: 
0xf67f056b:  mov    0x5c(%esp),%eax
0xf67f056f:  add    $0x6c,%esp
0xf67f0572:  pop    %ebx
0xf67f0573:  pop    %esi
0xf67f0574:  pop    %edi
0xf67f0575:  pop    %ebp
0xf67f0576:  ret    


ret [pc: f67dea22, cc: f67daac7]
----------------
IN: 
0xf67dea22:  mov    %eax,%esi
0xf67dea24:  rdtsc  
0xf67dea26:  sub    -0x320(%ebx),%eax
0xf67dea2c:  sbb    -0x31c(%ebx),%edx
0xf67dea32:  add    $0x10,%esp
0xf67dea35:  testb  $0x80,-0x300(%ebx)
0xf67dea3c:  mov    %eax,-0x20(%ebp)
0xf67dea3f:  mov    %edx,-0x1c(%ebp)
0xf67dea42:  jne    0xf67dec93

----------------
IN: 
0xf67dea48:  lea    -0xc(%ebp),%esp
0xf67dea4b:  mov    %esi,%eax
0xf67dea4d:  pop    %ebx
0xf67dea4e:  pop    %esi
0xf67dea4f:  pop    %edi
0xf67dea50:  pop    %ebp
0xf67dea51:  ret    


ret [pc: f67daac7, cc: 00000000]
----------------
IN: 
0xf67daac7:  mov    %eax,%edi
0xf67daac9:  call   0xf67daab0


call [pc: f67daace, cc: f67daace]
----------------
IN: 
0xf67daab0:  mov    (%esp),%ebx
0xf67daab3:  ret    


ret [pc: f67daace, cc: 00000000]
----------------
IN: 
0xf67daace:  add    $0x23532,%ebx
0xf67daad4:  mov    -0x30c(%ebx),%eax
0xf67daada:  pop    %edx
0xf67daadb:  lea    (%esp,%eax,4),%esp
0xf67daade:  sub    %eax,%edx
0xf67daae0:  push   %edx
0xf67daae1:  mov    0x20(%ebx),%eax
0xf67daae7:  lea    0x8(%esp,%edx,4),%esi
0xf67daaeb:  lea    0x4(%esp),%ecx
0xf67daaef:  mov    %esp,%ebp
0xf67daaf1:  and    $0xfffffff0,%esp
0xf67daaf4:  push   %eax
0xf67daaf5:  push   %eax
0xf67daaf6:  push   %ebp
0xf67daaf7:  push   %esi
0xf67daaf8:  xor    %ebp,%ebp
0xf67daafa:  call   0xf67e93f0


call [pc: f67daaff, cc: f67daaff]
----------------
IN: 
0xf67e93f0:  push   %ebp
0xf67e93f1:  push   %edi
0xf67e93f2:  mov    %eax,%edi
0xf67e93f4:  push   %esi
0xf67e93f5:  push   %ebx
0xf67e93f6:  mov    %ecx,%ebp
0xf67e93f8:  call   0xf67f360d


call [pc: f67e93fd, cc: 00033902]

ret [pc: f67e93fd, cc: f67daaff]
----------------
IN: 
0xf67e93fd:  add    $0x14c03,%esi
0xf67e9403:  sub    $0x1c,%esp
0xf67e9406:  mov    0xa0(%eax),%ebx
0xf67e940c:  mov    0xa4(%eax),%eax
0xf67e9412:  mov    %edx,0x4(%esp)
0xf67e9416:  mov    %eax,0x8(%esp)
0xf67e941a:  mov    0x51c(%esi),%eax
0xf67e9420:  test   %eax,%eax
0xf67e9422:  jne    0xf67e94a2

----------------
IN: 
0xf67e9424:  test   %ebx,%ebx
0xf67e9426:  je     0xf67e9448

----------------
IN: 
0xf67e9448:  mov    0x160(%edi),%ebx
0xf67e944e:  lea    -0x4(,%ebx,4),%esi
0xf67e9455:  jmp    0xf67e9466

----------------
IN: 
0xf67e9466:  test   %ebx,%ebx
0xf67e9468:  je     0xf67e9498

----------------
IN: 
0xf67e946a:  mov    0x1f0(%edi),%eax
0xf67e9470:  mov    (%eax,%esi,1),%eax
0xf67e9473:  testb  $0x8,0x194(%eax)
0xf67e947a:  jne    0xf67e9460

----------------
IN: 
0xf67e947c:  sub    $0xc,%esp
0xf67e947f:  mov    %ebp,%ecx
0xf67e9481:  pushl  0x3c(%esp)
0xf67e9485:  mov    0x14(%esp),%edx
0xf67e9489:  call   0xf67e92c0


call [pc: f67e948e, cc: 00033e71]
----------------
IN: 
0xf67e92c0:  push   %ebp
0xf67e92c1:  push   %edi
0xf67e92c2:  push   %esi
0xf67e92c3:  push   %ebx
0xf67e92c4:  mov    %edx,%ebx
0xf67e92c6:  call   0xf67f3611


call [pc: f67e92cb, cc: f67dacba]

ret [pc: f67e92cb, cc: 00033e71]
----------------
IN: 
0xf67e92cb:  add    $0x14d35,%edi
0xf67e92d1:  sub    $0x1c,%esp
0xf67e92d4:  movzbl 0x194(%eax),%ebp
0xf67e92db:  or     $0x8,%ebp
0xf67e92de:  mov    %ebp,%edx
0xf67e92e0:  mov    %dl,0x194(%eax)
0xf67e92e6:  mov    0x4(%eax),%edx
0xf67e92e9:  mov    %edx,0xc(%esp)
0xf67e92ed:  movzbl (%edx),%edx
0xf67e92f0:  test   %dl,%dl
0xf67e92f2:  je     0xf67e93d0

----------------
IN: 
0xf67e92f8:  mov    %eax,%ebp
0xf67e92fa:  mov    0x50(%eax),%eax
0xf67e92fd:  mov    %ecx,%esi
0xf67e92ff:  test   %eax,%eax
0xf67e9301:  je     0xf67e9380

----------------
IN: 
0xf67e9380:  mov    0x84(%ebp),%eax
0xf67e9386:  test   %eax,%eax
0xf67e9388:  je     0xf67e9371

----------------
IN: 
0xf67e9371:  add    $0x1c,%esp
0xf67e9374:  pop    %ebx
0xf67e9375:  pop    %esi
0xf67e9376:  pop    %edi
0xf67e9377:  pop    %ebp
0xf67e9378:  ret    


ret [pc: f67e948e, cc: f67daaff]
----------------
IN: 
0xf67e948e:  add    $0x10,%esp
0xf67e9491:  jmp    0xf67e9460

----------------
IN: 
0xf67e9460:  sub    $0x1,%ebx
0xf67e9463:  sub    $0x4,%esi
0xf67e9466:  test   %ebx,%ebx
0xf67e9468:  je     0xf67e9498


call [pc: f67e948e, cc: 00033e71]

call [pc: f67e92cb, cc: f67dacba]

ret [pc: f67e92cb, cc: 00033e71]
----------------
IN: 
0xf67e9303:  testb  $0x2,-0x300(%edi)
0xf67e930a:  jne    0xf67e9398

----------------
IN: 
0xf67e9310:  sub    $0x4,%esp
0xf67e9313:  mov    0x4(%eax),%eax
0xf67e9316:  add    0x0(%ebp),%eax
0xf67e9319:  pushl  0x34(%esp)
0xf67e931d:  push   %esi
0xf67e931e:  push   %ebx
0xf67e931f:  call   *%eax


call [pc: f67e9321, cc: f67dad50]
----------------
IN: 
0xf66133b0:  push   %ebp
0xf66133b1:  push   %edi
0xf66133b2:  push   %esi
0xf66133b3:  push   %ebx
0xf66133b4:  call   0xf671a995


call [pc: f66133b9, cc: 001c9ee9]
----------------
IN: 
0xf671a995:  mov    (%esp),%ebx
0xf671a998:  ret    


ret [pc: f66133b9, cc: f67dad50]
----------------
IN: 
0xf66133b9:  add    $0x199c47,%ebx
0xf66133bf:  sub    $0x1c,%esp
0xf66133c2:  mov    -0x6c(%ebx),%eax
0xf66133c8:  mov    0x34(%esp),%esi
0xf66133cc:  mov    0x38(%esp),%edi
0xf66133d0:  test   %eax,%eax
0xf66133d2:  je     0xf66134d8

----------------
IN: 
0xf66134d8:  mov    -0x34(%ebx),%eax
0xf66134de:  mov    -0xdc(%ebx),%edx
0xf66134e4:  movl   $0x0,0x40(%ebx)
0xf66134ee:  movzwl (%eax),%eax
0xf66134f1:  cmp    %ax,0x38(%edx)
0xf66134f5:  je     0xf66133ec

----------------
IN: 
0xf66133ec:  mov    0x30(%esp),%eax
0xf66133f0:  mov    %esi,0x35f0(%ebx)
0xf66133f6:  xor    %edx,%edx
0xf66133f8:  movl   $0x1,0x8(%esp)
0xf6613400:  movl   $0x3ae75f6,0x4(%esp)
0xf6613408:  mov    %eax,0x35f4(%ebx)
0xf661340e:  mov    -0xb8(%ebx),%eax
0xf6613414:  mov    %edi,(%eax)
0xf6613416:  lea    -0x56f48(%ebx),%eax
0xf661341c:  mov    %eax,(%esp)
0xf661341f:  movzbl (%eax),%ecx
0xf6613422:  test   %ecx,%ecx
0xf6613424:  je     0xf661347b

----------------
IN: 
0xf6613426:  mov    %ecx,%edx
0xf6613428:  movzbl 0x1(%eax),%ecx
0xf661342c:  jecxz  0xf661347b

----------------
IN: 
0xf661342e:  shl    $0x4,%edx
0xf6613431:  add    %ecx,%edx
0xf6613433:  movzbl 0x2(%eax),%ecx
0xf6613437:  jecxz  0xf661347b

----------------
IN: 
0xf6613439:  shl    $0x4,%edx
0xf661343c:  add    %ecx,%edx
0xf661343e:  movzbl 0x3(%eax),%ecx
0xf6613442:  jecxz  0xf661347b

----------------
IN: 
0xf6613444:  shl    $0x4,%edx
0xf6613447:  add    %ecx,%edx
0xf6613449:  movzbl 0x4(%eax),%ecx
0xf661344d:  jecxz  0xf661347b

----------------
IN: 
0xf661344f:  shl    $0x4,%edx
0xf6613452:  add    $0x5,%eax
0xf6613455:  add    %ecx,%edx
0xf6613457:  movzbl (%eax),%ecx
0xf661345a:  jecxz  0xf661347b

----------------
IN: 
0xf661345c:  shl    $0x4,%edx
0xf661345f:  mov    $0xf0000000,%ebp
0xf6613464:  inc    %eax
0xf6613465:  add    %ecx,%edx
0xf6613467:  and    %edx,%ebp
0xf6613469:  and    $0xfffffff,%edx
0xf661346f:  shr    $0x18,%ebp
0xf6613472:  movzbl (%eax),%ecx
0xf6613475:  xor    %ebp,%edx
0xf6613477:  test   %ecx,%ecx
0xf6613479:  jne    0xf661345c

----------------
IN: 
0xf661347b:  cmp    $0x3ae75f6,%edx
0xf6613481:  jne    0xf661350c

----------------
IN: 
0xf6613487:  lea    -0x56f3e(%ebx),%eax
0xf661348d:  mov    %esp,%edx
0xf661348f:  movl   $0x0,0xc(%esp)
0xf6613497:  call   0xf6719ce0


call [pc: f661349c, cc: 001c99cc]
----------------
IN: 
0xf6719ce0:  push   %esi
0xf6719ce1:  push   %ebx
0xf6719ce2:  call   0xf671a9ad


call [pc: f6719ce7, cc: f66d052b]
----------------
IN: 
0xf671a9ad:  mov    (%esp),%ecx
0xf671a9b0:  ret    


ret [pc: f6719ce7, cc: 001c99cc]
----------------
IN: 
0xf6719ce7:  add    $0x93319,%ecx
0xf6719ced:  sub    $0x24,%esp
0xf6719cf0:  mov    -0xdc(%ecx),%esi
0xf6719cf6:  mov    0x1d4(%esi),%ebx
0xf6719cfc:  test   %ebx,%ebx
0xf6719cfe:  je     0xf6719d68

----------------
IN: 
0xf6719d68:  add    $0x24,%esp
0xf6719d6b:  xor    %eax,%eax
0xf6719d6d:  pop    %ebx
0xf6719d6e:  pop    %esi
0xf6719d6f:  ret    


ret [pc: f661349c, cc: f67dad50]
----------------
IN: 
0xf661349c:  lea    -0x199c80(%ebx),%edx
0xf66134a2:  test   %eax,%eax
0xf66134a4:  cmove  %edx,%eax
0xf66134a7:  sub    $0x4,%esp
0xf66134aa:  push   %edi
0xf66134ab:  push   %esi
0xf66134ac:  pushl  0x3c(%esp)
0xf66134b0:  xor    %gs:0x18,%eax
0xf66134b7:  rol    $0x9,%eax
0xf66134ba:  mov    %eax,0x35ec(%ebx)
0xf66134c0:  call   0xf66e1d30


call [pc: f66134c5, cc: 001c9995]
----------------
IN: 
0xf66e1d30:  push   %edi
0xf66e1d31:  push   %esi
0xf66e1d32:  push   %ebx
0xf66e1d33:  mov    0x14(%esp),%ebx
0xf66e1d37:  call   0xf671a9a5


call [pc: f66e1d3c, cc: f67284a9]
----------------
IN: 
0xf671a9a5:  mov    (%esp),%edi
0xf671a9a8:  ret    


ret [pc: f66e1d3c, cc: 001c9995]
----------------
IN: 
0xf66e1d3c:  add    $0xcb2c4,%edi
0xf66e1d42:  test   %ebx,%ebx
0xf66e1d44:  je     0xf66e1d73

----------------
IN: 
0xf66e1d46:  mov    (%ebx),%esi
0xf66e1d48:  test   %esi,%esi
0xf66e1d4a:  je     0xf66e1d73

----------------
IN: 
0xf66e1d4c:  sub    $0x8,%esp
0xf66e1d4f:  push   $0x2f
0xf66e1d51:  push   %esi
0xf66e1d52:  call   0xf6670670


call [pc: f66e1d57, cc: f67284c2]
----------------
IN: 
0xf6670670:  push   %edi
0xf6670671:  push   %esi
0xf6670672:  xor    %eax,%eax
0xf6670674:  mov    0xc(%esp),%esi
0xf6670678:  mov    0x10(%esp),%ecx
0xf667067c:  mov    %cl,%ch
0xf667067e:  mov    %ecx,%edx
0xf6670680:  shl    $0x10,%ecx
0xf6670683:  mov    %dx,%cx
0xf6670686:  test   $0x3,%esi
0xf667068c:  je     0xf6670713

----------------
IN: 
0xf6670692:  mov    (%esi),%dl
0xf6670694:  cmp    %dl,%cl
0xf6670696:  jne    0xf667069a

----------------
IN: 
0xf6670698:  mov    %esi,%eax
0xf667069a:  or     %dl,%dl
0xf667069c:  je     0xf6670826

----------------
IN: 
0xf66706a2:  inc    %esi
0xf66706a3:  test   $0x3,%esi
0xf66706a9:  je     0xf6670713

----------------
IN: 
0xf6670713:  mov    (%esi),%edx
0xf6670715:  mov    $0xfefefeff,%edi
0xf667071a:  add    %edx,%edi
0xf667071c:  jae    0xf66707fc

----------------
IN: 
0xf6670722:  xor    %edx,%edi
0xf6670724:  or     $0xfefefeff,%edi
0xf667072a:  inc    %edi
0xf667072b:  jne    0xf66707fc

----------------
IN: 
0xf6670731:  xor    %ecx,%edx
0xf6670733:  mov    $0xfefefeff,%edi
0xf6670738:  add    %edx,%edi
0xf667073a:  jae    0xf66706da

----------------
IN: 
0xf667073c:  xor    %edx,%edi
0xf667073e:  or     $0xfefefeff,%edi
0xf6670744:  inc    %edi
0xf6670745:  jne    0xf66706f0

----------------
IN: 
0xf6670747:  mov    0x4(%esi),%edx
0xf667074a:  mov    $0xfefefeff,%edi
0xf667074f:  add    %edx,%edi
0xf6670751:  jae    0xf66707f9

----------------
IN: 
0xf6670757:  xor    %edx,%edi
0xf6670759:  or     $0xfefefeff,%edi
0xf667075f:  inc    %edi
0xf6670760:  jne    0xf66707f9

----------------
IN: 
0xf6670766:  xor    %ecx,%edx
0xf6670768:  mov    $0xfefefeff,%edi
0xf667076d:  add    %edx,%edi
0xf667076f:  jae    0xf66706dd

----------------
IN: 
0xf6670775:  xor    %edx,%edi
0xf6670777:  or     $0xfefefeff,%edi
0xf667077d:  inc    %edi
0xf667077e:  jne    0xf66706f3

----------------
IN: 
0xf66706f3:  sub    $0x4,%esi
0xf66706f6:  sub    $0x4,%esi
0xf66706f9:  test   $0xff0000,%edx
0xf66706ff:  jne    0xf6670706

----------------
IN: 
0xf6670706:  lea    0xc(%esi),%eax
0xf6670709:  test   %dh,%dh
0xf667070b:  jne    0xf6670710

----------------
IN: 
0xf6670710:  add    $0x10,%esi
0xf6670713:  mov    (%esi),%edx
0xf6670715:  mov    $0xfefefeff,%edi
0xf667071a:  add    %edx,%edi
0xf667071c:  jae    0xf66707fc

----------------
IN: 
0xf66706f0:  sub    $0x4,%esi
0xf66706f3:  sub    $0x4,%esi
0xf66706f6:  sub    $0x4,%esi
0xf66706f9:  test   $0xff0000,%edx
0xf66706ff:  jne    0xf6670706

----------------
IN: 
0xf6670701:  lea    0xe(%esi),%eax
0xf6670704:  jmp    0xf6670710

----------------
IN: 
0xf66706da:  sub    $0x4,%esi
0xf66706dd:  sub    $0x4,%esi
0xf66706e0:  sub    $0x4,%esi
0xf66706e3:  test   $0xff000000,%edx
0xf66706e9:  jne    0xf66706f9

----------------
IN: 
0xf66706eb:  lea    0xf(%esi),%eax
0xf66706ee:  jmp    0xf6670710

----------------
IN: 
0xf6670784:  mov    0x8(%esi),%edx
0xf6670787:  mov    $0xfefefeff,%edi
0xf667078c:  add    %edx,%edi
0xf667078e:  jae    0xf66707f6

----------------
IN: 
0xf6670790:  xor    %edx,%edi
0xf6670792:  or     $0xfefefeff,%edi
0xf6670798:  inc    %edi
0xf6670799:  jne    0xf66707f6

----------------
IN: 
0xf667079b:  xor    %ecx,%edx
0xf667079d:  mov    $0xfefefeff,%edi
0xf66707a2:  add    %edx,%edi
0xf66707a4:  jae    0xf66706e0

----------------
IN: 
0xf66707aa:  xor    %edx,%edi
0xf66707ac:  or     $0xfefefeff,%edi
0xf66707b2:  inc    %edi
0xf66707b3:  jne    0xf66706f6

----------------
IN: 
0xf66706f6:  sub    $0x4,%esi
0xf66706f9:  test   $0xff0000,%edx
0xf66706ff:  jne    0xf6670706

----------------
IN: 
0xf66707f6:  add    $0x4,%esi
0xf66707f9:  add    $0x4,%esi
0xf66707fc:  cmp    %cl,%dl
0xf66707fe:  jne    0xf6670802

----------------
IN: 
0xf6670802:  test   %dl,%dl
0xf6670804:  je     0xf6670826

----------------
IN: 
0xf6670806:  cmp    %cl,%dh
0xf6670808:  jne    0xf667080d

----------------
IN: 
0xf667080d:  test   %dh,%dh
0xf667080f:  je     0xf6670826

----------------
IN: 
0xf6670811:  shr    $0x10,%edx
0xf6670814:  cmp    %cl,%dl
0xf6670816:  jne    0xf667081b

----------------
IN: 
0xf667081b:  test   %dl,%dl
0xf667081d:  je     0xf6670826

----------------
IN: 
0xf667081f:  cmp    %cl,%dh
0xf6670821:  jne    0xf6670826

----------------
IN: 
0xf6670826:  pop    %esi
0xf6670827:  pop    %edi
0xf6670828:  ret    


ret [pc: f66e1d57, cc: 001c9995]
----------------
IN: 
0xf66e1d57:  add    $0x10,%esp
0xf66e1d5a:  test   %eax,%eax
0xf66e1d5c:  je     0xf66e1d80

----------------
IN: 
0xf66e1d5e:  mov    -0x114(%edi),%edx
0xf66e1d64:  add    $0x1,%eax
0xf66e1d67:  mov    %eax,(%edx)
0xf66e1d69:  mov    (%ebx),%edx
0xf66e1d6b:  mov    -0x124(%edi),%eax
0xf66e1d71:  mov    %edx,(%eax)
0xf66e1d73:  pop    %ebx
0xf66e1d74:  pop    %esi
0xf66e1d75:  pop    %edi
0xf66e1d76:  ret    


ret [pc: f66134c5, cc: f67dad50]
----------------
IN: 
0xf66134c5:  call   0xf6620380


call [pc: f66134ca, cc: 001c999a]
----------------
IN: 
0xf6620380:  call   0xf671a99d


call [pc: f6620385, cc: f67e9a1f]

ret [pc: f6620385, cc: 001c999a]
----------------
IN: 
0xf6620385:  add    $0x18cc7b,%edx
0xf662038b:  mov    %gs:0x0,%eax
0xf6620391:  push   %esi
0xf6620392:  mov    -0x130(%edx),%ecx
0xf6620398:  push   %ebx
0xf6620399:  mov    -0x10c(%edx),%ebx
0xf662039f:  mov    (%eax,%ecx,1),%ecx
0xf66203a2:  mov    %ebx,%esi
0xf66203a4:  mov    (%ecx),%ecx
0xf66203a6:  mov    0x24(%ecx),%ebx
0xf66203a9:  add    $0x100,%ebx
0xf66203af:  mov    %ebx,(%eax,%esi,1)
0xf66203b2:  mov    0x28(%ecx),%ebx
0xf66203b5:  mov    -0xa4(%edx),%esi
0xf66203bb:  add    $0x200,%ebx
0xf66203c1:  mov    %ebx,(%eax,%esi,1)
0xf66203c4:  mov    -0x78(%edx),%ebx
0xf66203ca:  mov    0x30(%ecx),%edx
0xf66203cd:  add    $0x200,%edx
0xf66203d3:  mov    %edx,(%eax,%ebx,1)
0xf66203d6:  pop    %ebx
0xf66203d7:  pop    %esi
0xf66203d8:  ret    


ret [pc: f66134ca, cc: f67dad50]
----------------
IN: 
0xf66134ca:  add    $0x10,%esp
0xf66134cd:  add    $0x1c,%esp
0xf66134d0:  pop    %ebx
0xf66134d1:  pop    %esi
0xf66134d2:  pop    %edi
0xf66134d3:  pop    %ebp
0xf66134d4:  ret    


ret [pc: f67e9321, cc: 00033e71]
----------------
IN: 
0xf67e9321:  mov    0x84(%ebp),%eax
0xf67e9327:  add    $0x10,%esp
0xf67e932a:  test   %eax,%eax
0xf67e932c:  je     0xf67e9371

----------------
IN: 
0xf67e932e:  mov    0x8c(%ebp),%edx
0xf67e9334:  mov    0x0(%ebp),%ebp
0xf67e9337:  add    0x4(%eax),%ebp
0xf67e933a:  mov    0x4(%edx),%edi
0xf67e933d:  shr    $0x2,%edi
0xf67e9340:  test   %edi,%edi
0xf67e9342:  mov    %edi,0xc(%esp)
0xf67e9346:  je     0xf67e9371

----------------
IN: 
0xf67e9348:  xor    %edi,%edi
0xf67e934a:  mov    %esi,%eax
0xf67e934c:  mov    %ebx,%esi
0xf67e934e:  mov    %edi,%ebx
0xf67e9350:  mov    %eax,%edi
0xf67e9352:  lea    0x0(%esi),%esi
0xf67e9358:  sub    $0x4,%esp
0xf67e935b:  pushl  0x34(%esp)
0xf67e935f:  push   %edi
0xf67e9360:  push   %esi
0xf67e9361:  call   *0x0(%ebp,%ebx,4)


call [pc: f67e9365, cc: f67dad14]
----------------
IN: 
0xf6613020:  call   0xf671a999


call [pc: f6613025, cc: 001c9d31]
----------------
IN: 
0xf671a999:  mov    (%esp),%eax
0xf671a99c:  ret    


ret [pc: f6613025, cc: f67dad14]
----------------
IN: 
0xf6613025:  add    $0x199fdb,%eax
0xf661302a:  mov    -0xf4(%eax),%edx
0xf6613030:  test   %edx,%edx
0xf6613032:  je     0xf6613035

----------------
IN: 
0xf6613034:  ret    


ret [pc: f67e9365, cc: 00033e71]
----------------
IN: 
0xf67e9365:  add    $0x10,%esp
0xf67e9368:  add    $0x1,%ebx
0xf67e936b:  cmp    %ebx,0xc(%esp)
0xf67e936f:  jne    0xf67e9358

----------------
IN: 
0xf67e9358:  sub    $0x4,%esp
0xf67e935b:  pushl  0x34(%esp)
0xf67e935f:  push   %edi
0xf67e9360:  push   %esi
0xf67e9361:  call   *0x0(%ebp,%ebx,4)


call [pc: f67e9365, cc: f67dad14]
----------------
IN: 
0xf6613090:  push   %ebp
0xf6613091:  push   %edi
0xf6613092:  call   0xf671a9a5


call [pc: f6613097, cc: 001c9d83]

ret [pc: f6613097, cc: f67dad14]
----------------
IN: 
0xf6613097:  add    $0x199f69,%edi
0xf661309d:  push   %esi
0xf661309e:  push   %ebx
0xf661309f:  sub    $0x2c,%esp
0xf66130a2:  mov    -0xdc(%edi),%eax
0xf66130a8:  mov    %eax,0x4(%esp)
0xf66130ac:  mov    0x54(%eax),%eax
0xf66130af:  cmp    $0x1,%eax
0xf66130b2:  je     0xf66130c5

----------------
IN: 
0xf66130c5:  mov    0x4(%esp),%eax
0xf66130c9:  mov    0x58(%eax),%eax
0xf66130cc:  mov    %eax,%edx
0xf66130ce:  mov    %eax,%ebx
0xf66130d0:  mov    %eax,0x8(%esp)
0xf66130d4:  mov    $0xbc,%eax
0xf66130d9:  call   0xf668b4e0


call [pc: f66130de, cc: 001c9dca]
----------------
IN: 
0xf668b4e0:  cmp    $0x1,%edx
0xf668b4e3:  jbe    0xf668b5e0

----------------
IN: 
0xf668b4e9:  push   %ebp
0xf668b4ea:  push   %edi
0xf668b4eb:  mov    %eax,%ebp
0xf668b4ed:  push   %esi
0xf668b4ee:  push   %ebx
0xf668b4ef:  mov    $0x1,%edi
0xf668b4f4:  sub    $0x2c,%esp
0xf668b4f7:  lea    0x1f(%esp),%eax
0xf668b4fb:  movb   $0x0,0x1e(%esp)
0xf668b500:  movb   $0x0,0x1f(%esp)
0xf668b505:  movl   $0x1,0xc(%esp)
0xf668b50d:  lea    0x1e(%esp),%esi
0xf668b511:  mov    %eax,(%esp)
0xf668b514:  jmp    0xf668b595

----------------
IN: 
0xf668b595:  mov    $0x2,%eax
0xf668b59a:  cpuid  
0xf668b59c:  cmp    $0x1,%edi
0xf668b59f:  mov    %edx,0x8(%esp)
0xf668b5a3:  mov    %ecx,0x4(%esp)
0xf668b5a7:  mov    %eax,%edx
0xf668b5a9:  jne    0xf668b520

----------------
IN: 
0xf668b5af:  movzbl %al,%eax
0xf668b5b2:  xor    %dl,%dl
0xf668b5b4:  mov    %eax,0xc(%esp)
0xf668b5b8:  jmp    0xf668b520

----------------
IN: 
0xf668b520:  sub    $0xc,%esp
0xf668b523:  mov    %ebp,%eax
0xf668b525:  push   %esi
0xf668b526:  mov    0x10(%esp),%ecx
0xf668b52a:  call   0xf668b1c0


call [pc: f668b52f, cc: f67428e5]
----------------
IN: 
0xf668b1c0:  push   %ebp
0xf668b1c1:  push   %edi
0xf668b1c2:  push   %esi
0xf668b1c3:  push   %ebx
0xf668b1c4:  call   0xf671a9a1


call [pc: f668b1c9, cc: 001c992c]
----------------
IN: 
0xf671a9a1:  mov    (%esp),%esi
0xf671a9a4:  ret    


ret [pc: f668b1c9, cc: f67428e5]
----------------
IN: 
0xf668b1c9:  add    $0x121e37,%esi
0xf668b1cf:  sub    $0x2c,%esp
0xf668b1d2:  test   %edx,%edx
0xf668b1d4:  mov    %esi,0x18(%esp)
0xf668b1d8:  mov    %eax,0x10(%esp)
0xf668b1dc:  mov    %ecx,0x14(%esp)
0xf668b1e0:  js     0xf668b2d3

----------------
IN: 
0xf668b1e6:  mov    0x10(%esp),%eax
0xf668b1ea:  mov    %edx,%esi
0xf668b1ec:  mov    $0x55555556,%edx
0xf668b1f1:  lea    -0xb9(%eax),%ecx
0xf668b1f7:  mov    %ecx,%eax
0xf668b1f9:  sar    $0x1f,%ecx
0xf668b1fc:  imul   %edx
0xf668b1fe:  sub    %ecx,%edx
0xf668b200:  test   %esi,%esi
0xf668b202:  lea    (%edx,%edx,2),%eax
0xf668b205:  mov    %eax,0xc(%esp)
0xf668b209:  je     0xf668b2d3

----------------
IN: 
0xf668b2d3:  xor    %eax,%eax
0xf668b2d5:  add    $0x2c,%esp
0xf668b2d8:  pop    %ebx
0xf668b2d9:  pop    %esi
0xf668b2da:  pop    %edi
0xf668b2db:  pop    %ebp
0xf668b2dc:  ret    


ret [pc: f668b52f, cc: 001c9dca]
----------------
IN: 
0xf668b52f:  add    $0x10,%esp
0xf668b532:  test   %eax,%eax
0xf668b534:  jne    0xf668b5d7

----------------
IN: 
0xf668b53a:  sub    $0xc,%esp
0xf668b53d:  mov    %ebx,%edx
0xf668b53f:  mov    %ebp,%eax
0xf668b541:  push   %esi
0xf668b542:  mov    0x10(%esp),%ecx
0xf668b546:  call   0xf668b1c0


call [pc: f668b54b, cc: f6742881]

call [pc: f668b1c9, cc: 001c9948]

ret [pc: f668b1c9, cc: f6742881]

ret [pc: f668b54b, cc: 001c9dca]
----------------
IN: 
0xf668b54b:  add    $0x10,%esp
0xf668b54e:  test   %eax,%eax
0xf668b550:  jne    0xf668b5d7

----------------
IN: 
0xf668b556:  sub    $0xc,%esp
0xf668b559:  mov    %ebp,%eax
0xf668b55b:  push   %esi
0xf668b55c:  mov    0x10(%esp),%ebx
0xf668b560:  mov    0x14(%esp),%edx
0xf668b564:  mov    %ebx,%ecx
0xf668b566:  call   0xf668b1c0


call [pc: f668b56b, cc: f67428a1]

call [pc: f668b1c9, cc: 001c9968]

ret [pc: f668b1c9, cc: f67428a1]

ret [pc: f668b56b, cc: 001c9dca]
----------------
IN: 
0xf668b56b:  add    $0x10,%esp
0xf668b56e:  test   %eax,%eax
0xf668b570:  jne    0xf668b5d7

----------------
IN: 
0xf668b572:  sub    $0xc,%esp
0xf668b575:  mov    %ebx,%ecx
0xf668b577:  mov    %ebp,%eax
0xf668b579:  push   %esi
0xf668b57a:  mov    0x18(%esp),%edx
0xf668b57e:  call   0xf668b1c0


call [pc: f668b583, cc: f6742849]

call [pc: f668b1c9, cc: 001c9980]

ret [pc: f668b1c9, cc: f6742849]
----------------
IN: 
0xf668b20f:  mov    0x18(%esp),%ebx
0xf668b213:  mov    -0xdc(%ebx),%eax
0xf668b219:  lea    -0x5ae00(%ebx),%ebp
0xf668b21f:  cmpl   $0xf,0x8c(%eax)
0xf668b226:  sete   %dl
0xf668b229:  cmpl   $0x6,0x90(%eax)
0xf668b230:  sete   %al
0xf668b233:  and    %eax,%edx
0xf668b235:  mov    %dl,0x1c(%esp)
0xf668b239:  lea    0x0(%esi),%esi
0xf668b240:  mov    %esi,%eax
0xf668b242:  movzbl %al,%eax
0xf668b245:  cmp    $0x40,%eax
0xf668b248:  je     0xf668b2f0

----------------
IN: 
0xf668b24e:  cmp    $0xff,%eax
0xf668b253:  je     0xf668b309

----------------
IN: 
0xf668b259:  cmp    $0x49,%eax
0xf668b25c:  jne    0xf668b281

----------------
IN: 
0xf668b281:  mov    %esi,%ebx
0xf668b283:  xor    %edx,%edx
0xf668b285:  mov    $0x44,%edi
0xf668b28a:  lea    0x0(%esi),%esi
0xf668b290:  lea    (%edi,%edx,1),%eax
0xf668b293:  shr    %eax
0xf668b295:  lea    0x0(%ebp,%eax,8),%ecx
0xf668b299:  cmp    (%ecx),%bl
0xf668b29b:  je     0xf668b2b4

----------------
IN: 
0xf668b29d:  lea    0x0(%esi),%esi
0xf668b2a0:  jae    0xf668b2e0

----------------
IN: 
0xf668b2e0:  lea    0x1(%eax),%edx
0xf668b2e3:  cmp    %edi,%edx
0xf668b2e5:  jb     0xf668b290

----------------
IN: 
0xf668b290:  lea    (%edi,%edx,1),%eax
0xf668b293:  shr    %eax
0xf668b295:  lea    0x0(%ebp,%eax,8),%ecx
0xf668b299:  cmp    (%ecx),%bl
0xf668b29b:  je     0xf668b2b4

----------------
IN: 
0xf668b2a2:  cmp    %edx,%eax
0xf668b2a4:  mov    %eax,%edi
0xf668b2a6:  jbe    0xf668b2c8

----------------
IN: 
0xf668b2a8:  add    %edx,%eax
0xf668b2aa:  shr    %eax
0xf668b2ac:  lea    0x0(%ebp,%eax,8),%ecx
0xf668b2b0:  cmp    (%ecx),%bl
0xf668b2b2:  jne    0xf668b2a0

----------------
IN: 
0xf668b2a0:  jae    0xf668b2e0

----------------
IN: 
0xf668b2b4:  movzbl 0x3(%ecx),%edx
0xf668b2b8:  cmp    %edx,0xc(%esp)
0xf668b2bc:  mov    %edx,%eax
0xf668b2be:  je     0xf668b429

----------------
IN: 
0xf668b2c4:  cmp    $0x6,%al
0xf668b2c6:  je     0xf668b300

----------------
IN: 
0xf668b300:  mov    0x14(%esp),%eax
0xf668b304:  movb   $0x1,(%eax)
0xf668b307:  jmp    0xf668b2c8

----------------
IN: 
0xf668b2c8:  shr    $0x8,%esi
0xf668b2cb:  test   %esi,%esi
0xf668b2cd:  jne    0xf668b240

----------------
IN: 
0xf668b240:  mov    %esi,%eax
0xf668b242:  movzbl %al,%eax
0xf668b245:  cmp    $0x40,%eax
0xf668b248:  je     0xf668b2f0

----------------
IN: 
0xf668b429:  mov    0x10(%esp),%eax
0xf668b42d:  sub    $0xb9,%eax
0xf668b432:  sub    0xc(%esp),%eax
0xf668b436:  je     0xf668b44b

----------------
IN: 
0xf668b44b:  mov    0x4(%ecx),%eax
0xf668b44e:  add    $0x2c,%esp
0xf668b451:  pop    %ebx
0xf668b452:  pop    %esi
0xf668b453:  pop    %edi
0xf668b454:  pop    %ebp
0xf668b455:  ret    


ret [pc: f668b583, cc: 001c9dca]
----------------
IN: 
0xf668b583:  add    $0x10,%esp
0xf668b586:  test   %eax,%eax
0xf668b588:  jne    0xf668b5d7

----------------
IN: 
0xf668b5d7:  add    $0x2c,%esp
0xf668b5da:  pop    %ebx
0xf668b5db:  pop    %esi
0xf668b5dc:  pop    %edi
0xf668b5dd:  pop    %ebp
0xf668b5de:  ret    


ret [pc: f66130de, cc: f67dad14]
----------------
IN: 
0xf66130de:  mov    %ebx,%edx
0xf66130e0:  mov    %eax,%esi
0xf66130e2:  mov    $0xc2,%eax
0xf66130e7:  call   0xf668b4e0


call [pc: f66130ec, cc: 001c9df8]

call [pc: f668b52f, cc: f67428d7]

call [pc: f668b1c9, cc: 001c991e]

ret [pc: f668b1c9, cc: f67428d7]

ret [pc: f668b52f, cc: 001c9df8]

call [pc: f668b54b, cc: f67428b3]

call [pc: f668b1c9, cc: 001c997a]

ret [pc: f668b1c9, cc: f67428b3]

ret [pc: f668b54b, cc: 001c9df8]

call [pc: f668b56b, cc: f6742893]

call [pc: f668b1c9, cc: 001c995a]

ret [pc: f668b1c9, cc: f6742893]

ret [pc: f668b56b, cc: 001c9df8]

call [pc: f668b583, cc: f674287b]

call [pc: f668b1c9, cc: 001c99b2]

ret [pc: f668b1c9, cc: f674287b]

ret [pc: f668b583, cc: 001c9df8]
----------------
IN: 
0xf668b58a:  cmp    %edi,0xc(%esp)
0xf668b58e:  lea    0x1(%edi),%eax
0xf668b591:  jbe    0xf668b5c0

----------------
IN: 
0xf668b5c0:  lea    -0xbf(%ebp),%eax
0xf668b5c6:  cmp    $0x5,%eax
0xf668b5c9:  ja     0xf668b5e8

----------------
IN: 
0xf668b5cb:  cmpb   $0x0,0x1e(%esp)
0xf668b5d0:  je     0xf668b5e8

----------------
IN: 
0xf668b5e8:  add    $0x2c,%esp
0xf668b5eb:  xor    %eax,%eax
0xf668b5ed:  pop    %ebx
0xf668b5ee:  pop    %esi
0xf668b5ef:  pop    %edi
0xf668b5f0:  pop    %ebp
0xf668b5f1:  ret    


ret [pc: f66130ec, cc: f67dad14]
----------------
IN: 
0xf66130ec:  test   %eax,%eax
0xf66130ee:  mov    %eax,%ebp
0xf66130f0:  movl   $0x3,0xc(%esp)
0xf66130f8:  jle    0xf661331c

----------------
IN: 
0xf661331c:  mov    0x8(%esp),%edx
0xf6613320:  mov    $0xbf,%eax
0xf6613325:  call   0xf668b4e0


call [pc: f661332a, cc: 001c9e3e]

call [pc: f668b52f, cc: f6742b11]

call [pc: f668b1c9, cc: 001c9ad8]

ret [pc: f668b1c9, cc: f6742b11]

ret [pc: f668b52f, cc: 001c9e3e]

call [pc: f668b54b, cc: f6742b75]

call [pc: f668b1c9, cc: 001c9abc]

ret [pc: f668b1c9, cc: f6742b75]

ret [pc: f668b54b, cc: 001c9e3e]

call [pc: f668b56b, cc: f6742b55]

call [pc: f668b1c9, cc: 001c9a9c]

ret [pc: f668b1c9, cc: f6742b55]

ret [pc: f668b56b, cc: 001c9e3e]

call [pc: f668b583, cc: f6742bbd]

call [pc: f668b1c9, cc: 001c9a74]

ret [pc: f668b1c9, cc: f6742bbd]

ret [pc: f668b583, cc: 001c9e3e]

ret [pc: f661332a, cc: f67dad14]
----------------
IN: 
0xf661332a:  movl   $0x2,0xc(%esp)
0xf6613332:  mov    %eax,%ebp
0xf6613334:  jmp    0xf66130fe

----------------
IN: 
0xf66130fe:  cmpl   $0x3,0x8(%esp)
0xf6613103:  jle    0xf6613158

----------------
IN: 
0xf6613105:  mov    0x4(%esp),%eax
0xf6613109:  mov    %ebp,0x14(%esp)
0xf661310d:  xor    %ecx,%ecx
0xf661310f:  mov    %esi,0x10(%esp)
0xf6613113:  mov    0xc(%esp),%ebp
0xf6613117:  mov    0x8c(%eax),%ebx
0xf661311d:  mov    0x90(%eax),%eax
0xf6613123:  mov    %ebx,0x18(%esp)
0xf6613127:  mov    %eax,0x1c(%esp)
0xf661312b:  jmp    0xf6613142

----------------
IN: 
0xf6613142:  lea    0x1(%ecx),%esi
0xf6613145:  mov    $0x4,%eax
0xf661314a:  cpuid  
0xf661314c:  test   $0x1f,%al
0xf661314e:  jne    0xf6613130

----------------
IN: 
0xf6613130:  mov    %eax,%edx
0xf6613132:  mov    %esi,%ecx
0xf6613134:  shr    $0x5,%edx
0xf6613137:  and    $0x7,%edx
0xf661313a:  cmp    %edx,%ebp
0xf661313c:  je     0xf6613251

----------------
IN: 
0xf6613251:  shr    $0xe,%eax
0xf6613254:  mov    0x10(%esp),%esi
0xf6613258:  mov    0x14(%esp),%ebp
0xf661325c:  and    $0x3ff,%eax
0xf6613261:  mov    $0x1,%ecx
0xf6613266:  mov    %eax,0x4(%esp)
0xf661326a:  je     0xf6613160

----------------
IN: 
0xf6613160:  test   %ebp,%ebp
0xf6613162:  jle    0xf6613170

----------------
IN: 
0xf6613164:  test   %ecx,%ecx
0xf6613166:  je     0xf6613170

----------------
IN: 
0xf6613168:  mov    %ebp,%eax
0xf661316a:  xor    %edx,%edx
0xf661316c:  div    %ecx
0xf661316e:  mov    %eax,%ebp
0xf6613170:  test   %esi,%esi
0xf6613172:  jle    0xf6613198

----------------
IN: 
0xf6613174:  mov    %esi,%eax
0xf6613176:  mov    %esi,0x168(%edi)
0xf661317c:  sar    %eax
0xf661317e:  mov    %eax,0x16c(%edi)
0xf6613184:  mov    %esi,%eax
0xf6613186:  xor    %al,%al
0xf6613188:  mov    %eax,%edx
0xf661318a:  mov    %eax,0x170(%edi)
0xf6613190:  sar    %edx
0xf6613192:  mov    %edx,0x174(%edi)
0xf6613198:  test   %ebp,%ebp
0xf661319a:  jle    0xf66130bd

----------------
IN: 
0xf66131a0:  mov    %ebp,%eax
0xf66131a2:  mov    %ebp,0x158(%edi)
0xf66131a8:  and    $0xffffff00,%ebp
0xf66131ae:  sar    %eax
0xf66131b0:  mov    %ebp,0x160(%edi)
0xf66131b6:  mov    %eax,0x15c(%edi)
0xf66131bc:  mov    %ebp,%eax
0xf66131be:  sar    %eax
0xf66131c0:  mov    %eax,0x164(%edi)
0xf66131c6:  add    $0x2c,%esp
0xf66131c9:  pop    %ebx
0xf66131ca:  pop    %esi
0xf66131cb:  pop    %edi
0xf66131cc:  pop    %ebp
0xf66131cd:  ret    


ret [pc: f67e9365, cc: 00033e71]

call [pc: f67e9365, cc: f67dad14]
----------------
IN: 
0xf6613350:  call   0xf671a999


call [pc: f6613355, cc: 001c9e41]

ret [pc: f6613355, cc: f67dad14]
----------------
IN: 
0xf6613355:  add    $0x199cab,%eax
0xf661335a:  mov    -0x118(%eax),%ecx
0xf6613360:  mov    0x504(%ecx),%eax
0xf6613366:  or     0x500(%ecx),%eax
0xf661336c:  jne    0xf661337c

----------------
IN: 
0xf661337c:  repz ret 


ret [pc: f67e9365, cc: 00033e71]

ret [pc: f67e948e, cc: f67daaff]

call [pc: f67e948e, cc: 00033e71]

call [pc: f67e92cb, cc: f67dacba]

ret [pc: f67e92cb, cc: 00033e71]
----------------
IN: 
0xf67e93d0:  and    $0x3,%ebp
0xf67e93d3:  jne    0xf67e92f8

----------------
IN: 
0xf67e93d9:  jmp    0xf67e9371


ret [pc: f67e948e, cc: f67daaff]
----------------
IN: 
0xf67e9498:  add    $0x1c,%esp
0xf67e949b:  pop    %ebx
0xf67e949c:  pop    %esi
0xf67e949d:  pop    %edi
0xf67e949e:  pop    %ebp
0xf67e949f:  ret    $0x4


ret [pc: f67daaff, cc: 00000000]
----------------
IN: 
0xf67daaff:  lea    -0x14880(%ebx),%edx
0xf67dab05:  mov    (%esp),%esp
0xf67dab08:  jmp    *%edi

----------------
IN: 
0x08048430:  xor    %ebp,%ebp
0x08048432:  pop    %esi
0x08048433:  mov    %esp,%ecx
0x08048435:  and    $0xfffffff0,%esp
0x08048438:  push   %eax
0x08048439:  push   %esp
0x0804843a:  push   %edx
0x0804843b:  push   $0x8048710
0x08048440:  push   $0x80486a0
0x08048445:  push   %ecx
0x08048446:  push   %esi
0x08048447:  push   $0x8048579
0x0804844c:  call   0x8048420

index: 00007843 [pc: 00007843, cc: 00000000]

index: 00007843

call [pc: 08048451, cc: 08048451]
----------------
IN: 
0x08048420:  jmp    *0x804a028

index: 0000d032 [pc: 00005463, cc: 08048451]

index: 0000d032
----------------
IN: 
0x08048426:  push   $0x38
0x0804842b:  jmp    0x80483a0

index: 0000de32 [pc: 00005a63, cc: 08048451]

index: 0000de32
----------------
IN: 
0x080483a0:  pushl  0x804a004
0x080483a6:  jmp    *0x804a008

index: 00005b4a [pc: 0000df1b, cc: 08048451]

index: 00005b4a
----------------
IN: 
0xf67eef00:  push   %eax
0xf67eef01:  push   %ecx
0xf67eef02:  push   %edx
0xf67eef03:  mov    0x10(%esp),%edx
0xf67eef07:  mov    0xc(%esp),%eax
0xf67eef0b:  call   0xf67e86e0


call [pc: f67eef10, cc: fe7a6b41]
----------------
IN: 
0xf67e86e0:  push   %ebp
0xf67e86e1:  push   %edi
0xf67e86e2:  mov    %eax,%edi
0xf67e86e4:  push   %esi
0xf67e86e5:  push   %ebx
0xf67e86e6:  call   0xf67f360d


call [pc: f67e86eb, cc: 0804edaa]

ret [pc: f67e86eb, cc: fe7a6b41]
----------------
IN: 
0xf67e86eb:  add    $0x15915,%esi
0xf67e86f1:  sub    $0x2c,%esp
0xf67e86f4:  mov    0x7c(%edi),%ecx
0xf67e86f7:  mov    0x34(%eax),%eax
0xf67e86fa:  mov    %esi,0x8(%esp)
0xf67e86fe:  add    0x4(%ecx),%edx
0xf67e8701:  mov    0x4(%eax),%eax
0xf67e8704:  mov    0x38(%edi),%ecx
0xf67e8707:  mov    %eax,0xc(%esp)
0xf67e870b:  mov    %edx,%ebp
0xf67e870d:  mov    0x4(%edx),%edx
0xf67e8710:  mov    0x0(%ebp),%eax
0xf67e8713:  mov    %edx,%esi
0xf67e8715:  shr    $0x8,%esi
0xf67e8718:  mov    %esi,%ebx
0xf67e871a:  shl    $0x4,%ebx
0xf67e871d:  add    0x4(%ecx),%ebx
0xf67e8720:  mov    (%edi),%ecx
0xf67e8722:  add    %ecx,%eax
0xf67e8724:  cmp    $0x7,%dl
0xf67e8727:  mov    %ebx,0x1c(%esp)
0xf67e872b:  jne    0xf67e886f

----------------
IN: 
0xf67e8731:  testb  $0x3,0xd(%ebx)
0xf67e8735:  mov    %eax,%ebp
0xf67e8737:  jne    0xf67e8810

----------------
IN: 
0xf67e873d:  mov    0xe4(%edi),%edx
0xf67e8743:  test   %edx,%edx
0xf67e8745:  je     0xf67e87f0

----------------
IN: 
0xf67e874b:  mov    0x4(%edx),%edx
0xf67e874e:  movzwl (%edx,%esi,2),%edx
0xf67e8752:  and    $0x7fff,%edx
0xf67e8758:  shl    $0x4,%edx
0xf67e875b:  add    0x170(%edi),%edx
0xf67e8761:  mov    0x4(%edx),%ecx
0xf67e8764:  test   %ecx,%ecx
0xf67e8766:  mov    $0x0,%ecx
0xf67e876b:  cmove  %ecx,%edx
0xf67e876e:  mov    %gs:0xc,%ecx
0xf67e8775:  test   %ecx,%ecx
0xf67e8777:  mov    $0x1,%esi
0xf67e877c:  jne    0xf67e8850

----------------
IN: 
0xf67e8782:  mov    0xc(%esp),%eax
0xf67e8786:  add    (%ebx),%eax
0xf67e8788:  lea    0x1c(%esp),%ecx
0xf67e878c:  sub    $0xc,%esp
0xf67e878f:  push   $0x0
0xf67e8791:  push   %esi
0xf67e8792:  push   $0x1
0xf67e8794:  push   %edx
0xf67e8795:  mov    %edi,%edx
0xf67e8797:  pushl  0x1cc(%edi)
0xf67e879d:  call   0xf67e3960


call [pc: f67e87a2, cc: 0804ece3]

call [pc: f67e3970, cc: fe7ad593]

ret [pc: f67e3970, cc: 0804ece3]

call [pc: f67e3a4b, cc: fe7ad6a8]

call [pc: f67e2ec9, cc: 0804f861]

ret [pc: f67e2ec9, cc: fe7ad6a8]

call [pc: f67e2ffb, cc: 0804f953]

call [pc: f67ea16c, cc: fe7a583f]

ret [pc: f67ea16c, cc: 0804f953]

call [pc: f67ea17e, cc: fe7a582d]

ret [pc: f67ea17e, cc: 0804f953]

call [pc: f67ea1a2, cc: fe7a58f1]

ret [pc: f67ea1a2, cc: 0804f953]

ret [pc: f67e2ffb, cc: fe7ad6a8]

call [pc: f67e353d, cc: 0804e395]

call [pc: f67e2d39, cc: fe7aceac]

ret [pc: f67e2d39, cc: 0804e395]

call [pc: f67e2da0, cc: fe7ace35]

ret [pc: f67e2da0, cc: 0804e395]

call [pc: f67e2e60, cc: fe7acdf5]

ret [pc: f67e2e60, cc: 0804e395]

ret [pc: f67e353d, cc: fe7ad6a8]

ret [pc: f67e3a4b, cc: 0804ece3]

ret [pc: f67e87a2, cc: fe7a6b41]
----------------
IN: 
0xf67e87a2:  mov    %eax,%edi
0xf67e87a4:  mov    %gs:0xc,%eax
0xf67e87aa:  add    $0xc,%esp
0xf67e87ad:  test   %eax,%eax
0xf67e87af:  jne    0xf67e8818

----------------
IN: 
0xf67e87b1:  mov    0x1c(%esp),%ebx
0xf67e87b5:  test   %ebx,%ebx
0xf67e87b7:  je     0xf67e8800

----------------
IN: 
0xf67e87b9:  test   %edi,%edi
0xf67e87bb:  je     0xf67e8808

----------------
IN: 
0xf67e87bd:  mov    (%edi),%eax
0xf67e87bf:  movzbl 0xc(%ebx),%edx
0xf67e87c3:  add    0x4(%ebx),%eax
0xf67e87c6:  and    $0xf,%edx
0xf67e87c9:  cmp    $0xa,%dl
0xf67e87cc:  je     0xf67e8868

----------------
IN: 
0xf67e87d2:  mov    0x8(%esp),%esi
0xf67e87d6:  mov    -0x2d0(%esi),%edx
0xf67e87dc:  test   %edx,%edx
0xf67e87de:  jne    0xf67e87e3

----------------
IN: 
0xf67e87e0:  mov    %eax,0x0(%ebp)
0xf67e87e3:  add    $0x2c,%esp
0xf67e87e6:  pop    %ebx
0xf67e87e7:  pop    %esi
0xf67e87e8:  pop    %edi
0xf67e87e9:  pop    %ebp
0xf67e87ea:  ret    


ret [pc: f67eef10, cc: 08048451]
----------------
IN: 
0xf67eef10:  pop    %edx
0xf67eef11:  mov    (%esp),%ecx
0xf67eef14:  mov    %eax,(%esp)
0xf67eef17:  mov    0x4(%esp),%eax
0xf67eef1b:  ret    $0xc


ret [pc: f6613540, cc: fe65b111]
----------------
IN: 
0xf6613540:  call   0xf671a999


call [pc: f6613545, cc: 08048454]

ret [pc: f6613545, cc: fe65b111]
----------------
IN: 
0xf6613545:  add    $0x199abb,%eax
0xf661354a:  push   %ebp
0xf661354b:  push   %edi
0xf661354c:  push   %esi
0xf661354d:  push   %ebx
0xf661354e:  mov    %eax,%edi
0xf6613550:  sub    $0x4c,%esp
0xf6613553:  mov    -0x6c(%edi),%edx
0xf6613559:  mov    %eax,0x8(%esp)
0xf661355d:  mov    0x74(%esp),%eax
0xf6613561:  test   %edx,%edx
0xf6613563:  je     0xf6613643

----------------
IN: 
0xf6613643:  xor    %ecx,%ecx
0xf6613645:  jmp    0xf6613572

----------------
IN: 
0xf6613572:  mov    0x8(%esp),%esi
0xf6613576:  test   %eax,%eax
0xf6613578:  lea    0x40(%esi),%edx
0xf661357e:  mov    %ecx,(%edx)
0xf6613580:  je     0xf6613592

----------------
IN: 
0xf6613582:  sub    $0x4,%esp
0xf6613585:  push   $0x0
0xf6613587:  push   $0x0
0xf6613589:  push   %eax
0xf661358a:  call   0xf6629bf0


call [pc: f661358f, cc: 0804849e]
----------------
IN: 
0xf6629bf0:  push   %ebx
0xf6629bf1:  call   0xf671a995


call [pc: f6629bf6, cc: fe661f68]

ret [pc: f6629bf6, cc: 0804849e]
----------------
IN: 
0xf6629bf6:  add    $0x18340a,%ebx
0xf6629bfc:  sub    $0x14,%esp
0xf6629bff:  lea    0x3dc(%ebx),%eax
0xf6629c05:  push   %eax
0xf6629c06:  call   0xf6629a40


call [pc: f6629c0b, cc: fe661895]
----------------
IN: 
0xf6629a40:  push   %ebp
0xf6629a41:  push   %edi
0xf6629a42:  xor    %eax,%eax
0xf6629a44:  push   %esi
0xf6629a45:  push   %ebx
0xf6629a46:  mov    $0x1,%ecx
0xf6629a4b:  call   0xf671a995


call [pc: f6629a50, cc: 080482c5]

ret [pc: f6629a50, cc: fe661895]
----------------
IN: 
0xf6629a50:  add    $0x1835b0,%ebx
0xf6629a56:  sub    $0xc,%esp
0xf6629a59:  cmpl   $0x0,%gs:0xc
0xf6629a61:  je     0xf6629a64

----------------
IN: 
0xf6629a64:  cmpxchg %ecx,0x13e8(%ebx)
0xf6629a6b:  je     0xf6629a78

----------------
IN: 
0xf6629a78:  mov    0x20(%esp),%eax
0xf6629a7c:  xor    %ebp,%ebp
0xf6629a7e:  mov    (%eax),%esi
0xf6629a80:  test   %esi,%esi
0xf6629a82:  mov    %esi,%edi
0xf6629a84:  je     0xf6629b63

----------------
IN: 
0xf6629a8a:  lea    0x0(%esi),%esi
0xf6629a90:  mov    0x4(%edi),%eax
0xf6629a93:  test   %eax,%eax
0xf6629a95:  je     0xf6629ac2

----------------
IN: 
0xf6629ac2:  mov    (%edi),%eax
0xf6629ac4:  movl   $0x0,0x4(%edi)
0xf6629acb:  mov    %edi,%ebp
0xf6629acd:  test   %eax,%eax
0xf6629acf:  je     0xf6629b57

----------------
IN: 
0xf6629b57:  lea    0x8(%edi),%ecx
0xf6629b5a:  movl   $0x1,0x4(%edi)
0xf6629b61:  jmp    0xf6629af4

----------------
IN: 
0xf6629af4:  movl   $0x1,(%ecx)
0xf6629afa:  addl   $0x1,0x36e0(%ebx)
0xf6629b01:  adcl   $0x0,0x36e4(%ebx)
0xf6629b08:  cmpl   $0x0,%gs:0xc
0xf6629b10:  je     0xf6629b13

----------------
IN: 
0xf6629b13:  subl   $0x1,0x13e8(%ebx)
0xf6629b1a:  je     0xf6629b27

----------------
IN: 
0xf6629b27:  add    $0xc,%esp
0xf6629b2a:  mov    %ecx,%eax
0xf6629b2c:  pop    %ebx
0xf6629b2d:  pop    %esi
0xf6629b2e:  pop    %edi
0xf6629b2f:  pop    %ebp
0xf6629b30:  ret    


ret [pc: f6629c0b, cc: 0804849e]
----------------
IN: 
0xf6629c0b:  add    $0x10,%esp
0xf6629c0e:  test   %eax,%eax
0xf6629c10:  je     0xf6629c3e

----------------
IN: 
0xf6629c12:  mov    0x10(%esp),%edx
0xf6629c16:  xor    %gs:0x18,%edx
0xf6629c1d:  rol    $0x9,%edx
0xf6629c20:  mov    %edx,0x4(%eax)
0xf6629c23:  mov    0x14(%esp),%edx
0xf6629c27:  mov    %edx,0x8(%eax)
0xf6629c2a:  mov    0x18(%esp),%edx
0xf6629c2e:  mov    %edx,0xc(%eax)
0xf6629c31:  movl   $0x4,(%eax)
0xf6629c37:  xor    %eax,%eax
0xf6629c39:  add    $0x8,%esp
0xf6629c3c:  pop    %ebx
0xf6629c3d:  ret    


ret [pc: f661358f, cc: fe65b111]
----------------
IN: 
0xf661358f:  add    $0x10,%esp
0xf6613592:  mov    0x8(%esp),%eax
0xf6613596:  mov    -0xdc(%eax),%eax
0xf661359c:  mov    (%eax),%ebx
0xf661359e:  and    $0x2,%ebx
0xf66135a1:  jne    0xf661367e

----------------
IN: 
0xf66135a7:  cmpl   $0x0,0x6c(%esp)
0xf66135ac:  je     0xf66135ca

----------------
IN: 
0xf66135ae:  push   %edx
0xf66135af:  mov    0xc(%esp),%eax
0xf66135b3:  mov    -0xb8(%eax),%eax
0xf66135b9:  pushl  (%eax)
0xf66135bb:  pushl  0x70(%esp)
0xf66135bf:  pushl  0x70(%esp)
0xf66135c3:  call   *0x7c(%esp)


call [pc: f66135c7, cc: 080484d6]
----------------
IN: __libc_csu_init
0x080486a0:  push   %ebp
0x080486a1:  push   %edi
0x080486a2:  xor    %edi,%edi
0x080486a4:  push   %esi
0x080486a5:  push   %ebx
0x080486a6:  call   0x8048460

index: 000018a1 [pc: 00009c77, cc: 080484d6]

index: 000018a1

call [pc: 080486ab, cc: 0000027d]
----------------
IN: __x86.get_pc_thunk.bx
0x08048460:  mov    (%esp),%ebx
0x08048463:  ret    

index: 00005e0e [pc: 00005c73, cc: 0000027d]

index: 00005e0e

ret [pc: 080486ab, cc: 080484d6]
----------------
IN: __libc_csu_init
0x080486ab:  add    $0x1955,%ebx
0x080486b1:  sub    $0x1c,%esp
0x080486b4:  mov    0x30(%esp),%ebp
0x080486b8:  lea    -0xf4(%ebx),%esi
0x080486be:  call   0x8048378

index: 0000739f [pc: 0000f749, cc: 080484d6]

index: 0000739f

call [pc: 080486c3, cc: 00000215]
----------------
IN: 
0x08048378:  push   %ebx
0x08048379:  sub    $0x8,%esp
0x0804837c:  call   0x8048460

index: 00004397 [pc: 00004182, cc: 00000215]

index: 00004397

call [pc: 08048381, cc: 08048194]
index: 0000b1c9 [pc: 0000305d, cc: 08048194]

index: 0000b1c9

ret [pc: 08048381, cc: 00000215]
----------------
IN: 
0x08048381:  add    $0x1c7f,%ebx
0x08048387:  mov    -0x4(%ebx),%eax
0x0804838d:  test   %eax,%eax
0x0804838f:  je     0x8048396

index: 0000df0e [pc: 0000dd1b, cc: 00000215]

index: 0000df0e
----------------
IN: 
0x08048396:  add    $0x8,%esp
0x08048399:  pop    %ebx
0x0804839a:  ret    

index: 0000b8b0 [pc: 0000baa5, cc: 00000215]

index: 0000b8b0

ret [pc: 080486c3, cc: 080484d6]
----------------
IN: __libc_csu_init
0x080486c3:  lea    -0xf8(%ebx),%eax
0x080486c9:  sub    %eax,%esi
0x080486cb:  sar    $0x2,%esi
0x080486ce:  test   %esi,%esi
0x080486d0:  je     0x80486f9

index: 000060a6 [pc: 0000e470, cc: 080484d6]

index: 000060a6
----------------
IN: __libc_csu_init
0x080486d2:  lea    0x0(%esi),%esi
0x080486d8:  mov    0x38(%esp),%eax
0x080486dc:  mov    %ebp,(%esp)
0x080486df:  mov    %eax,0x8(%esp)
0x080486e3:  mov    0x34(%esp),%eax
0x080486e7:  mov    %eax,0x4(%esp)
0x080486eb:  call   *-0xf8(%ebx,%edi,4)

index: 00005b0d [pc: 0000dfdb, cc: 080484d6]

index: 00005b0d

call [pc: 080486f2, cc: 00000224]
----------------
IN: 
0x08048500:  mov    0x8049f10,%eax
0x08048505:  test   %eax,%eax
0x08048507:  je     0x8048528

index: 00000742 [pc: 00000566, cc: 00000224]

index: 00000742
----------------
IN: 
0x08048528:  jmp    0x80484a0

index: 0000465e [pc: 0000447a, cc: 00000224]

index: 0000465e
----------------
IN: 
0x080484a0:  mov    $0x804a034,%eax
0x080484a5:  sub    $0x804a034,%eax
0x080484aa:  sar    $0x2,%eax
0x080484ad:  mov    %eax,%edx
0x080484af:  shr    $0x1f,%edx
0x080484b2:  add    %edx,%eax
0x080484b4:  sar    %eax
0x080484b6:  jne    0x80484b9

index: 0000da47 [pc: 0000d863, cc: 00000224]

index: 0000da47
----------------
IN: 
0x080484b8:  ret    

index: 0000864a [pc: 0000846e, cc: 00000224]

index: 0000864a

ret [pc: 080486f2, cc: 080484d6]
----------------
IN: __libc_csu_init
0x080486f2:  add    $0x1,%edi
0x080486f5:  cmp    %esi,%edi
0x080486f7:  jne    0x80486d8

index: 0000469c [pc: 0000c24a, cc: 080484d6]

index: 0000469c
----------------
IN: __libc_csu_init
0x080486f9:  add    $0x1c,%esp
0x080486fc:  pop    %ebx
0x080486fd:  pop    %esi
0x080486fe:  pop    %edi
0x080486ff:  pop    %ebp
0x08048700:  ret    

index: 0000688e [pc: 0000ec58, cc: 080484d6]

index: 0000688e

ret [pc: f66135c7, cc: fe65b111]
----------------
IN: 
0xf66135c7:  add    $0x10,%esp
0xf66135ca:  mov    0x8(%esp),%eax
0xf66135ce:  mov    -0xdc(%eax),%eax
0xf66135d4:  mov    0x20c(%eax),%edx
0xf66135da:  test   %edx,%edx
0xf66135dc:  jne    0xf66136e2

----------------
IN: 
0xf66135e2:  test   %ebx,%ebx
0xf66135e4:  jne    0xf66136bb

----------------
IN: 
0xf66135ea:  sub    $0xc,%esp
0xf66135ed:  lea    0x20(%esp),%eax
0xf66135f1:  push   %eax
0xf66135f2:  call   0xf6626c70


call [pc: f66135f7, cc: 080484e6]
----------------
IN: 
0xf6626c70:  xor    %eax,%eax
0xf6626c72:  mov    0x4(%esp),%edx
0xf6626c76:  mov    %ebx,(%edx)
0xf6626c78:  mov    %esi,0x4(%edx)
0xf6626c7b:  mov    %edi,0x8(%edx)
0xf6626c7e:  lea    0x4(%esp),%ecx
0xf6626c82:  xor    %gs:0x18,%ecx
0xf6626c89:  rol    $0x9,%ecx
0xf6626c8c:  mov    %ecx,0x10(%edx)
0xf6626c8f:  mov    (%esp),%ecx
0xf6626c92:  nop    
0xf6626c93:  xor    %gs:0x18,%ecx
0xf6626c9a:  rol    $0x9,%ecx
0xf6626c9d:  mov    %ecx,0x14(%edx)
0xf6626ca0:  mov    %ebp,0xc(%edx)
0xf6626ca3:  mov    %eax,0x18(%edx)
0xf6626ca6:  ret    


ret [pc: f66135f7, cc: fe65b111]
----------------
IN: 
0xf66135f7:  add    $0x10,%esp
0xf66135fa:  test   %eax,%eax
0xf66135fc:  jne    0xf661364a

----------------
IN: 
0xf66135fe:  mov    %gs:0x80,%eax
0xf6613604:  mov    %eax,0x30(%esp)
0xf6613608:  mov    %gs:0x7c,%eax
0xf661360e:  mov    %eax,0x34(%esp)
0xf6613612:  lea    0x14(%esp),%eax
0xf6613616:  mov    %eax,%gs:0x80
0xf661361c:  sub    $0x4,%esp
0xf661361f:  mov    0xc(%esp),%eax
0xf6613623:  mov    -0xb8(%eax),%eax
0xf6613629:  pushl  (%eax)
0xf661362b:  pushl  0x70(%esp)
0xf661362f:  pushl  0x70(%esp)
0xf6613633:  call   *0x70(%esp)


call [pc: f6613637, cc: 08048726]
----------------
IN: main
0x08048579:  push   %ebp
0x0804857a:  mov    %esp,%ebp
0x0804857c:  and    $0xfffffff0,%esp
0x0804857f:  sub    $0x30,%esp
0x08048582:  mov    0xc(%ebp),%eax
0x08048585:  mov    %eax,0xc(%esp)
0x08048589:  mov    %gs:0x14,%eax
0x0804858f:  mov    %eax,0x2c(%esp)
0x08048593:  xor    %eax,%eax
0x08048595:  movl   $0x0,0x1c(%esp)
0x0804859d:  movl   $0x0,0x20(%esp)
0x080485a5:  movl   $0x0,0x24(%esp)
0x080485ad:  movl   $0x0,0x28(%esp)
0x080485b5:  movl   $0x0,0x18(%esp)
0x080485bd:  movl   $0x8048730,(%esp)
0x080485c4:  call   0x8048400

index: 0000eec6 [pc: 000069e0, cc: 08048726]

index: 0000eec6

call [pc: 080485c9, cc: 000002ef]
----------------
IN: 
0x08048400:  jmp    *0x804a020

index: 00005204 [pc: 000050eb, cc: 000002ef]

index: 00005204
----------------
IN: 
0x08048406:  push   $0x28
0x0804840b:  jmp    0x80483a0

index: 0000688f [pc: 00006a60, cc: 000002ef]

index: 0000688f
index: 0000cdf5 [pc: 0000cf1a, cc: 000002ef]

index: 0000cdf5

call [pc: f67eef10, cc: f67eedff]

call [pc: f67e86eb, cc: 00006b14]

ret [pc: f67e86eb, cc: f67eedff]

call [pc: f67e87a2, cc: 00006a5d]

call [pc: f67e3970, cc: f67e532d]

ret [pc: f67e3970, cc: 00006a5d]

call [pc: f67e3a4b, cc: f67e5016]

call [pc: f67e2ec9, cc: 00007edf]

ret [pc: f67e2ec9, cc: f67e5016]

call [pc: f67e2ffb, cc: 00007fed]

call [pc: f67ea16c, cc: f67ede81]

ret [pc: f67ea16c, cc: 00007fed]

call [pc: f67ea17e, cc: f67ede93]

ret [pc: f67ea17e, cc: 00007fed]

call [pc: f67ea1a2, cc: f67ede4f]

ret [pc: f67ea1a2, cc: 00007fed]

ret [pc: f67e2ffb, cc: f67e5016]

call [pc: f67e353d, cc: 0000652b]

call [pc: f67e2d39, cc: f67e4812]

ret [pc: f67e2d39, cc: 0000652b]

call [pc: f67e2da0, cc: f67e488b]

ret [pc: f67e2da0, cc: 0000652b]

call [pc: f67e2e60, cc: f67e4b4b]

ret [pc: f67e2e60, cc: 0000652b]

ret [pc: f67e353d, cc: f67e5016]

ret [pc: f67e3a4b, cc: 00006a5d]

ret [pc: f67e87a2, cc: f67eedff]

ret [pc: f67eef10, cc: 000002ef]

ret [pc: f665aca0, cc: f665ae4f]
----------------
IN: 
0xf665aca0:  push   %ebp
0xf665aca1:  mov    %esp,%ebp
0xf665aca3:  push   %edi
0xf665aca4:  push   %esi
0xf665aca5:  push   %ebx
0xf665aca6:  call   0xf671a995


call [pc: f665acab, cc: 000002e4]

ret [pc: f665acab, cc: f665ae4f]
----------------
IN: 
0xf665acab:  add    $0x152355,%ebx
0xf665acb1:  sub    $0x28,%esp
0xf665acb4:  pushl  0x8(%ebp)
0xf665acb7:  call   0xf6670450


call [pc: f665acbc, cc: 000002f3]
----------------
IN: 
0xf6670450:  mov    0x4(%esp),%eax
0xf6670454:  mov    $0x3,%edx
0xf6670459:  and    %eax,%edx
0xf667045b:  je     0xf6670481

----------------
IN: 
0xf6670481:  mov    (%eax),%ecx
0xf6670483:  add    $0x4,%eax
0xf6670486:  sub    %ecx,%edx
0xf6670488:  add    $0xfefefeff,%ecx
0xf667048e:  dec    %edx
0xf667048f:  jae    0xf66704e9

----------------
IN: 
0xf6670491:  xor    %ecx,%edx
0xf6670493:  and    $0x1010100,%edx
0xf6670499:  jne    0xf66704e9

----------------
IN: 
0xf667049b:  mov    (%eax),%ecx
0xf667049d:  add    $0x4,%eax
0xf66704a0:  sub    %ecx,%edx
0xf66704a2:  add    $0xfefefeff,%ecx
0xf66704a8:  dec    %edx
0xf66704a9:  jae    0xf66704e9

----------------
IN: 
0xf66704ab:  xor    %ecx,%edx
0xf66704ad:  and    $0x1010100,%edx
0xf66704b3:  jne    0xf66704e9

----------------
IN: 
0xf66704b5:  mov    (%eax),%ecx
0xf66704b7:  add    $0x4,%eax
0xf66704ba:  sub    %ecx,%edx
0xf66704bc:  add    $0xfefefeff,%ecx
0xf66704c2:  dec    %edx
0xf66704c3:  jae    0xf66704e9

----------------
IN: 
0xf66704c5:  xor    %ecx,%edx
0xf66704c7:  and    $0x1010100,%edx
0xf66704cd:  jne    0xf66704e9

----------------
IN: 
0xf66704cf:  mov    (%eax),%ecx
0xf66704d1:  add    $0x4,%eax
0xf66704d4:  sub    %ecx,%edx
0xf66704d6:  add    $0xfefefeff,%ecx
0xf66704dc:  dec    %edx
0xf66704dd:  jae    0xf66704e9

----------------
IN: 
0xf66704df:  xor    %ecx,%edx
0xf66704e1:  and    $0x1010100,%edx
0xf66704e7:  je     0xf6670481

----------------
IN: 
0xf66704e9:  sub    $0x4,%eax
0xf66704ec:  sub    $0xfefefeff,%ecx
0xf66704f2:  cmp    $0x0,%cl
0xf66704f5:  je     0xf6670506

----------------
IN: 
0xf66704f7:  inc    %eax
0xf66704f8:  test   %ch,%ch
0xf66704fa:  je     0xf6670506

----------------
IN: 
0xf6670506:  sub    0x4(%esp),%eax
0xf667050a:  ret    


ret [pc: f665acbc, cc: f665ae4f]
----------------
IN: 
0xf665acbc:  mov    0xdfc(%ebx),%edx
0xf665acc2:  mov    %eax,%esi
0xf665acc4:  add    $0x10,%esp
0xf665acc7:  mov    (%edx),%eax
0xf665acc9:  mov    %edx,-0x1c(%ebp)
0xf665accc:  and    $0x8000,%eax
0xf665acd1:  mov    %eax,-0x20(%ebp)
0xf665acd4:  jne    0xf665ad1e

----------------
IN: 
0xf665acd6:  mov    0x48(%edx),%ecx
0xf665acd9:  mov    %gs:0x8,%edi
0xf665ace0:  mov    %edi,%eax
0xf665ace2:  cmp    0x8(%ecx),%eax
0xf665ace5:  mov    %ecx,%edi
0xf665ace7:  mov    %eax,-0x24(%ebp)
0xf665acea:  je     0xf665ad1a

----------------
IN: 
0xf665acec:  mov    -0x20(%ebp),%eax
0xf665acef:  mov    $0x1,%ecx
0xf665acf4:  cmpl   $0x0,%gs:0xc
0xf665acfc:  je     0xf665acff

----------------
IN: 
0xf665acff:  cmpxchg %ecx,(%edi)
0xf665ad02:  je     0xf665ad0b

----------------
IN: 
0xf665ad0b:  mov    0x48(%edx),%ecx
0xf665ad0e:  mov    -0x24(%ebp),%eax
0xf665ad11:  mov    0xdfc(%ebx),%edx
0xf665ad17:  mov    %eax,0x8(%ecx)
0xf665ad1a:  addl   $0x1,0x4(%ecx)
0xf665ad1e:  movsbl 0x46(%edx),%eax
0xf665ad22:  test   %al,%al
0xf665ad24:  jne    0xf665ad4e

----------------
IN: 
0xf665ad26:  mov    -0xf4(%ebx),%eax
0xf665ad2c:  test   %eax,%eax
0xf665ad2e:  je     0xf665ae20

----------------
IN: 
0xf665ad34:  mov    0x68(%edx),%eax
0xf665ad37:  test   %eax,%eax
0xf665ad39:  je     0xf665ada8

----------------
IN: 
0xf665ada8:  movl   $0xffffffff,0x68(%edx)
0xf665adaf:  jmp    0xf665ad4a

----------------
IN: 
0xf665ad4a:  movsbl 0x46(%edx),%eax
0xf665ad4e:  mov    0x94(%edx,%eax,1),%eax
0xf665ad55:  sub    $0x4,%esp
0xf665ad58:  push   %esi
0xf665ad59:  pushl  0x8(%ebp)
0xf665ad5c:  push   %edx
0xf665ad5d:  call   *0x1c(%eax)


call [pc: f665ad60, cc: 0000032f]
----------------
IN: 
0xf66645f0:  push   %ebp
0xf66645f1:  push   %edi
0xf66645f2:  xor    %eax,%eax
0xf66645f4:  push   %esi
0xf66645f5:  push   %ebx
0xf66645f6:  sub    $0xc,%esp
0xf66645f9:  mov    0x28(%esp),%esi
0xf66645fd:  mov    0x20(%esp),%ebx
0xf6664601:  test   %esi,%esi
0xf6664603:  je     0xf6664660

----------------
IN: 
0xf6664605:  mov    (%ebx),%eax
0xf6664607:  and    $0xa00,%eax
0xf666460c:  cmp    $0xa00,%eax
0xf6664611:  je     0xf66646d0

----------------
IN: 
0xf6664617:  mov    0x18(%ebx),%eax
0xf666461a:  mov    0x14(%ebx),%edx
0xf666461d:  cmp    %edx,%eax
0xf666461f:  jbe    0xf6664670

----------------
IN: 
0xf6664670:  movsbl 0x46(%ebx),%eax
0xf6664674:  sub    $0x8,%esp
0xf6664677:  mov    0x94(%ebx,%eax,1),%eax
0xf666467e:  push   $0xffffffff
0xf6664680:  push   %ebx
0xf6664681:  call   *0xc(%eax)


call [pc: f6664684, cc: f66645ab]
----------------
IN: 
0xf66653a0:  push   %edi
0xf66653a1:  push   %esi
0xf66653a2:  push   %ebx
0xf66653a3:  mov    0x10(%esp),%ebx
0xf66653a7:  call   0xf671a99d


call [pc: f66653ac, cc: 00001607]

ret [pc: f66653ac, cc: f66645ab]
----------------
IN: 
0xf66653ac:  add    $0x147c54,%edx
0xf66653b2:  mov    0x14(%esp),%esi
0xf66653b6:  mov    (%ebx),%eax
0xf66653b8:  test   $0x8,%al
0xf66653ba:  jne    0xf6665530

----------------
IN: 
0xf66653c0:  test   $0x8,%ah
0xf66653c3:  je     0xf6665410

----------------
IN: 
0xf6665410:  mov    0x10(%ebx),%edi
0xf6665413:  test   %edi,%edi
0xf6665415:  je     0xf6665558

----------------
IN: 
0xf6665558:  sub    $0xc,%esp
0xf666555b:  push   %ebx
0xf666555c:  call   0xf6666180


call [pc: f6665561, cc: 000010ca]
----------------
IN: 
0xf6666180:  push   %ebp
0xf6666181:  push   %edi
0xf6666182:  push   %esi
0xf6666183:  push   %ebx
0xf6666184:  call   0xf671a995


call [pc: f6666189, cc: f6667143]

ret [pc: f6666189, cc: 000010ca]
----------------
IN: 
0xf6666189:  add    $0x146e77,%ebx
0xf666618f:  sub    $0xc,%esp
0xf6666192:  mov    0x20(%esp),%esi
0xf6666196:  mov    0x1c(%esi),%ecx
0xf6666199:  test   %ecx,%ecx
0xf666619b:  je     0xf66661a8

----------------
IN: 
0xf66661a8:  mov    (%esi),%eax
0xf66661aa:  test   $0x2,%al
0xf66661ac:  je     0xf66661b5

----------------
IN: 
0xf66661b5:  movsbl 0x46(%esi),%eax
0xf66661b9:  sub    $0xc,%esp
0xf66661bc:  mov    0x94(%esi,%eax,1),%eax
0xf66661c3:  push   %esi
0xf66661c4:  call   *0x34(%eax)


call [pc: f66661c7, cc: f666710d]
----------------
IN: 
0xf66588c0:  push   %ebp
0xf66588c1:  push   %edi
0xf66588c2:  push   %esi
0xf66588c3:  push   %ebx
0xf66588c4:  call   0xf671a995


call [pc: f66588c9, cc: 0003f9c4]

ret [pc: f66588c9, cc: f666710d]
----------------
IN: 
0xf66588c9:  add    $0x154737,%ebx
0xf66588cf:  sub    $0x7c,%esp
0xf66588d2:  mov    0x90(%esp),%esi
0xf66588d9:  mov    0x38(%esi),%edi
0xf66588dc:  test   %edi,%edi
0xf66588de:  js     0xf6658920

----------------
IN: 
0xf66588e0:  movsbl 0x46(%esi),%eax
0xf66588e4:  sub    $0x8,%esp
0xf66588e7:  lea    0x18(%esp),%edx
0xf66588eb:  mov    0x94(%esi,%eax,1),%eax
0xf66588f2:  push   %edx
0xf66588f3:  push   %esi
0xf66588f4:  call   *0x48(%eax)


call [pc: f66588f7, cc: 0003f9fa]
----------------
IN: 
0xf6664030:  sub    $0x10,%esp
0xf6664033:  pushl  0x18(%esp)
0xf6664037:  mov    0x18(%esp),%eax
0xf666403b:  pushl  0x38(%eax)
0xf666403e:  push   $0x3
0xf6664040:  call   0xf66d0040


call [pc: f6664045, cc: f665b9bf]
----------------
IN: 
0xf66d0040:  push   %ebx
0xf66d0041:  mov    $0xc5,%eax
0xf66d0046:  mov    0x10(%esp),%ecx
0xf66d004a:  mov    0xc(%esp),%ebx
0xf66d004e:  call   *%gs:0x10


call [pc: f66d0055, cc: 0008b9ea]
----------------
IN: 
0xf67daaa0:  int    $0x80

----------------
IN: 
0xf67daaa2:  ret    


ret [pc: f66d0055, cc: f665b9bf]
----------------
IN: 
0xf66d0055:  cmp    $0xfffff000,%eax
0xf66d005a:  ja     0xf66d0060

----------------
IN: 
0xf66d005c:  pop    %ebx
0xf66d005d:  ret    


ret [pc: f6664045, cc: 0003f9fa]
----------------
IN: 
0xf6664045:  add    $0x1c,%esp
0xf6664048:  ret    


ret [pc: f66588f7, cc: f666710d]
----------------
IN: 
0xf66588f7:  add    $0x10,%esp
0xf66588fa:  test   %eax,%eax
0xf66588fc:  js     0xf6658920

----------------
IN: 
0xf66588fe:  mov    0x20(%esp),%eax
0xf6658902:  and    $0xf000,%eax
0xf6658907:  cmp    $0x2000,%eax
0xf665890c:  je     0xf6658958

----------------
IN: 
0xf6658958:  mov    0x30(%esp),%edi
0xf665895c:  mov    0x34(%esp),%ebp
0xf6658960:  mov    %edi,%eax
0xf6658962:  mov    %ebp,%edx
0xf6658964:  shrd   $0x8,%ebp,%eax
0xf6658968:  and    $0xfffff000,%edx
0xf665896e:  and    $0xfff,%eax
0xf6658973:  or     %edx,%eax
0xf6658975:  sub    $0x88,%eax
0xf665897a:  cmp    $0x7,%eax
0xf665897d:  ja     0xf66589a0

----------------
IN: 
0xf665897f:  orl    $0x200,(%esi)
0xf6658985:  jmp    0xf665890e

----------------
IN: 
0xf665890e:  mov    0x44(%esp),%ebp
0xf6658912:  test   %ebp,%ebp
0xf6658914:  jg     0xf6658925

----------------
IN: 
0xf6658925:  sub    $0xc,%esp
0xf6658928:  push   %ebp
0xf6658929:  call   0xf6612740


call [pc: f665892e, cc: 0003f823]
----------------
IN: 
0xf6612740:  jmp    *-0xf0(%ebx)

----------------
IN: 
0xf666bd80:  push   %edi
0xf666bd81:  push   %esi
0xf666bd82:  call   0xf671a9a1


call [pc: f666bd87, cc: f66545a4]

ret [pc: f666bd87, cc: 0003f823]
----------------
IN: 
0xf666bd87:  add    $0x141279,%esi
0xf666bd8d:  push   %ebx
0xf666bd8e:  mov    0x10(%esp),%edi
0xf666bd92:  mov    -0xa0(%esi),%eax
0xf666bd98:  mov    (%eax),%eax
0xf666bd9a:  test   %eax,%eax
0xf666bd9c:  jne    0xf666be70

----------------
IN: 
0xf666be70:  sub    $0x8,%esp
0xf666be73:  pushl  0x14(%esp)
0xf666be77:  push   %edi
0xf666be78:  call   *%eax


call [pc: f666be7a, cc: f6654659]
----------------
IN: 
0xf666d120:  push   %ebx
0xf666d121:  call   0xf671a999


call [pc: f666d126, cc: 0003977f]

ret [pc: f666d126, cc: f6654659]
----------------
IN: 
0xf666d126:  add    $0x13feda,%eax
0xf666d12b:  sub    $0x8,%esp
0xf666d12e:  mov    -0xa0(%eax),%edx
0xf666d134:  mov    0x104(%eax),%eax
0xf666d13a:  mov    0x10(%esp),%ebx
0xf666d13e:  test   %eax,%eax
0xf666d140:  movl   $0x0,(%edx)
0xf666d146:  js     0xf666d158

----------------
IN: 
0xf666d158:  call   0xf666ccc0


call [pc: f666d15d, cc: 00039704]
----------------
IN: 
0xf666ccc0:  push   %ebp
0xf666ccc1:  push   %edi
0xf666ccc2:  push   %esi
0xf666ccc3:  push   %ebx
0xf666ccc4:  call   0xf671a995


call [pc: f666ccc9, cc: f6655bcd]

ret [pc: f666ccc9, cc: 00039704]
----------------
IN: 
0xf666ccc9:  add    $0x140337,%ebx
0xf666cccf:  sub    $0x3c,%esp
0xf666ccd2:  mov    0x35d4(%ebx),%edi
0xf666ccd8:  movl   $0x0,0x104(%ebx)
0xf666cce2:  test   %edi,%edi
0xf666cce4:  je     0xf666cdfa

----------------
IN: 
0xf666cdfa:  lea    0x1c(%esp),%ecx
0xf666cdfe:  lea    0x20(%esp),%edx
0xf666ce02:  sub    $0xc,%esp
0xf666ce05:  push   $0x0
0xf666ce07:  lea    -0x13ff10(%ebx),%eax
0xf666ce0d:  call   0xf67179c0


call [pc: f666ce12, cc: f6655916]
----------------
IN: 
0xf67179c0:  push   %ebp
0xf67179c1:  push   %edi
0xf67179c2:  mov    %eax,%ebp
0xf67179c4:  push   %esi
0xf67179c5:  push   %ebx
0xf67179c6:  mov    %edx,%esi
0xf67179c8:  call   0xf671a995


call [pc: f67179cd, cc: 001420db]

ret [pc: f67179cd, cc: f6655916]
----------------
IN: 
0xf67179cd:  add    $0x95633,%ebx
0xf67179d3:  sub    $0x48,%esp
0xf67179d6:  mov    -0x118(%ebx),%eax
0xf67179dc:  mov    %edx,0x30(%esp)
0xf67179e0:  mov    %ecx,0x34(%esp)
0xf67179e4:  mov    %eax,0x2c(%esp)
0xf67179e8:  mov    %eax,%edi
0xf67179ea:  add    $0x4c4,%eax
0xf67179ef:  push   %eax
0xf67179f0:  call   *0x7f8(%edi)


call [pc: f67179f6, cc: 001420e0]

ret [pc: f67179f6, cc: f6655916]
----------------
IN: 
0xf67179f6:  mov    %ebp,%eax
0xf67179f8:  call   0xf6612710


call [pc: f67179fd, cc: 001420eb]
----------------
IN: 
0xf6612710:  jmp    *0x24(%ebx)

----------------
IN: 
0xf6612716:  push   $0x18
0xf661271b:  jmp    0xf66126a0

----------------
IN: 
0xf66126a0:  pushl  0x4(%ebx)
0xf66126a6:  jmp    *0x8(%ebx)


call [pc: f67eef10, cc: f66acffb]

call [pc: f67e86eb, cc: 00144910]

ret [pc: f67e86eb, cc: f66acffb]

call [pc: f67e87a2, cc: 00144859]

call [pc: f67e3970, cc: f66a7129]

ret [pc: f67e3970, cc: 00144859]

call [pc: f67e3a4b, cc: f66a7212]

call [pc: f67e2ec9, cc: 00145cdb]

ret [pc: f67e2ec9, cc: f66a7212]

call [pc: f67e2ffb, cc: 00145de9]

call [pc: f67ea16c, cc: f66afc85]

ret [pc: f67ea16c, cc: 00145de9]

call [pc: f67ea17e, cc: f66afc97]

ret [pc: f67ea17e, cc: 00145de9]

call [pc: f67ea1a2, cc: f66afc4b]

ret [pc: f67ea1a2, cc: 00145de9]

ret [pc: f67e2ffb, cc: f66a7212]

call [pc: f67e2ffb, cc: 00145de9]

call [pc: f67ea16c, cc: f66afc85]

ret [pc: f67ea16c, cc: 00145de9]

call [pc: f67ea17e, cc: f66afc97]

ret [pc: f67ea17e, cc: 00145de9]

call [pc: f67ea1a2, cc: f66afc4b]

ret [pc: f67ea1a2, cc: 00145de9]

ret [pc: f67e2ffb, cc: f66a7212]

call [pc: f67e353d, cc: 0014472f]

call [pc: f67e2d39, cc: f66a6a16]

ret [pc: f67e2d39, cc: 0014472f]

call [pc: f67e2da0, cc: f66a6a8f]

ret [pc: f67e2da0, cc: 0014472f]

call [pc: f67e2e60, cc: f66a694f]

ret [pc: f67e2e60, cc: 0014472f]

ret [pc: f67e353d, cc: f66a7212]

ret [pc: f67e3a4b, cc: 00144859]

ret [pc: f67e87a2, cc: f66acffb]

ret [pc: f67eef10, cc: 001420eb]

ret [pc: f67ecd50, cc: f66aedbb]
----------------
IN: 
0xf67ecd50:  push   %ebp
0xf67ecd51:  push   %edi
0xf67ecd52:  mov    %eax,%edi
0xf67ecd54:  push   %esi
0xf67ecd55:  push   %ebx
0xf67ecd56:  call   0xf67f360d


call [pc: f67ecd5b, cc: 001420e0]

ret [pc: f67ecd5b, cc: f66aedbb]
----------------
IN: 
0xf67ecd5b:  add    $0x112a5,%esi
0xf67ecd61:  sub    $0x1c,%esp
0xf67ecd64:  mov    0x4e0(%esi),%eax
0xf67ecd6a:  mov    %esi,0xc(%esp)
0xf67ecd6e:  test   %eax,%eax
0xf67ecd70:  mov    %eax,0x8(%esp)
0xf67ecd74:  je     0xf67ece25

----------------
IN: 
0xf67ecd7a:  lea    0x20(%esi),%eax
0xf67ecd80:  movl   $0x0,(%esp)
0xf67ecd87:  mov    %eax,0x4(%esp)
0xf67ecd8b:  mov    0x4(%esp),%eax
0xf67ecd8f:  mov    (%eax),%eax
0xf67ecd91:  test   %eax,%eax
0xf67ecd93:  je     0xf67ece0f

----------------
IN: 
0xf67ecd95:  lea    0x0(%esi),%esi
0xf67ecd98:  cmp    %edi,0x1ac(%eax)
0xf67ecd9e:  ja     0xf67ece08

----------------
IN: 
0xf67ecda0:  cmp    0x1b0(%eax),%edi
0xf67ecda6:  jae    0xf67ece08

----------------
IN: 
0xf67ece08:  mov    0xc(%eax),%eax
0xf67ece0b:  test   %eax,%eax
0xf67ece0d:  jne    0xf67ecd98

----------------
IN: 
0xf67ecd98:  cmp    %edi,0x1ac(%eax)
0xf67ecd9e:  ja     0xf67ece08

----------------
IN: 
0xf67ecda8:  testb  $0x40,0x195(%eax)
0xf67ecdaf:  jne    0xf67ecdf2

----------------
IN: 
0xf67ecdf2:  mov    (%esp),%edi
0xf67ecdf5:  cmp    %edi,0x18(%eax)
0xf67ecdf8:  jne    0xf67ece2f

----------------
IN: 
0xf67ecdfa:  add    $0x1c,%esp
0xf67ecdfd:  pop    %ebx
0xf67ecdfe:  pop    %esi
0xf67ecdff:  pop    %edi
0xf67ece00:  pop    %ebp
0xf67ece01:  ret    


ret [pc: f67179fd, cc: 001b9446]
----------------
IN: 
0xf67179fd:  add    $0x10,%esp
0xf6717a00:  test   %eax,%eax
0xf6717a02:  je     0xf6717c74

----------------
IN: 
0xf6717a08:  mov    0x4(%eax),%edx
0xf6717a0b:  mov    0x1ac(%eax),%ecx
0xf6717a11:  mov    %edx,(%esi)
0xf6717a13:  mov    %ecx,0x4(%esi)
0xf6717a16:  cmpb   $0x0,(%edx)
0xf6717a19:  je     0xf6717c7b

----------------
IN: 
0xf6717a1f:  mov    0x38(%eax),%edx
0xf6717a22:  mov    0x4(%edx),%ecx
0xf6717a25:  mov    %ecx,0x18(%esp)
0xf6717a29:  mov    %ecx,%edx
0xf6717a2b:  mov    0x34(%eax),%ecx
0xf6717a2e:  mov    0x4(%ecx),%edi
0xf6717a31:  mov    0x48(%eax),%ecx
0xf6717a34:  mov    %edi,0x2c(%esp)
0xf6717a38:  mov    0x14c(%eax),%edi
0xf6717a3e:  mov    0x4(%ecx),%ecx
0xf6717a41:  test   %edi,%edi
0xf6717a43:  mov    %ecx,0x1c(%esp)
0xf6717a47:  je     0xf6717ba5

----------------
IN: 
0xf6717a4d:  mov    0x178(%eax),%edx
0xf6717a53:  test   %edx,%edx
0xf6717a55:  je     0xf6717c9d

----------------
IN: 
0xf6717a5b:  mov    0x188(%eax),%ebx
0xf6717a61:  movl   $0x0,0x10(%esp)
0xf6717a69:  lea    (%ebx,%edx,4),%edi
0xf6717a6c:  mov    %ebx,0x8(%esp)
0xf6717a70:  mov    %edi,0x14(%esp)
0xf6717a74:  lea    0x0(%esi),%esi
0xf6717a78:  mov    0x8(%esp),%edi
0xf6717a7c:  mov    (%edi),%edx
0xf6717a7e:  test   %edx,%edx
0xf6717a80:  je     0xf6717b2c

----------------
IN: 
0xf6717b2c:  addl   $0x4,0x8(%esp)
0xf6717b31:  mov    0x8(%esp),%edi
0xf6717b35:  cmp    0x14(%esp),%edi
0xf6717b39:  jne    0xf6717a78

----------------
IN: 
0xf6717a78:  mov    0x8(%esp),%edi
0xf6717a7c:  mov    (%edi),%edx
0xf6717a7e:  test   %edx,%edx
0xf6717a80:  je     0xf6717b2c

----------------
IN: 
0xf6717a86:  mov    0x18c(%eax),%ecx
0xf6717a8c:  mov    %eax,0xc(%esp)
0xf6717a90:  lea    (%ecx,%edx,4),%ecx
0xf6717a93:  shl    $0x4,%edx
0xf6717a96:  add    0x18(%esp),%edx
0xf6717a9a:  jmp    0xf6717abc

----------------
IN: 
0xf6717abc:  movzwl 0xe(%edx),%ebx
0xf6717ac0:  test   %bx,%bx
0xf6717ac3:  jne    0xf6717acc

----------------
IN: 
0xf6717acc:  movzbl 0xc(%edx),%esi
0xf6717ad0:  and    $0xf,%esi
0xf6717ad3:  mov    %esi,%eax
0xf6717ad5:  cmp    $0x6,%al
0xf6717ad7:  je     0xf6717ab0

----------------
IN: 
0xf6717ad9:  mov    0x4(%edx),%edi
0xf6717adc:  mov    0xc(%esp),%eax
0xf6717ae0:  mov    %edi,%esi
0xf6717ae2:  add    (%eax),%esi
0xf6717ae4:  cmp    %esi,%ebp
0xf6717ae6:  jb     0xf6717ab0

----------------
IN: 
0xf6717ae8:  test   %bx,%bx
0xf6717aeb:  jne    0xf6717aa0

----------------
IN: 
0xf6717aa0:  mov    0x8(%edx),%ebx
0xf6717aa3:  test   %ebx,%ebx
0xf6717aa5:  jne    0xf6717af4

----------------
IN: 
0xf6717af4:  add    %ebx,%esi
0xf6717af6:  cmp    %esi,%ebp
0xf6717af8:  jae    0xf6717ab0

----------------
IN: 
0xf6717ab0:  add    $0x4,%ecx
0xf6717ab3:  add    $0x10,%edx
0xf6717ab6:  testb  $0x1,-0x4(%ecx)
0xf6717aba:  jne    0xf6717b28

----------------
IN: 
0xf6717b28:  mov    0xc(%esp),%eax
0xf6717b2c:  addl   $0x4,0x8(%esp)
0xf6717b31:  mov    0x8(%esp),%edi
0xf6717b35:  cmp    0x14(%esp),%edi
0xf6717b39:  jne    0xf6717a78

----------------
IN: 
0xf6717aa7:  cmp    %esi,%ebp
0xf6717aa9:  je     0xf6717afa

----------------
IN: 
0xf6717aab:  nop    
0xf6717aac:  lea    0x0(%esi),%esi
0xf6717ab0:  add    $0x4,%ecx
0xf6717ab3:  add    $0x10,%edx
0xf6717ab6:  testb  $0x1,-0x4(%ecx)
0xf6717aba:  jne    0xf6717b28

----------------
IN: 
0xf6717b3f:  mov    0x28(%esp),%ebx
0xf6717b43:  test   %ebx,%ebx
0xf6717b45:  je     0xf6717b49

----------------
IN: 
0xf6717b47:  mov    %eax,(%ebx)
0xf6717b49:  mov    0x50(%esp),%ecx
0xf6717b4d:  test   %ecx,%ecx
0xf6717b4f:  je     0xf6717b5b

----------------
IN: 
0xf6717b5b:  mov    0x10(%esp),%edx
0xf6717b5f:  test   %edx,%edx
0xf6717b61:  je     0xf6717c58

----------------
IN: 
0xf6717c58:  mov    0x24(%esp),%eax
0xf6717c5c:  mov    $0x1,%ebx
0xf6717c61:  movl   $0x0,0x8(%eax)
0xf6717c68:  movl   $0x0,0xc(%eax)
0xf6717c6f:  jmp    0xf6717b85

----------------
IN: 
0xf6717b85:  sub    $0xc,%esp
0xf6717b88:  mov    0x2c(%esp),%eax
0xf6717b8c:  lea    0x4c4(%eax),%edx
0xf6717b92:  push   %edx
0xf6717b93:  call   *0x7fc(%eax)


call [pc: f6717b99, cc: f66aefdf]

ret [pc: f6717b99, cc: 001b9446]
----------------
IN: 
0xf6717b99:  add    $0x4c,%esp
0xf6717b9c:  mov    %ebx,%eax
0xf6717b9e:  pop    %ebx
0xf6717b9f:  pop    %esi
0xf6717ba0:  pop    %edi
0xf6717ba1:  pop    %ebp
0xf6717ba2:  ret    $0x4


ret [pc: f666ce12, cc: f67d5a54]
----------------
IN: 
0xf666ce12:  add    $0xc,%esp
0xf666ce15:  test   %eax,%eax
0xf666ce17:  je     0xf666ccf8

----------------
IN: 
0xf666ce1d:  mov    0x1c(%esp),%eax
0xf666ce21:  mov    0x18(%eax),%esi
0xf666ce24:  test   %esi,%esi
0xf666ce26:  jne    0xf666ccea

----------------
IN: 
0xf666ce2c:  jmp    0xf666ccf8

----------------
IN: 
0xf666ccf8:  mov    -0x158(%ebx),%edx
0xf666ccfe:  mov    %gs:0x0,%ecx
0xf666cd05:  lea    0x780(%ebx),%eax
0xf666cd0b:  mov    %eax,(%ecx,%edx,1)
0xf666cd0e:  mov    -0x120(%ebx),%eax
0xf666cd14:  mov    (%eax),%edi
0xf666cd16:  test   %edi,%edi
0xf666cd18:  je     0xf666cdb4

----------------
IN: 
0xf666cd1e:  mov    -0xfc(%ebx),%eax
0xf666cd24:  xor    %ebp,%ebp
0xf666cd26:  mov    %eax,0x4(%esp)
0xf666cd2a:  mov    %eax,%edx
0xf666cd2c:  jmp    0xf666cd33

----------------
IN: 
0xf666cd33:  mov    (%edi),%esi
0xf666cd35:  test   %esi,%esi
0xf666cd37:  je     0xf666cda8

----------------
IN: 
0xf666cd39:  cmpb   $0x4d,(%esi)
0xf666cd3c:  jne    0xf666cd30

----------------
IN: 
0xf666cd30:  add    $0x4,%edi
0xf666cd33:  mov    (%edi),%esi
0xf666cd35:  test   %esi,%esi
0xf666cd37:  je     0xf666cda8

----------------
IN: 
0xf666cd3e:  cmpb   $0x41,0x1(%esi)
0xf666cd42:  jne    0xf666cd30

----------------
IN: 
0xf666cd44:  cmpb   $0x4c,0x2(%esi)
0xf666cd48:  jne    0xf666cd30

----------------
IN: 
0xf666cda8:  test   %ebp,%ebp
0xf666cdaa:  je     0xf666cdb4

----------------
IN: 
0xf666cdb4:  mov    -0x138(%ebx),%eax
0xf666cdba:  mov    (%eax),%eax
0xf666cdbc:  test   %eax,%eax
0xf666cdbe:  je     0xf666cdc2

----------------
IN: 
0xf666cdc2:  movl   $0x1,0x104(%ebx)
0xf666cdcc:  add    $0x3c,%esp
0xf666cdcf:  pop    %ebx
0xf666cdd0:  pop    %esi
0xf666cdd1:  pop    %edi
0xf666cdd2:  pop    %ebp
0xf666cdd3:  ret    


ret [pc: f666d15d, cc: 001b8b09]
----------------
IN: 
0xf666d15d:  mov    %ebx,0x10(%esp)
0xf666d161:  add    $0x8,%esp
0xf666d164:  pop    %ebx
0xf666d165:  jmp    0xf666bd80


call [pc: f666bd87, cc: f67d368e]

ret [pc: f666bd87, cc: 001b8b09]
----------------
IN: 
0xf666bda2:  mov    -0x158(%esi),%eax
0xf666bda8:  mov    %gs:0x0,%edx
0xf666bdaf:  mov    (%edx,%eax,1),%ebx
0xf666bdb2:  test   %ebx,%ebx
0xf666bdb4:  je     0xf666bdbe

----------------
IN: 
0xf666bdb6:  mov    0x4(%ebx),%eax
0xf666bdb9:  and    $0x4,%eax
0xf666bdbc:  je     0xf666be20

----------------
IN: 
0xf666be20:  mov    $0x1,%ecx
0xf666be25:  cmpl   $0x0,%gs:0xc
0xf666be2d:  je     0xf666be30

----------------
IN: 
0xf666be30:  cmpxchg %ecx,(%ebx)
0xf666be33:  je     0xf666be3c

----------------
IN: 
0xf666be3c:  mov    %edi,%edx
0xf666be3e:  mov    %ebx,%eax
0xf666be40:  call   0xf6669f40


call [pc: f666be45, cc: f67d354c]
----------------
IN: 
0xf6669f40:  push   %ebp
0xf6669f41:  push   %edi
0xf6669f42:  push   %esi
0xf6669f43:  push   %ebx
0xf6669f44:  call   0xf671a9a5


call [pc: f6669f49, cc: 001baa05]

ret [pc: f6669f49, cc: f67d354c]
----------------
IN: 
0xf6669f49:  add    $0x1430b7,%edi
0xf6669f4f:  sub    $0x5c,%esp
0xf6669f52:  cmp    $0xffffffdf,%edx
0xf6669f55:  mov    %edi,0x10(%esp)
0xf6669f59:  ja     0xf666a614

----------------
IN: 
0xf6669f5f:  mov    %eax,%ebp
0xf6669f61:  mov    %edx,%eax
0xf6669f63:  mov    %edx,0x1c(%esp)
0xf6669f67:  add    $0xb,%eax
0xf6669f6a:  mov    %eax,%edx
0xf6669f6c:  and    $0xfffffff8,%edx
0xf6669f6f:  cmp    $0x10,%eax
0xf6669f72:  mov    $0x10,%eax
0xf6669f77:  cmovae %edx,%eax
0xf6669f7a:  test   %ebp,%ebp
0xf6669f7c:  mov    %eax,0x4(%esp)
0xf6669f80:  je     0xf666a634

----------------
IN: 
0xf6669f86:  mov    0x10(%esp),%edi
0xf6669f8a:  mov    0x4(%esp),%eax
0xf6669f8e:  cmp    0x18e0(%edi),%eax
0xf6669f94:  ja     0xf6669ff1

----------------
IN: 
0xf6669ff1:  mov    0x4(%esp),%eax
0xf6669ff5:  cmp    $0x1ff,%eax
0xf6669ffa:  ja     0xf666a04b

----------------
IN: 
0xf666a04b:  mov    0x4(%esp),%eax
0xf666a04f:  shr    $0x6,%eax
0xf666a052:  cmp    $0x26,%eax
0xf666a055:  jbe    0xf666a608

----------------
IN: 
0xf666a608:  add    $0x38,%eax
0xf666a60b:  mov    %eax,0x18(%esp)
0xf666a60f:  jmp    0xf666a072

----------------
IN: 
0xf666a072:  testb  $0x1,0x4(%ebp)
0xf666a076:  jne    0xf666a07f

----------------
IN: 
0xf666a078:  mov    %ebp,%eax
0xf666a07a:  call   0xf6668480


call [pc: f666a07f, cc: 001b9533]
----------------
IN: 
0xf6668480:  push   %ebp
0xf6668481:  push   %edi
0xf6668482:  call   0xf671a9a5


call [pc: f6668487, cc: f67d11b4]

ret [pc: f6668487, cc: 001b9533]
----------------
IN: 
0xf6668487:  add    $0x144b79,%edi
0xf666848d:  push   %esi
0xf666848e:  push   %ebx
0xf666848f:  sub    $0x3c,%esp
0xf6668492:  mov    0x18e0(%edi),%ebx
0xf6668498:  mov    %edi,0x20(%esp)
0xf666849c:  test   %ebx,%ebx
0xf666849e:  je     0xf66686e9

----------------
IN: 
0xf66686e9:  add    $0x3c,%esp
0xf66686ec:  pop    %ebx
0xf66686ed:  pop    %esi
0xf66686ee:  pop    %edi
0xf66686ef:  pop    %ebp
0xf66686f0:  jmp    0xf6667a90

----------------
IN: 
0xf6667a90:  push   %esi
0xf6667a91:  push   %ebx
0xf6667a92:  lea    0x30(%eax),%ebx
0xf6667a95:  call   0xf671a9a1


call [pc: f6667a9a, cc: f67defa9]

ret [pc: f6667a9a, cc: 001b9533]
----------------
IN: 
0xf6667a9a:  add    $0x145566,%esi
0xf6667aa0:  lea    0x428(%eax),%ecx
0xf6667aa6:  mov    %ebx,%edx
0xf6667aa8:  nop    
0xf6667aa9:  lea    0x0(%esi),%esi
0xf6667ab0:  mov    %edx,0xc(%edx)
0xf6667ab3:  mov    %edx,0x8(%edx)
0xf6667ab6:  add    $0x8,%edx
0xf6667ab9:  cmp    %edx,%ecx
0xf6667abb:  jne    0xf6667ab0

----------------
IN: 
0xf6667ab0:  mov    %edx,0xc(%edx)
0xf6667ab3:  mov    %edx,0x8(%edx)
0xf6667ab6:  add    $0x8,%edx
0xf6667ab9:  cmp    %edx,%ecx
0xf6667abb:  jne    0xf6667ab0

----------------
IN: 
0xf6667abd:  lea    0x780(%esi),%edx
0xf6667ac3:  cmp    %edx,%eax
0xf6667ac5:  je     0xf6667ad9

----------------
IN: 
0xf6667ad9:  mov    0x784(%esi),%edx
0xf6667adf:  movl   $0x40,0x18e0(%esi)
0xf6667ae9:  mov    %ebx,0x30(%eax)
0xf6667aec:  pop    %ebx
0xf6667aed:  or     $0x1,%edx
0xf6667af0:  mov    %edx,0x4(%eax)
0xf6667af3:  pop    %esi
0xf6667af4:  ret    


ret [pc: f666a07f, cc: f67d354c]
----------------
IN: 
0xf666a07f:  mov    0x4(%esp),%ecx
0xf666a083:  lea    0x30(%ebp),%eax
0xf666a086:  mov    %eax,(%esp)
0xf666a089:  mov    %ecx,%eax
0xf666a08b:  mov    %ecx,%ebx
0xf666a08d:  mov    %ecx,%esi
0xf666a08f:  shr    $0x6,%eax
0xf666a092:  shr    $0xc,%ebx
0xf666a095:  shr    $0xf,%esi
0xf666a098:  mov    %eax,0x28(%esp)
0xf666a09c:  add    $0x38,%eax
0xf666a09f:  mov    %ebx,0x38(%esp)
0xf666a0a3:  mov    %eax,0x2c(%esp)
0xf666a0a7:  mov    0x10(%esp),%eax
0xf666a0ab:  lea    0x6e(%ebx),%ebx
0xf666a0ae:  mov    %ecx,%edi
0xf666a0b0:  mov    %esi,0x40(%esp)
0xf666a0b4:  lea    0x77(%esi),%esi
0xf666a0b7:  shr    $0x9,%edi
0xf666a0ba:  mov    %ebx,0x3c(%esp)
0xf666a0be:  mov    %ecx,%ebx
0xf666a0c0:  lea    -0x5582a(%eax),%eax
0xf666a0c6:  mov    %edi,0x30(%esp)
0xf666a0ca:  mov    %esi,0x44(%esp)
0xf666a0ce:  add    $0x5b,%edi
0xf666a0d1:  mov    %ebx,%esi
0xf666a0d3:  shr    $0x12,%ebx
0xf666a0d6:  mov    %ebx,0x48(%esp)
0xf666a0da:  mov    %edi,0x34(%esp)
0xf666a0de:  lea    0x7c(%ebx),%ebx
0xf666a0e1:  mov    %esi,%edi
0xf666a0e3:  mov    %eax,0x14(%esp)
0xf666a0e7:  lea    0x10(%esi),%eax
0xf666a0ea:  shr    $0x3,%edi
0xf666a0ed:  mov    %ebx,0x4c(%esp)
0xf666a0f1:  mov    %edi,0x24(%esp)
0xf666a0f5:  mov    %eax,0x20(%esp)
0xf666a0f9:  movl   $0x2710,0xc(%esp)
0xf666a101:  jmp    0xf666a144

----------------
IN: 
0xf666a144:  mov    0x3c(%ebp),%esi
0xf666a147:  cmp    (%esp),%esi
0xf666a14a:  je     0xf666a3d9

----------------
IN: 
0xf666a3d9:  cmpl   $0x1ff,0x4(%esp)
0xf666a3e1:  ja     0xf666a557

----------------
IN: 
0xf666a557:  mov    0x18(%esp),%eax
0xf666a55b:  lea    0x28(%ebp,%eax,8),%eax
0xf666a55f:  mov    0x8(%eax),%edx
0xf666a562:  lea    0x8(%eax),%ecx
0xf666a565:  cmp    %eax,%edx
0xf666a567:  je     0xf666a3e7

----------------
IN: 
0xf666a3e7:  mov    0x18(%esp),%eax
0xf666a3eb:  lea    0x1(%eax),%ecx
0xf666a3ee:  lea    0x30(%ebp,%eax,8),%edx
0xf666a3f2:  mov    $0x1,%eax
0xf666a3f7:  mov    %ecx,%edi
0xf666a3f9:  shl    %cl,%eax
0xf666a3fb:  shr    $0x5,%edi
0xf666a3fe:  mov    0x430(%ebp,%edi,4),%esi
0xf666a405:  cmp    %esi,%eax
0xf666a407:  ja     0xf666a44f

----------------
IN: 
0xf666a44f:  add    $0x1,%edi
0xf666a452:  cmp    $0x3,%edi
0xf666a455:  jbe    0xf666a440

----------------
IN: 
0xf666a440:  mov    0x430(%ebp,%edi,4),%esi
0xf666a447:  test   %esi,%esi
0xf666a449:  jne    0xf666a4f8

----------------
IN: 
0xf666a457:  mov    0x30(%ebp),%edx
0xf666a45a:  mov    0x4(%edx),%eax
0xf666a45d:  and    $0xfffffff8,%eax
0xf666a460:  cmp    0x20(%esp),%eax
0xf666a464:  jae    0xf666a863

----------------
IN: 
0xf666a46a:  testb  $0x1,0x4(%ebp)
0xf666a46e:  jne    0xf666a81e

----------------
IN: 
0xf666a81e:  mov    0x4(%esp),%eax
0xf666a822:  mov    %ebp,%edx
0xf666a824:  call   0xf6669670


call [pc: f666a829, cc: 001b9d65]
----------------
IN: 
0xf6669670:  push   %ebp
0xf6669671:  push   %edi
0xf6669672:  mov    %eax,%ebp
0xf6669674:  push   %esi
0xf6669675:  push   %ebx
0xf6669676:  call   0xf671a995


call [pc: f666967b, cc: f67d0b1e]

ret [pc: f666967b, cc: 001b9d65]
----------------
IN: 
0xf666967b:  add    $0x143985,%ebx
0xf6669681:  sub    $0x3c,%esp
0xf6669684:  test   %edx,%edx
0xf6669686:  mov    -0xdc(%ebx),%eax
0xf666968c:  mov    0x10(%eax),%eax
0xf666968f:  mov    %eax,0xc(%esp)
0xf6669693:  je     0xf6669940

----------------
IN: 
0xf6669699:  cmp    %ebp,0x128(%ebx)
0xf666969f:  mov    %edx,%edi
0xf66696a1:  jbe    0xf6669830

----------------
IN: 
0xf66696a7:  movb   $0x0,0x20(%esp)
0xf66696ac:  lea    0x30(%edi),%eax
0xf66696af:  mov    %eax,0x18(%esp)
0xf66696b3:  mov    0xc(%esp),%eax
0xf66696b7:  lea    0x3(%eax,%ebp,1),%eax
0xf66696bb:  mov    %eax,0x28(%esp)
0xf66696bf:  mov    0x30(%edi),%eax
0xf66696c2:  mov    %eax,%edx
0xf66696c4:  mov    0x4(%eax),%eax
0xf66696c7:  mov    %edx,0x8(%esp)
0xf66696cb:  mov    %eax,%ecx
0xf66696cd:  and    $0xfffffff8,%ecx
0xf66696d0:  add    %ecx,%edx
0xf66696d2:  test   %ecx,%ecx
0xf66696d4:  mov    %edx,0x10(%esp)
0xf66696d8:  setne  %dl
0xf66696db:  mov    %edx,%esi
0xf66696dd:  mov    0x8(%esp),%edx
0xf66696e1:  cmp    0x18(%esp),%edx
0xf66696e5:  jne    0xf66697f0

----------------
IN: 
0xf66696eb:  mov    %esi,%edx
0xf66696ed:  test   %dl,%dl
0xf66696ef:  jne    0xf66697f0

----------------
IN: 
0xf66696f5:  lea    0x10(%ebp),%eax
0xf66696f8:  cmp    %eax,%ecx
0xf66696fa:  mov    %eax,0x14(%esp)
0xf66696fe:  jae    0xf6669e64

----------------
IN: 
0xf6669704:  lea    0x780(%ebx),%eax
0xf666970a:  cmp    %eax,%edi
0xf666970c:  mov    %eax,0x1c(%esp)
0xf6669710:  je     0xf66699e0

----------------
IN: 
0xf66699e0:  mov    %esi,%eax
0xf66699e2:  testb  $0x2,0x784(%ebx)
0xf66699e9:  mov    %ecx,0x18(%esp)
0xf66699ed:  mov    %al,0x28(%esp)
0xf66699f1:  mov    0x124(%ebx),%eax
0xf66699f7:  mov    0x10(%esp),%edx
0xf66699fb:  lea    0x10(%ebp,%eax,1),%esi
0xf66699ff:  je     0xf6669b50

----------------
IN: 
0xf6669b50:  mov    0xc(%esp),%eax
0xf6669b54:  sub    0x18(%esp),%esi
0xf6669b58:  lea    -0x1(%eax),%ecx
0xf6669b5b:  neg    %eax
0xf6669b5d:  mov    %eax,0x24(%esp)
0xf6669b61:  add    %ecx,%esi
0xf6669b63:  mov    %ecx,0x20(%esp)
0xf6669b67:  and    %eax,%esi
0xf6669b69:  test   %esi,%esi
0xf6669b6b:  mov    %esi,0x10(%esp)
0xf6669b6f:  mov    %esi,0xc(%esp)
0xf6669b73:  jg     0xf6669a2a

----------------
IN: 
0xf6669a2a:  mov    -0x134(%ebx),%eax
0xf6669a30:  mov    %edx,0x2c(%esp)
0xf6669a34:  sub    $0xc,%esp
0xf6669a37:  pushl  0x1c(%esp)
0xf6669a3b:  call   *(%eax)


call [pc: f6669a3d, cc: f67d0758]
----------------
IN: 
0xf666e230:  sub    $0x18,%esp
0xf666e233:  pushl  0x1c(%esp)
0xf666e237:  call   0xf66d9ef0


call [pc: f666e23c, cc: 001be564]
----------------
IN: 
0xf66d9ef0:  push   %ebp
0xf66d9ef1:  push   %edi
0xf66d9ef2:  push   %esi
0xf66d9ef3:  push   %ebx
0xf66d9ef4:  call   0xf671a995


call [pc: f66d9ef9, cc: f6767b9d]

ret [pc: f66d9ef9, cc: 001be564]
----------------
IN: 
0xf66d9ef9:  add    $0xd3107,%ebx
0xf66d9eff:  sub    $0xc,%esp
0xf66d9f02:  mov    -0xb4(%ebx),%ebp
0xf66d9f08:  mov    0x20(%esp),%edi
0xf66d9f0c:  mov    0x0(%ebp),%esi
0xf66d9f0f:  test   %esi,%esi
0xf66d9f11:  je     0xf66d9f58

----------------
IN: 
0xf66d9f58:  sub    $0xc,%esp
0xf66d9f5b:  push   $0x0
0xf66d9f5d:  call   0xf66d9eb0


call [pc: f66d9f62, cc: f6767a06]
----------------
IN: 
0xf66d9eb0:  push   %ebx
0xf66d9eb1:  mov    $0x2d,%eax
0xf66d9eb6:  mov    0x8(%esp),%ebx
0xf66d9eba:  call   0xf671a99d


call [pc: f66d9ebf, cc: 001be4b9]

ret [pc: f66d9ebf, cc: f6767a06]
----------------
IN: 
0xf66d9ebf:  add    $0xd3141,%edx
0xf66d9ec5:  call   *%gs:0x10


call [pc: f66d9ecc, cc: 001be4ca]

ret [pc: f66d9ecc, cc: f6767a06]
----------------
IN: 
0xf66d9ecc:  mov    -0xb4(%edx),%edx
0xf66d9ed2:  cmp    %eax,%ebx
0xf66d9ed4:  mov    %eax,(%edx)
0xf66d9ed6:  ja     0xf66d9ee0

----------------
IN: 
0xf66d9ed8:  xor    %eax,%eax
0xf66d9eda:  pop    %ebx
0xf66d9edb:  ret    


ret [pc: f66d9f62, cc: 001be564]
----------------
IN: 
0xf66d9f62:  add    $0x10,%esp
0xf66d9f65:  test   %eax,%eax
0xf66d9f67:  js     0xf66d9f43

----------------
IN: 
0xf66d9f69:  mov    0x0(%ebp),%esi
0xf66d9f6c:  jmp    0xf66d9f1d

----------------
IN: 
0xf66d9f1d:  cmp    $0x0,%edi
0xf66d9f20:  je     0xf66d9f48

----------------
IN: 
0xf66d9f22:  jle    0xf66d9f90

----------------
IN: 
0xf66d9f24:  mov    %esi,%eax
0xf66d9f26:  add    %edi,%eax
0xf66d9f28:  setb   %al
0xf66d9f2b:  test   %al,%al
0xf66d9f2d:  je     0xf66d9f70

----------------
IN: 
0xf66d9f70:  sub    $0xc,%esp
0xf66d9f73:  add    %esi,%edi
0xf66d9f75:  push   %edi
0xf66d9f76:  call   0xf66d9eb0


call [pc: f66d9f7b, cc: f6767a1f]

call [pc: f66d9ebf, cc: 001be4a0]

ret [pc: f66d9ebf, cc: f6767a1f]

call [pc: f66d9ecc, cc: 001be4d3]

ret [pc: f66d9ecc, cc: f6767a1f]

ret [pc: f66d9f7b, cc: 001be564]
----------------
IN: 
0xf66d9f7b:  add    $0x10,%esp
0xf66d9f7e:  test   %eax,%eax
0xf66d9f80:  js     0xf66d9f43

----------------
IN: 
0xf66d9f82:  add    $0xc,%esp
0xf66d9f85:  mov    %esi,%eax
0xf66d9f87:  pop    %ebx
0xf66d9f88:  pop    %esi
0xf66d9f89:  pop    %edi
0xf66d9f8a:  pop    %ebp
0xf66d9f8b:  ret    


ret [pc: f666e23c, cc: f67d0758]
----------------
IN: 
0xf666e23c:  mov    $0x0,%edx
0xf666e241:  cmp    $0xffffffff,%eax
0xf666e244:  cmove  %edx,%eax
0xf666e247:  add    $0x1c,%esp
0xf666e24a:  ret    


ret [pc: f6669a3d, cc: 001b9d65]
----------------
IN: 
0xf6669a3d:  mov    %eax,%esi
0xf6669a3f:  nop    
0xf6669a40:  add    $0x10,%esp
0xf6669a43:  test   %eax,%eax
0xf6669a45:  mov    0x2c(%esp),%edx
0xf6669a49:  je     0xf6669ea4

----------------
IN: 
0xf6669a4f:  mov    -0xbc(%ebx),%eax
0xf6669a55:  mov    (%eax),%eax
0xf6669a57:  test   %eax,%eax
0xf6669a59:  jne    0xf6669df8

----------------
IN: 
0xf6669a5f:  mov    $0x1,%ecx
0xf6669a64:  movl   $0x0,0x10(%esp)
0xf6669a6c:  mov    0x150(%ebx),%eax
0xf6669a72:  test   %eax,%eax
0xf6669a74:  je     0xf6669dd8

----------------
IN: 
0xf6669dd8:  mov    %esi,0x150(%ebx)
0xf6669dde:  jmp    0xf6669a7a

----------------
IN: 
0xf6669a7a:  mov    0xc(%esp),%eax
0xf6669a7e:  add    0xbcc(%ebx),%eax
0xf6669a84:  cmp    %esi,%edx
0xf6669a86:  mov    %eax,0xbcc(%ebx)
0xf6669a8c:  jne    0xf6669c10

----------------
IN: 
0xf6669c10:  testb  $0x2,0x784(%ebx)
0xf6669c17:  jne    0xf6669d68

----------------
IN: 
0xf6669c1d:  cmp    %esi,%edx
0xf6669c1f:  jbe    0xf6669c2c

----------------
IN: 
0xf6669c21:  cmpb   $0x0,0x28(%esp)
0xf6669c26:  jne    0xf6669e07

----------------
IN: 
0xf6669c2c:  mov    0x18(%esp),%ecx
0xf6669c30:  test   %ecx,%ecx
0xf6669c32:  je     0xf6669c42

----------------
IN: 
0xf6669c42:  mov    %esi,%edx
0xf6669c44:  and    $0x7,%edx
0xf6669c47:  je     0xf6669de8

----------------
IN: 
0xf6669de8:  mov    %esi,0x28(%esp)
0xf6669dec:  xor    %eax,%eax
0xf6669dee:  jmp    0xf6669c5b

----------------
IN: 
0xf6669c5b:  add    0x18(%esp),%eax
0xf6669c5f:  mov    0xc(%esp),%ecx
0xf6669c63:  mov    0x20(%esp),%edx
0xf6669c67:  add    %eax,%ecx
0xf6669c69:  add    %esi,%ecx
0xf6669c6b:  add    %ecx,%edx
0xf6669c6d:  and    0x24(%esp),%edx
0xf6669c71:  sub    %ecx,%eax
0xf6669c73:  lea    (%edx,%eax,1),%ecx
0xf6669c76:  test   %ecx,%ecx
0xf6669c78:  mov    %ecx,0xc(%esp)
0xf6669c7c:  js     0xf6669e84

----------------
IN: 
0xf6669c82:  sub    $0xc,%esp
0xf6669c85:  mov    -0x134(%ebx),%esi
0xf6669c8b:  push   %ecx
0xf6669c8c:  mov    %ecx,0x30(%esp)
0xf6669c90:  call   *(%esi)


call [pc: f6669c92, cc: f67d01f7]

call [pc: f666e23c, cc: 001be3cb]

call [pc: f66d9ef9, cc: f6767d32]

ret [pc: f66d9ef9, cc: 001be3cb]
----------------
IN: 
0xf66d9f13:  mov    0x40(%ebx),%eax
0xf66d9f19:  test   %eax,%eax
0xf66d9f1b:  jne    0xf66d9f58

----------------
IN: 
0xf66d9f48:  add    $0xc,%esp
0xf66d9f4b:  mov    %esi,%eax
0xf66d9f4d:  pop    %ebx
0xf66d9f4e:  pop    %esi
0xf66d9f4f:  pop    %edi
0xf66d9f50:  pop    %ebp
0xf66d9f51:  ret    


ret [pc: f666e23c, cc: f67d01f7]

ret [pc: f6669c92, cc: 001b9d65]
----------------
IN: 
0xf6669c92:  mov    %eax,0x20(%esp)
0xf6669c96:  add    $0x10,%esp
0xf6669c99:  test   %eax,%eax
0xf6669c9b:  mov    0x20(%esp),%ecx
0xf6669c9f:  je     0xf6669e51

----------------
IN: 
0xf6669ca5:  mov    -0xbc(%ebx),%eax
0xf6669cab:  mov    (%eax),%eax
0xf6669cad:  test   %eax,%eax
0xf6669caf:  jne    0xf6669e38

----------------
IN: 
0xf6669cb5:  mov    0xbcc(%ebx),%edx
0xf6669cbb:  mov    0x28(%esp),%esi
0xf6669cbf:  mov    0x10(%esp),%eax
0xf6669cc3:  mov    %esi,0x7b0(%ebx)
0xf6669cc9:  add    %ecx,%edx
0xf6669ccb:  sub    %esi,%eax
0xf6669ccd:  add    0xc(%esp),%eax
0xf6669cd1:  or     $0x1,%eax
0xf6669cd4:  mov    %eax,0x4(%esi)
0xf6669cd7:  mov    0x18(%esp),%eax
0xf6669cdb:  mov    %edx,0xbcc(%ebx)
0xf6669ce1:  test   %eax,%eax
0xf6669ce3:  je     0xf6669dc8

----------------
IN: 
0xf6669dc8:  mov    %esi,0xc(%esp)
0xf6669dcc:  jmp    0xf666979a

----------------
IN: 
0xf666979a:  cmp    %edx,0x450(%edi)
0xf66697a0:  jae    0xf66697a8

----------------
IN: 
0xf66697a2:  mov    %edx,0x450(%edi)
0xf66697a8:  mov    0xc(%esp),%ecx
0xf66697ac:  mov    0x4(%ecx),%eax
0xf66697af:  and    $0xfffffff8,%eax
0xf66697b2:  cmp    %eax,0x14(%esp)
0xf66697b6:  ja     0xf6669b00

----------------
IN: 
0xf66697bc:  sub    %ebp,%eax
0xf66697be:  xor    %edx,%edx
0xf66697c0:  cmp    0x1c(%esp),%edi
0xf66697c4:  mov    %ebp,%esi
0xf66697c6:  lea    (%ecx,%ebp,1),%ebx
0xf66697c9:  mov    %ebx,0x30(%edi)
0xf66697cc:  setne  %dl
0xf66697cf:  or     $0x1,%esi
0xf66697d2:  or     $0x1,%eax
0xf66697d5:  shl    $0x2,%edx
0xf66697d8:  add    $0x8,%ecx
0xf66697db:  or     %esi,%edx
0xf66697dd:  mov    %edx,-0x4(%ecx)
0xf66697e0:  mov    %eax,0x4(%ebx)
0xf66697e3:  add    $0x3c,%esp
0xf66697e6:  mov    %ecx,%eax
0xf66697e8:  pop    %ebx
0xf66697e9:  pop    %esi
0xf66697ea:  pop    %edi
0xf66697eb:  pop    %ebp
0xf66697ec:  ret    


ret [pc: f666a829, cc: f67d354c]
----------------
IN: 
0xf666a829:  test   %eax,%eax
0xf666a82b:  jne    0xf666a63f

----------------
IN: 
0xf666a63f:  mov    0x10(%esp),%edi
0xf666a643:  mov    %eax,%ebx
0xf666a645:  mov    0x18dc(%edi),%edx
0xf666a64b:  test   %edx,%edx
0xf666a64d:  je     0xf666a218

----------------
IN: 
0xf666a218:  add    $0x5c,%esp
0xf666a21b:  mov    %ebx,%eax
0xf666a21d:  pop    %ebx
0xf666a21e:  pop    %esi
0xf666a21f:  pop    %edi
0xf666a220:  pop    %ebp
0xf666a221:  ret    


ret [pc: f666be45, cc: 001b8b09]
----------------
IN: 
0xf666be45:  test   %eax,%eax
0xf666be47:  mov    %eax,%edx
0xf666be49:  jne    0xf666bddc

----------------
IN: 
0xf666bddc:  cmpl   $0x0,%gs:0xc
0xf666bde4:  je     0xf666bde7

----------------
IN: 
0xf666bde7:  subl   $0x1,(%ebx)
0xf666bdea:  je     0xf666bdf3

----------------
IN: 
0xf666bdf3:  test   %edx,%edx
0xf666bdf5:  je     0xf666be88

----------------
IN: 
0xf666bdfb:  mov    -0x4(%edx),%eax
0xf666bdfe:  test   $0x2,%al
0xf666be00:  jne    0xf666be1a

----------------
IN: 
0xf666be02:  test   $0x4,%al
0xf666be04:  lea    0x780(%esi),%ecx
0xf666be0a:  je     0xf666be16

----------------
IN: 
0xf666be16:  cmp    %ebx,%ecx
0xf666be18:  jne    0xf666be8c

----------------
IN: 
0xf666be1a:  mov    %edx,%eax
0xf666be1c:  pop    %ebx
0xf666be1d:  pop    %esi
0xf666be1e:  pop    %edi
0xf666be1f:  ret    


ret [pc: f666be7a, cc: f67d3573]
----------------
IN: 
0xf666be7a:  add    $0x10,%esp
0xf666be7d:  pop    %ebx
0xf666be7e:  pop    %esi
0xf666be7f:  pop    %edi
0xf666be80:  ret    


ret [pc: f665892e, cc: 0018bc5d]
----------------
IN: 
0xf665892e:  add    $0x10,%esp
0xf6658931:  test   %eax,%eax
0xf6658933:  je     0xf6658990

----------------
IN: 
0xf6658935:  add    %eax,%ebp
0xf6658937:  push   $0x1
0xf6658939:  push   %ebp
0xf665893a:  push   %eax
0xf665893b:  push   %esi
0xf665893c:  call   0xf6666110


call [pc: f6658941, cc: f67d351c]
----------------
IN: 
0xf6666110:  push   %esi
0xf6666111:  push   %ebx
0xf6666112:  call   0xf671a995


call [pc: f6666117, cc: 001b540b]

ret [pc: f6666117, cc: f67d351c]
----------------
IN: 
0xf6666117:  add    $0x146ee9,%ebx
0xf666611d:  sub    $0x4,%esp
0xf6666120:  mov    0x10(%esp),%esi
0xf6666124:  mov    0x1c(%esi),%edx
0xf6666127:  mov    (%esi),%eax
0xf6666129:  test   %edx,%edx
0xf666612b:  je     0xf6666131

----------------
IN: 
0xf6666131:  mov    0x14(%esp),%edx
0xf6666135:  mov    %edx,0x1c(%esi)
0xf6666138:  mov    0x18(%esp),%edx
0xf666613c:  mov    %edx,0x20(%esi)
0xf666613f:  mov    0x1c(%esp),%edx
0xf6666143:  test   %edx,%edx
0xf6666145:  jne    0xf6666158

----------------
IN: 
0xf6666158:  and    $0xfffffffe,%eax
0xf666615b:  mov    %eax,(%esi)
0xf666615d:  add    $0x4,%esp
0xf6666160:  pop    %ebx
0xf6666161:  pop    %esi
0xf6666162:  ret    


ret [pc: f6658941, cc: 0018bc5d]
----------------
IN: 
0xf6658941:  add    $0x10,%esp
0xf6658944:  mov    $0x1,%eax
0xf6658949:  add    $0x7c,%esp
0xf665894c:  pop    %ebx
0xf665894d:  pop    %esi
0xf665894e:  pop    %edi
0xf665894f:  pop    %ebp
0xf6658950:  ret    


ret [pc: f66661c7, cc: f67edd9a]
----------------
IN: 
0xf66661c7:  add    $0x10,%esp
0xf66661ca:  cmp    $0xffffffff,%eax
0xf66661cd:  jne    0xf666619d

----------------
IN: 
0xf666619d:  add    $0xc,%esp
0xf66661a0:  pop    %ebx
0xf66661a1:  pop    %esi
0xf66661a2:  pop    %edi
0xf66661a3:  pop    %ebp
0xf66661a4:  ret    


ret [pc: f6665561, cc: 001888fb]
----------------
IN: 
0xf6665561:  mov    0x1c(%ebx),%edx
0xf6665564:  mov    (%ebx),%eax
0xf6665566:  add    $0x10,%esp
0xf6665569:  mov    %edx,0xc(%ebx)
0xf666556c:  mov    %edx,0x4(%ebx)
0xf666556f:  mov    %edx,0x8(%ebx)
0xf6665572:  jmp    0xf666541e

----------------
IN: 
0xf666541e:  test   $0x1,%ah
0xf6665421:  jne    0xf6665498

----------------
IN: 
0xf6665423:  mov    0x20(%ebx),%ecx
0xf6665426:  cmp    %edx,%ecx
0xf6665428:  je     0xf6665520

----------------
IN: 
0xf666542e:  mov    0x8(%ebx),%edi
0xf6665431:  mov    %ecx,0x18(%ebx)
0xf6665434:  mov    %eax,%ecx
0xf6665436:  mov    %edx,0x14(%ebx)
0xf6665439:  or     $0x8,%ch
0xf666543c:  mov    %edx,0x10(%ebx)
0xf666543f:  mov    %edi,0x4(%ebx)
0xf6665442:  mov    %ecx,(%ebx)
0xf6665444:  mov    0x68(%ebx),%ecx
0xf6665447:  mov    %edi,0xc(%ebx)
0xf666544a:  test   %ecx,%ecx
0xf666544c:  jg     0xf66653d3

----------------
IN: 
0xf666544e:  test   $0x202,%eax
0xf6665453:  je     0xf66653d3

----------------
IN: 
0xf6665459:  mov    %edx,0x18(%ebx)
0xf666545c:  jmp    0xf66653d3

----------------
IN: 
0xf66653d3:  cmp    $0xffffffff,%esi
0xf66653d6:  je     0xf6665508

----------------
IN: 
0xf6665508:  mov    0x10(%ebx),%eax
0xf666550b:  sub    $0x4,%esp
0xf666550e:  sub    %eax,%edx
0xf6665510:  push   %edx
0xf6665511:  push   %eax
0xf6665512:  push   %ebx
0xf6665513:  call   0xf6665110


call [pc: f6665518, cc: f67edde3]
----------------
IN: 
0xf6665110:  push   %ebx
0xf6665111:  xor    %eax,%eax
0xf6665113:  sub    $0x8,%esp
0xf6665116:  mov    0x18(%esp),%ebx
0xf666511a:  test   %ebx,%ebx
0xf666511c:  je     0xf6665137

----------------
IN: 
0xf6665137:  add    $0x8,%esp
0xf666513a:  pop    %ebx
0xf666513b:  ret    


ret [pc: f6665518, cc: 001888fb]
----------------
IN: 
0xf6665518:  add    $0x10,%esp
0xf666551b:  jmp    0xf6665404

----------------
IN: 
0xf6665404:  pop    %ebx
0xf6665405:  pop    %esi
0xf6665406:  pop    %edi
0xf6665407:  ret    


ret [pc: f6664684, cc: f67ece7f]
----------------
IN: 
0xf6664684:  add    $0x10,%esp
0xf6664687:  cmp    $0xffffffff,%eax
0xf666468a:  je     0xf6664784

----------------
IN: 
0xf6664690:  mov    0x20(%ebx),%ecx
0xf6664693:  sub    0x1c(%ebx),%ecx
0xf6664696:  mov    %esi,%edi
0xf6664698:  mov    %esi,%ebp
0xf666469a:  cmp    $0x7f,%ecx
0xf666469d:  jbe    0xf6664768

----------------
IN: 
0xf66646a3:  mov    %edi,%eax
0xf66646a5:  xor    %edx,%edx
0xf66646a7:  div    %ecx
0xf66646a9:  mov    %edi,%ebp
0xf66646ab:  sub    %edx,%ebp
0xf66646ad:  jne    0xf6664768

----------------
IN: 
0xf66646b3:  test   %edi,%edi
0xf66646b5:  je     0xf666465c

----------------
IN: 
0xf66646b7:  sub    $0x4,%esp
0xf66646ba:  push   %edi
0xf66646bb:  add    0x2c(%esp),%ebp
0xf66646bf:  push   %ebp
0xf66646c0:  push   %ebx
0xf66646c1:  call   0xf6666260


call [pc: f66646c6, cc: 001888b9]
----------------
IN: 
0xf6666260:  push   %ebp
0xf6666261:  push   %edi
0xf6666262:  push   %esi
0xf6666263:  push   %ebx
0xf6666264:  sub    $0xc,%esp
0xf6666267:  mov    0x28(%esp),%eax
0xf666626b:  mov    0x20(%esp),%esi
0xf666626f:  mov    0x24(%esp),%ebx
0xf6666273:  test   %eax,%eax
0xf6666275:  je     0xf6666310

----------------
IN: 
0xf666627b:  mov    0x28(%esp),%edi
0xf666627f:  nop    
0xf6666280:  mov    0x14(%esi),%ecx
0xf6666283:  mov    0x18(%esi),%ebp
0xf6666286:  cmp    %ebp,%ecx
0xf6666288:  jae    0xf66662b7

----------------
IN: 
0xf66662b7:  test   %edi,%edi
0xf66662b9:  je     0xf6666300

----------------
IN: 
0xf66662bb:  movsbl 0x46(%esi),%eax
0xf66662bf:  movzbl (%ebx),%edx
0xf66662c2:  sub    $0x8,%esp
0xf66662c5:  lea    0x1(%ebx),%ebp
0xf66662c8:  mov    0x94(%esi,%eax,1),%eax
0xf66662cf:  push   %edx
0xf66662d0:  push   %esi
0xf66662d1:  call   *0xc(%eax)


call [pc: f66662d4, cc: f67eea6d]

call [pc: f66653ac, cc: 0018b9c1]

ret [pc: f66653ac, cc: f67eea6d]
----------------
IN: 
0xf66653c5:  mov    0x10(%ebx),%eax
0xf66653c8:  test   %eax,%eax
0xf66653ca:  je     0xf6665558

----------------
IN: 
0xf66653d0:  mov    0x14(%ebx),%edx
0xf66653d3:  cmp    $0xffffffff,%esi
0xf66653d6:  je     0xf6665508

----------------
IN: 
0xf66653dc:  cmp    %edx,0x20(%ebx)
0xf66653df:  je     0xf66654c8

----------------
IN: 
0xf66653e5:  lea    0x1(%edx),%eax
0xf66653e8:  mov    %eax,0x14(%ebx)
0xf66653eb:  mov    %esi,%eax
0xf66653ed:  mov    %al,(%edx)
0xf66653ef:  mov    (%ebx),%eax
0xf66653f1:  test   $0x2,%al
0xf66653f3:  jne    0xf6665468

----------------
IN: 
0xf66653f5:  test   $0x2,%ah
0xf66653f8:  je     0xf66653ff

----------------
IN: 
0xf66653fa:  cmp    $0xa,%esi
0xf66653fd:  je     0xf6665468

----------------
IN: 
0xf66653ff:  mov    %esi,%eax
0xf6665401:  movzbl %al,%eax
0xf6665404:  pop    %ebx
0xf6665405:  pop    %esi
0xf6665406:  pop    %edi
0xf6665407:  ret    


ret [pc: f66662d4, cc: 001888b9]
----------------
IN: 
0xf66662d4:  add    $0x10,%esp
0xf66662d7:  cmp    $0xffffffff,%eax
0xf66662da:  je     0xf6666300

----------------
IN: 
0xf66662dc:  sub    $0x1,%edi
0xf66662df:  mov    %ebp,%ebx
0xf66662e1:  jmp    0xf6666280

----------------
IN: 
0xf6666280:  mov    0x14(%esi),%ecx
0xf6666283:  mov    0x18(%esi),%ebp
0xf6666286:  cmp    %ebp,%ecx
0xf6666288:  jae    0xf66662b7


call [pc: f66662d4, cc: f67eea6d]

call [pc: f66653ac, cc: 0018b9c1]

ret [pc: f66653ac, cc: f67eea6d]

ret [pc: f66662d4, cc: 001888b9]

call [pc: f66662d4, cc: f67eea6d]

call [pc: f66653ac, cc: 0018b9c1]

ret [pc: f66653ac, cc: f67eea6d]

ret [pc: f66662d4, cc: 001888b9]

call [pc: f66662d4, cc: f67eea6d]

call [pc: f66653ac, cc: 0018b9c1]

ret [pc: f66653ac, cc: f67eea6d]

ret [pc: f66662d4, cc: 001888b9]

call [pc: f66662d4, cc: f67eea6d]

call [pc: f66653ac, cc: 0018b9c1]

ret [pc: f66653ac, cc: f67eea6d]

ret [pc: f66662d4, cc: 001888b9]

call [pc: f66662d4, cc: f67eea6d]

call [pc: f66653ac, cc: 0018b9c1]

ret [pc: f66653ac, cc: f67eea6d]

ret [pc: f66662d4, cc: 001888b9]

call [pc: f66662d4, cc: f67eea6d]

call [pc: f66653ac, cc: 0018b9c1]

ret [pc: f66653ac, cc: f67eea6d]

ret [pc: f66662d4, cc: 001888b9]

call [pc: f66662d4, cc: f67eea6d]

call [pc: f66653ac, cc: 0018b9c1]

ret [pc: f66653ac, cc: f67eea6d]

ret [pc: f66662d4, cc: 001888b9]

call [pc: f66662d4, cc: f67eea6d]

call [pc: f66653ac, cc: 0018b9c1]

ret [pc: f66653ac, cc: f67eea6d]

ret [pc: f66662d4, cc: 001888b9]

call [pc: f66662d4, cc: f67eea6d]

call [pc: f66653ac, cc: 0018b9c1]

ret [pc: f66653ac, cc: f67eea6d]

ret [pc: f66662d4, cc: 001888b9]

call [pc: f66662d4, cc: f67eea6d]

call [pc: f66653ac, cc: 0018b9c1]

ret [pc: f66653ac, cc: f67eea6d]

ret [pc: f66662d4, cc: 001888b9]

call [pc: f66662d4, cc: f67eea6d]

call [pc: f66653ac, cc: 0018b9c1]

ret [pc: f66653ac, cc: f67eea6d]

ret [pc: f66662d4, cc: 001888b9]

call [pc: f66662d4, cc: f67eea6d]

call [pc: f66653ac, cc: 0018b9c1]

ret [pc: f66653ac, cc: f67eea6d]

ret [pc: f66662d4, cc: 001888b9]

call [pc: f66662d4, cc: f67eea6d]

call [pc: f66653ac, cc: 0018b9c1]

ret [pc: f66653ac, cc: f67eea6d]

ret [pc: f66662d4, cc: 001888b9]

call [pc: f66662d4, cc: f67eea6d]

call [pc: f66653ac, cc: 0018b9c1]

ret [pc: f66653ac, cc: f67eea6d]

ret [pc: f66662d4, cc: 001888b9]

call [pc: f66662d4, cc: f67eea6d]

call [pc: f66653ac, cc: 0018b9c1]

ret [pc: f66653ac, cc: f67eea6d]

ret [pc: f66662d4, cc: 001888b9]

call [pc: f66662d4, cc: f67eea6d]

call [pc: f66653ac, cc: 0018b9c1]

ret [pc: f66653ac, cc: f67eea6d]

ret [pc: f66662d4, cc: 001888b9]

call [pc: f66662d4, cc: f67eea6d]

call [pc: f66653ac, cc: 0018b9c1]

ret [pc: f66653ac, cc: f67eea6d]

ret [pc: f66662d4, cc: 001888b9]

call [pc: f66662d4, cc: f67eea6d]

call [pc: f66653ac, cc: 0018b9c1]

ret [pc: f66653ac, cc: f67eea6d]

ret [pc: f66662d4, cc: 001888b9]

call [pc: f66662d4, cc: f67eea6d]

call [pc: f66653ac, cc: 0018b9c1]

ret [pc: f66653ac, cc: f67eea6d]

ret [pc: f66662d4, cc: 001888b9]

call [pc: f66662d4, cc: f67eea6d]

call [pc: f66653ac, cc: 0018b9c1]

ret [pc: f66653ac, cc: f67eea6d]

ret [pc: f66662d4, cc: 001888b9]

call [pc: f66662d4, cc: f67eea6d]

call [pc: f66653ac, cc: 0018b9c1]

ret [pc: f66653ac, cc: f67eea6d]

ret [pc: f66662d4, cc: 001888b9]

call [pc: f66662d4, cc: f67eea6d]

call [pc: f66653ac, cc: 0018b9c1]

ret [pc: f66653ac, cc: f67eea6d]

ret [pc: f66662d4, cc: 001888b9]

call [pc: f66662d4, cc: f67eea6d]

call [pc: f66653ac, cc: 0018b9c1]

ret [pc: f66653ac, cc: f67eea6d]

ret [pc: f66662d4, cc: 001888b9]

call [pc: f66662d4, cc: f67eea6d]

call [pc: f66653ac, cc: 0018b9c1]

ret [pc: f66653ac, cc: f67eea6d]

ret [pc: f66662d4, cc: 001888b9]
----------------
IN: 
0xf6666300:  mov    0x28(%esp),%eax
0xf6666304:  add    $0xc,%esp
0xf6666307:  pop    %ebx
0xf6666308:  pop    %esi
0xf6666309:  sub    %edi,%eax
0xf666630b:  pop    %edi
0xf666630c:  pop    %ebp
0xf666630d:  ret    


ret [pc: f66646c6, cc: f67ece7f]
----------------
IN: 
0xf66646c6:  add    $0x10,%esp
0xf66646c9:  sub    %eax,%edi
0xf66646cb:  jmp    0xf666465c

----------------
IN: 
0xf666465c:  mov    %esi,%eax
0xf666465e:  sub    %edi,%eax
0xf6664660:  add    $0xc,%esp
0xf6664663:  pop    %ebx
0xf6664664:  pop    %esi
0xf6664665:  pop    %edi
0xf6664666:  pop    %ebp
0xf6664667:  ret    


ret [pc: f665ad60, cc: 001b631f]
----------------
IN: 
0xf665ad60:  add    $0x10,%esp
0xf665ad63:  cmp    %eax,%esi
0xf665ad65:  jne    0xf665ae10

----------------
IN: 
0xf665ad6b:  mov    0xdfc(%ebx),%eax
0xf665ad71:  mov    0x14(%eax),%edx
0xf665ad74:  cmp    0x18(%eax),%edx
0xf665ad77:  jae    0xf665adf0

----------------
IN: 
0xf665adf0:  sub    $0x8,%esp
0xf665adf3:  push   $0xa
0xf665adf5:  push   %eax
0xf665adf6:  call   0xf6665dd0


call [pc: f665adfb, cc: f67ecee4]
----------------
IN: 
0xf6665dd0:  push   %esi
0xf6665dd1:  push   %ebx
0xf6665dd2:  call   0xf671a995


call [pc: f6665dd7, cc: 00189333]

ret [pc: f6665dd7, cc: f67ecee4]
----------------
IN: 
0xf6665dd7:  add    $0x147229,%ebx
0xf6665ddd:  sub    $0x4,%esp
0xf6665de0:  mov    0x10(%esp),%esi
0xf6665de4:  mov    0x68(%esi),%edx
0xf6665de7:  test   %edx,%edx
0xf6665de9:  jne    0xf6665dfc

----------------
IN: 
0xf6665dfc:  movsbl 0x46(%esi),%eax
0xf6665e00:  sub    $0x8,%esp
0xf6665e03:  mov    0x94(%esi,%eax,1),%eax
0xf6665e0a:  pushl  0x1c(%esp)
0xf6665e0e:  push   %esi
0xf6665e0f:  call   *0xc(%eax)


call [pc: f6665e12, cc: 001890f6]

call [pc: f66653ac, cc: f67ec35a]

ret [pc: f66653ac, cc: 001890f6]
----------------
IN: 
0xf6665468:  mov    0x10(%ebx),%edx
0xf666546b:  mov    0x14(%ebx),%eax
0xf666546e:  sub    $0x4,%esp
0xf6665471:  sub    %edx,%eax
0xf6665473:  push   %eax
0xf6665474:  push   %edx
0xf6665475:  push   %ebx
0xf6665476:  call   0xf6665110


call [pc: f666547b, cc: f67ec48d]
----------------
IN: 
0xf666511e:  mov    0x14(%esp),%edx
0xf6665122:  mov    0x10(%esp),%eax
0xf6665126:  mov    %ebx,%ecx
0xf6665128:  call   0xf66633b0


call [pc: f666512d, cc: 001895a0]
----------------
IN: 
0xf66633b0:  push   %edi
0xf66633b1:  push   %esi
0xf66633b2:  mov    %edx,%edi
0xf66633b4:  push   %ebx
0xf66633b5:  mov    %eax,%ebx
0xf66633b7:  sub    $0x10,%esp
0xf66633ba:  testl  $0x1000,(%eax)
0xf66633c0:  je     0xf6663420

----------------
IN: 
0xf6663420:  mov    0x8(%eax),%edx
0xf6663423:  mov    0x10(%eax),%eax
0xf6663426:  cmp    %eax,%edx
0xf6663428:  je     0xf66633d0

----------------
IN: 
0xf66633d0:  movsbl 0x46(%ebx),%eax
0xf66633d4:  sub    $0x4,%esp
0xf66633d7:  mov    0x94(%ebx,%eax,1),%eax
0xf66633de:  push   %ecx
0xf66633df:  push   %edi
0xf66633e0:  push   %ebx
0xf66633e1:  call   *0x3c(%eax)


call [pc: f66633e4, cc: f67ea644]
----------------
IN: 
0xf6664050:  push   %ebp
0xf6664051:  push   %edi
0xf6664052:  push   %esi
0xf6664053:  push   %ebx
0xf6664054:  sub    $0xc,%esp
0xf6664057:  mov    0x28(%esp),%eax
0xf666405b:  mov    0x20(%esp),%esi
0xf666405f:  mov    0x24(%esp),%edi
0xf6664063:  test   %eax,%eax
0xf6664065:  jle    0xf66640f8

----------------
IN: 
0xf666406b:  mov    0x28(%esp),%ebp
0xf666406f:  jmp    0xf666409e

----------------
IN: 
0xf666409e:  testb  $0x2,0x3c(%esi)
0xf66640a2:  jne    0xf6664078

----------------
IN: 
0xf66640a4:  sub    $0x4,%esp
0xf66640a7:  push   %ebp
0xf66640a8:  push   %edi
0xf66640a9:  pushl  0x38(%esi)
0xf66640ac:  call   0xf66d09f0


call [pc: f66640b1, cc: 0018e6f5]
----------------
IN: 
0xf66d09f0:  cmpl   $0x0,%gs:0xc
0xf66d09f8:  jne    0xf66d0a20

----------------
IN: 
0xf66d09fa:  push   %ebx
0xf66d09fb:  mov    0x10(%esp),%edx
0xf66d09ff:  mov    0xc(%esp),%ecx
0xf66d0a03:  mov    0x8(%esp),%ebx
0xf66d0a07:  mov    $0x4,%eax
0xf66d0a0c:  call   *%gs:0x10


call [pc: f66d0a13, cc: f675ece6]

ret [pc: f66d0a13, cc: 0018e6f5]
----------------
IN: 
0xf66d0a13:  pop    %ebx
0xf66d0a14:  cmp    $0xfffff001,%eax
0xf66d0a19:  jae    0xf6613730

----------------
IN: 
0xf66d0a1f:  ret    


ret [pc: f66640b1, cc: f67ea644]
----------------
IN: 
0xf66640b1:  add    $0x10,%esp
0xf66640b4:  test   %eax,%eax
0xf66640b6:  jns    0xf6664096

----------------
IN: 
0xf6664096:  sub    %eax,%ebp
0xf6664098:  add    %eax,%edi
0xf666409a:  test   %ebp,%ebp
0xf666409c:  jle    0xf66640f0

----------------
IN: 
0xf66640f0:  mov    0x28(%esp),%eax
0xf66640f4:  sub    %ebp,%eax
0xf66640f6:  jmp    0xf66640c1

----------------
IN: 
0xf66640c1:  mov    0x50(%esi),%ebx
0xf66640c4:  mov    0x4c(%esi),%ecx
0xf66640c7:  test   %ebx,%ebx
0xf66640c9:  js     0xf66640da

----------------
IN: 
0xf66640da:  add    $0xc,%esp
0xf66640dd:  pop    %ebx
0xf66640de:  pop    %esi
0xf66640df:  pop    %edi
0xf66640e0:  pop    %ebp
0xf66640e1:  ret    


ret [pc: f66633e4, cc: 001895a0]
----------------
IN: 
0xf66633e4:  mov    %eax,%esi
0xf66633e6:  add    $0x10,%esp
0xf66633e9:  movzwl 0x44(%ebx),%eax
0xf66633ed:  test   %esi,%esi
0xf66633ef:  je     0xf66633f6

----------------
IN: 
0xf66633f1:  test   %ax,%ax
0xf66633f4:  jne    0xf6663470

----------------
IN: 
0xf66633f6:  mov    0x68(%ebx),%eax
0xf66633f9:  mov    0x1c(%ebx),%edx
0xf66633fc:  test   %eax,%eax
0xf66633fe:  mov    %edx,0xc(%ebx)
0xf6663401:  mov    %edx,0x4(%ebx)
0xf6663404:  mov    %edx,0x8(%ebx)
0xf6663407:  mov    %edx,0x14(%ebx)
0xf666340a:  mov    %edx,0x10(%ebx)
0xf666340d:  jle    0xf6663460

----------------
IN: 
0xf6663460:  testl  $0x202,(%ebx)
0xf6663466:  jne    0xf6663412

----------------
IN: 
0xf6663412:  mov    %edx,0x18(%ebx)
0xf6663415:  mov    %esi,%eax
0xf6663417:  add    $0x10,%esp
0xf666341a:  pop    %ebx
0xf666341b:  pop    %esi
0xf666341c:  pop    %edi
0xf666341d:  ret    


ret [pc: f666512d, cc: f67ec48d]
----------------
IN: 
0xf666512d:  cmp    %eax,%ebx
0xf666512f:  setne  %al
0xf6665132:  movzbl %al,%eax
0xf6665135:  neg    %eax
0xf6665137:  add    $0x8,%esp
0xf666513a:  pop    %ebx
0xf666513b:  ret    


ret [pc: f666547b, cc: 001890f6]
----------------
IN: 
0xf666547b:  add    $0x10,%esp
0xf666547e:  cmp    $0xffffffff,%eax
0xf6665481:  jne    0xf66653ff


ret [pc: f6665e12, cc: f67ecee4]
----------------
IN: 
0xf6665e12:  add    $0x14,%esp
0xf6665e15:  pop    %ebx
0xf6665e16:  pop    %esi
0xf6665e17:  ret    


ret [pc: f665adfb, cc: 001b631f]
----------------
IN: 
0xf665adfb:  add    $0x10,%esp
0xf665adfe:  cmp    $0xffffffff,%eax
0xf665ae01:  jne    0xf665ad82

----------------
IN: 
0xf665ad82:  add    $0x1,%esi
0xf665ad85:  mov    $0x7fffffff,%eax
0xf665ad8a:  cmovs  %eax,%esi
0xf665ad8d:  mov    -0x1c(%ebp),%eax
0xf665ad90:  testl  $0x8000,(%eax)
0xf665ad96:  je     0xf665adb8

----------------
IN: 
0xf665adb8:  mov    -0x1c(%ebp),%eax
0xf665adbb:  mov    0x48(%eax),%edx
0xf665adbe:  subl   $0x1,0x4(%edx)
0xf665adc2:  jne    0xf665ad98

----------------
IN: 
0xf665adc4:  movl   $0x0,0x8(%edx)
0xf665adcb:  cmpl   $0x0,%gs:0xc
0xf665add3:  je     0xf665add6

----------------
IN: 
0xf665add6:  subl   $0x1,(%edx)
0xf665add9:  je     0xf665ade2

----------------
IN: 
0xf665ade2:  lea    -0xc(%ebp),%esp
0xf665ade5:  mov    %esi,%eax
0xf665ade7:  pop    %ebx
0xf665ade8:  pop    %esi
0xf665ade9:  pop    %edi
0xf665adea:  pop    %ebp
0xf665adeb:  ret    


ret [pc: 080485c9, cc: 081fe6d6]
----------------
IN: main
0x080485c9:  movl   $0x6,0x8(%esp)
0x080485d1:  lea    0x1c(%esp),%eax
0x080485d5:  mov    %eax,0x4(%esp)
0x080485d9:  movl   $0x0,(%esp)
0x080485e0:  call   0x80483c0

index: 00001397 [pc: 0000f541, cc: 081fe6d6]

index: 00001397

call [pc: 080485e5, cc: 001b6333]
----------------
IN: 
0x080483c0:  jmp    *0x804a010

index: 0000aba1 [pc: 0000c892, cc: 001b6333]

index: 0000aba1
----------------
IN: 
0x080483c6:  push   $0x8
0x080483cb:  jmp    0x80483a0

index: 0000a911 [pc: 0000ca22, cc: 001b6333]

index: 0000a911
index: 0000cc17 [pc: 0000af24, cc: 001b6333]

index: 0000cc17

call [pc: f67eef10, cc: f6658c23]

call [pc: f67e86eb, cc: 001b0ac8]

ret [pc: f67e86eb, cc: f6658c23]

call [pc: f67e87a2, cc: 001b0b81]

call [pc: f67e3970, cc: f66532f1]

ret [pc: f67e3970, cc: 001b0b81]

call [pc: f67e3a4b, cc: f66531ca]

call [pc: f67e2ec9, cc: 001b1f03]

ret [pc: f67e2ec9, cc: f66531ca]

call [pc: f67e2ffb, cc: 001b1e31]

call [pc: f67ea16c, cc: f665bf5d]

ret [pc: f67ea16c, cc: 001b1e31]

call [pc: f67ea17e, cc: f665bf4f]

ret [pc: f67ea17e, cc: 001b1e31]

call [pc: f67ea1a2, cc: f665bf93]

ret [pc: f67ea1a2, cc: 001b1e31]

ret [pc: f67e2ffb, cc: f66531ca]

call [pc: f67e353d, cc: 001b04f7]

call [pc: f67e2d39, cc: f66529ce]

ret [pc: f67e2d39, cc: 001b04f7]

call [pc: f67e2da0, cc: f6652957]

ret [pc: f67e2da0, cc: 001b04f7]

call [pc: f67e2e60, cc: f6652a97]

ret [pc: f67e2e60, cc: 001b04f7]

ret [pc: f67e353d, cc: f66531ca]

ret [pc: f67e3a4b, cc: 001b0b81]

ret [pc: f67e87a2, cc: f6658c23]

ret [pc: f67eef10, cc: 001b6333]

ret [pc: f66d0980, cc: f6766ab3]
----------------
IN: 
0xf66d0980:  cmpl   $0x0,%gs:0xc
0xf66d0988:  jne    0xf66d09b0

----------------
IN: 
0xf66d098a:  push   %ebx
0xf66d098b:  mov    0x10(%esp),%edx
0xf66d098f:  mov    0xc(%esp),%ecx
0xf66d0993:  mov    0x8(%esp),%ebx
0xf66d0997:  mov    $0x3,%eax
0xf66d099c:  call   *%gs:0x10


call [pc: f66d09a3, cc: 001b6310]

ret [pc: f66d09a3, cc: f6766ab3]
----------------
IN: 
0xf66d09a3:  pop    %ebx
0xf66d09a4:  cmp    $0xfffff001,%eax
0xf66d09a9:  jae    0xf6613730

----------------
IN: 
0xf66d09af:  ret    


ret [pc: 080485e5, cc: fe72ef56]
----------------
IN: main
0x080485e5:  nop    
0x080485e6:  call   0x80483e0

index: 00003615 [pc: 0000d943, cc: fe72ef56]

index: 00003615

call [pc: 080485eb, cc: f6766abd]
----------------
IN: 
0x080483e0:  jmp    *0x804a018

index: 0000942c [pc: 0000fe91, cc: f6766abd]

index: 0000942c
----------------
IN: 
0x080483e6:  push   $0x18
0x080483eb:  jmp    0x80483a0

index: 0000909c [pc: 0000fa21, cc: f6766abd]

index: 0000909c
index: 0000d598 [pc: 0000bf25, cc: f6766abd]

index: 0000d598

call [pc: f67eef10, cc: 000885ad]

call [pc: f67e86eb, cc: f6760346]

ret [pc: f67e86eb, cc: 000885ad]

call [pc: f67e87a2, cc: f676020f]

call [pc: f67e3970, cc: 00083b7f]

ret [pc: f67e3970, cc: f676020f]

call [pc: f67e3a4b, cc: 00083844]

call [pc: f67e2ec9, cc: f676168d]

ret [pc: f67e2ec9, cc: 00083844]

call [pc: f67e2ffb, cc: f67617bf]

call [pc: f67ea16c, cc: 0008b6d3]

ret [pc: f67ea16c, cc: f67617bf]

call [pc: f67ea17e, cc: 0008b6c1]

ret [pc: f67ea17e, cc: f67617bf]

call [pc: f67ea1a2, cc: 0008b61d]

ret [pc: f67ea1a2, cc: f67617bf]

ret [pc: f67e2ffb, cc: 00083844]

call [pc: f67e353d, cc: f6760d79]

call [pc: f67e2d39, cc: 00082040]

ret [pc: f67e2d39, cc: f6760d79]

call [pc: f67e2da0, cc: 000820d9]

ret [pc: f67e2da0, cc: f6760d79]

call [pc: f67e2e60, cc: 00082319]

ret [pc: f67e2e60, cc: f6760d79]

ret [pc: f67e353d, cc: 00083844]

ret [pc: f67e3a4b, cc: f676020f]

ret [pc: f67e87a2, cc: 000885ad]

ret [pc: f67eef10, cc: f6766abd]

ret [pc: f6660b40, cc: 001061fd]
----------------
IN: 
0xf6660b40:  push   %ebp
0xf6660b41:  mov    %esp,%ebp
0xf6660b43:  push   %edi
0xf6660b44:  push   %esi
0xf6660b45:  push   %ebx
0xf6660b46:  call   0xf671a995


call [pc: f6660b4b, cc: f6766ab6]

ret [pc: f6660b4b, cc: 001061fd]
----------------
IN: 
0xf6660b4b:  add    $0x14c4b5,%ebx
0xf6660b51:  sub    $0xc,%esp
0xf6660b54:  mov    0xe00(%ebx),%esi
0xf6660b5a:  mov    (%esi),%eax
0xf6660b5c:  mov    %esi,%ecx
0xf6660b5e:  and    $0x8000,%eax
0xf6660b63:  jne    0xf6660ba4

----------------
IN: 
0xf6660b65:  mov    0x48(%esi),%edx
0xf6660b68:  mov    %gs:0x8,%edi
0xf6660b6f:  cmp    0x8(%edx),%edi
0xf6660b72:  je     0xf6660c08

----------------
IN: 
0xf6660b78:  mov    $0x1,%ecx
0xf6660b7d:  cmpl   $0x0,%gs:0xc
0xf6660b85:  je     0xf6660b88

----------------
IN: 
0xf6660b88:  cmpxchg %ecx,(%edx)
0xf6660b8b:  je     0xf6660b94

----------------
IN: 
0xf6660b94:  mov    0x48(%esi),%edx
0xf6660b97:  mov    0xe00(%ebx),%ecx
0xf6660b9d:  mov    %edi,0x8(%edx)
0xf6660ba0:  addl   $0x1,0x4(%edx)
0xf6660ba4:  mov    0x4(%ecx),%eax
0xf6660ba7:  cmp    0x8(%ecx),%eax
0xf6660baa:  jae    0xf6660c10

----------------
IN: 
0xf6660c10:  sub    $0xc,%esp
0xf6660c13:  push   %ecx
0xf6660c14:  call   0xf6665fa0


call [pc: f6660c19, cc: f6766de4]
----------------
IN: 
0xf6665fa0:  push   %esi
0xf6665fa1:  push   %ebx
0xf6665fa2:  call   0xf671a995


call [pc: f6665fa7, cc: 00103243]

ret [pc: f6665fa7, cc: f6766de4]
----------------
IN: 
0xf6665fa7:  add    $0x147059,%ebx
0xf6665fad:  sub    $0x4,%esp
0xf6665fb0:  mov    0x10(%esp),%esi
0xf6665fb4:  cmpb   $0x0,0x46(%esi)
0xf6665fb8:  jne    0xf6665fda

----------------
IN: 
0xf6665fba:  mov    -0xf4(%ebx),%eax
0xf6665fc0:  test   %eax,%eax
0xf6665fc2:  je     0xf66660b0

----------------
IN: 
0xf6665fc8:  mov    0x68(%esi),%eax
0xf6665fcb:  test   %eax,%eax
0xf6665fcd:  jne    0xf66660c0

----------------
IN: 
0xf6665fd3:  movl   $0xffffffff,0x68(%esi)
0xf6665fda:  mov    0x68(%esi),%eax
0xf6665fdd:  test   %eax,%eax
0xf6665fdf:  je     0xf6666038

----------------
IN: 
0xf6665fe1:  testl  $0x800,(%esi)
0xf6665fe7:  jne    0xf6666055

----------------
IN: 
0xf6665fe9:  mov    0x4(%esi),%eax
0xf6665fec:  cmp    0x8(%esi),%eax
0xf6665fef:  jb     0xf6666098

----------------
IN: 
0xf6665ff5:  testl  $0x100,(%esi)
0xf6665ffb:  jne    0xf6666080

----------------
IN: 
0xf6666001:  mov    0x30(%esi),%edx
0xf6666004:  test   %edx,%edx
0xf6666006:  je     0xf66660d8

----------------
IN: 
0xf66660d8:  mov    0x24(%esi),%eax
0xf66660db:  test   %eax,%eax
0xf66660dd:  je     0xf666601a

----------------
IN: 
0xf666601a:  movsbl 0x46(%esi),%eax
0xf666601e:  sub    $0xc,%esp
0xf6666021:  mov    0x94(%esi,%eax,1),%eax
0xf6666028:  push   %esi
0xf6666029:  call   *0x14(%eax)


call [pc: f666602c, cc: 00100dc8]
----------------
IN: 
0xf6666220:  push   %ebx
0xf6666221:  sub    $0x14,%esp
0xf6666224:  mov    0x1c(%esp),%ebx
0xf6666228:  movsbl 0x46(%ebx),%eax
0xf666622c:  mov    0x94(%ebx,%eax,1),%eax
0xf6666233:  push   %ebx
0xf6666234:  call   *0x10(%eax)


call [pc: f6666237, cc: f6766fff]
----------------
IN: 
0xf6665140:  push   %ebp
0xf6665141:  mov    %esp,%ebp
0xf6665143:  push   %edi
0xf6665144:  push   %esi
0xf6665145:  push   %ebx
0xf6665146:  call   0xf671a995


call [pc: f666514b, cc: 00103eb4]

ret [pc: f666514b, cc: f6766fff]
----------------
IN: 
0xf666514b:  add    $0x147eb5,%ebx
0xf6665151:  sub    $0x1c,%esp
0xf6665154:  mov    0x8(%ebp),%esi
0xf6665157:  mov    (%esi),%eax
0xf6665159:  test   $0x4,%al
0xf666515b:  jne    0xf6665340

----------------
IN: 
0xf6665161:  mov    0x4(%esi),%edx
0xf6665164:  cmp    0x8(%esi),%edx
0xf6665167:  jb     0xf66652a0

----------------
IN: 
0xf666516d:  mov    0x1c(%esi),%edx
0xf6665170:  test   %edx,%edx
0xf6665172:  je     0xf6665300

----------------
IN: 
0xf6665300:  mov    0x24(%esi),%eax
0xf6665303:  test   %eax,%eax
0xf6665305:  je     0xf6665319

----------------
IN: 
0xf6665319:  sub    $0xc,%esp
0xf666531c:  push   %esi
0xf666531d:  call   0xf6666180


call [pc: f6665322, cc: 00103cdd]

call [pc: f6666189, cc: f6765d54]

ret [pc: f6666189, cc: 00103cdd]

call [pc: f66661c7, cc: f6765d1a]

call [pc: f66588c9, cc: 0013d5d3]

ret [pc: f66588c9, cc: f6765d1a]

call [pc: f66588f7, cc: 0013d5ed]

call [pc: f6664045, cc: f67595a8]

call [pc: f66d0055, cc: 001895fd]

ret [pc: f66d0055, cc: f67595a8]

ret [pc: f6664045, cc: 0013d5ed]

ret [pc: f66588f7, cc: f6765d1a]

call [pc: f665892e, cc: 0013d434]

call [pc: f666bd87, cc: f67569b3]

ret [pc: f666bd87, cc: 0013d434]

call [pc: f666be45, cc: f6756a71]

call [pc: f6669f49, cc: 0013f538]

ret [pc: f6669f49, cc: f6756a71]
----------------
IN: 
0xf666a05b:  mov    0x4(%esp),%eax
0xf666a05f:  shr    $0x9,%eax
0xf666a062:  cmp    $0x14,%eax
0xf666a065:  ja     0xf666a696

----------------
IN: 
0xf666a06b:  add    $0x5b,%eax
0xf666a06e:  mov    %eax,0x18(%esp)
0xf666a072:  testb  $0x1,0x4(%ebp)
0xf666a076:  jne    0xf666a07f

----------------
IN: 
0xf666a863:  mov    0x10(%esp),%ebx
0xf666a867:  mov    0x4(%esp),%edi
0xf666a86b:  lea    0x780(%ebx),%ebx
0xf666a871:  sub    %edi,%eax
0xf666a873:  lea    (%edx,%edi,1),%ecx
0xf666a876:  cmp    %ebx,%ebp
0xf666a878:  mov    %ecx,0x30(%ebp)
0xf666a87b:  setne  %bl
0xf666a87e:  or     $0x1,%edi
0xf666a881:  or     $0x1,%eax
0xf666a884:  movzbl %bl,%ebx
0xf666a887:  shl    $0x2,%ebx
0xf666a88a:  or     %edi,%ebx
0xf666a88c:  mov    %ebx,0x4(%edx)
0xf666a88f:  mov    0x10(%esp),%ebx
0xf666a893:  mov    %eax,0x4(%ecx)
0xf666a896:  mov    0x18dc(%ebx),%eax
0xf666a89c:  lea    0x8(%edx),%ebx
0xf666a89f:  test   %eax,%eax
0xf666a8a1:  je     0xf666a218


ret [pc: f666be45, cc: 0013d434]

ret [pc: f665892e, cc: f6765d1a]

call [pc: f6658941, cc: 0013d45b]

call [pc: f6666117, cc: f675b54c]

ret [pc: f6666117, cc: 0013d45b]

ret [pc: f6658941, cc: f6765d1a]

ret [pc: f66661c7, cc: 00103cdd]

ret [pc: f6665322, cc: f6766fff]
----------------
IN: 
0xf6665322:  mov    (%esi),%eax
0xf6665324:  add    $0x10,%esp
0xf6665327:  jmp    0xf6665178

----------------
IN: 
0xf6665178:  test   $0x202,%eax
0xf666517d:  je     0xf6665230

----------------
IN: 
0xf6665230:  sub    $0xc,%esp
0xf6665233:  push   %esi
0xf6665234:  call   0xf6665d00


call [pc: f6665239, cc: 00103dc6]
----------------
IN: 
0xf6665d00:  push   %ebx
0xf6665d01:  sub    $0x8,%esp
0xf6665d04:  mov    0x10(%esp),%ebx
0xf6665d08:  mov    0x14(%ebx),%eax
0xf6665d0b:  cmp    0x10(%ebx),%eax
0xf6665d0e:  ja     0xf6665d50

----------------
IN: 
0xf6665d10:  mov    (%ebx),%edx
0xf6665d12:  test   $0x1,%dh
0xf6665d15:  jne    0xf6665d40

----------------
IN: 
0xf6665d17:  cmp    %eax,0x8(%ebx)
0xf6665d1a:  mov    0x1c(%ebx),%ecx
0xf6665d1d:  mov    %ecx,0xc(%ebx)
0xf6665d20:  jae    0xf6665d25

----------------
IN: 
0xf6665d25:  and    $0xf7,%dh
0xf6665d28:  mov    %eax,0x4(%ebx)
0xf6665d2b:  mov    %eax,0x18(%ebx)
0xf6665d2e:  mov    %eax,0x10(%ebx)
0xf6665d31:  mov    %edx,(%ebx)
0xf6665d33:  xor    %eax,%eax
0xf6665d35:  add    $0x8,%esp
0xf6665d38:  pop    %ebx
0xf6665d39:  ret    


ret [pc: f6665239, cc: f6766fff]
----------------
IN: 
0xf6665239:  movsbl 0x46(%esi),%edx
0xf666523d:  mov    0x1c(%esi),%eax
0xf6665240:  add    $0xc,%esp
0xf6665243:  mov    %eax,0x4(%esi)
0xf6665246:  mov    %eax,0xc(%esi)
0xf6665249:  mov    %eax,0x8(%esi)
0xf666524c:  mov    %eax,0x18(%esi)
0xf666524f:  mov    %eax,0x14(%esi)
0xf6665252:  mov    %eax,0x10(%esi)
0xf6665255:  mov    0x94(%esi,%edx,1),%ecx
0xf666525c:  mov    0x20(%esi),%edx
0xf666525f:  sub    %eax,%edx
0xf6665261:  push   %edx
0xf6665262:  push   %eax
0xf6665263:  push   %esi
0xf6665264:  call   *0x38(%ecx)


call [pc: f6665267, cc: 00103d98]
----------------
IN: 
0xf66645a0:  push   %ebx
0xf66645a1:  mov    0x8(%esp),%eax
0xf66645a5:  mov    0xc(%esp),%ecx
0xf66645a9:  mov    0x10(%esp),%edx
0xf66645ad:  testb  $0x2,0x3c(%eax)
0xf66645b1:  je     0xf66645d0

----------------
IN: 
0xf66645d0:  mov    %edx,0x10(%esp)
0xf66645d4:  mov    %ecx,0xc(%esp)
0xf66645d8:  mov    0x38(%eax),%eax
0xf66645db:  mov    %eax,0x8(%esp)
0xf66645df:  pop    %ebx
0xf66645e0:  jmp    0xf66d0980


call [pc: f66d09a3, cc: f67d343b]

ret [pc: f66d09a3, cc: 00103d98]

ret [pc: f6665267, cc: f6766fff]
----------------
IN: 
0xf6665267:  add    $0x10,%esp
0xf666526a:  cmp    $0x0,%eax
0xf666526d:  mov    %eax,%ecx
0xf666526f:  jle    0xf66652e0

----------------
IN: 
0xf6665271:  add    %eax,0x8(%esi)
0xf6665274:  mov    0x4c(%esi),%eax
0xf6665277:  mov    0x50(%esi),%edx
0xf666527a:  mov    %eax,%ebx
0xf666527c:  and    %edx,%ebx
0xf666527e:  cmp    $0xffffffff,%ebx
0xf6665281:  je     0xf6665292

----------------
IN: 
0xf6665292:  mov    0x4(%esi),%eax
0xf6665295:  movzbl (%eax),%eax
0xf6665298:  lea    -0xc(%ebp),%esp
0xf666529b:  pop    %ebx
0xf666529c:  pop    %esi
0xf666529d:  pop    %edi
0xf666529e:  pop    %ebp
0xf666529f:  ret    


ret [pc: f6666237, cc: 00100dc8]
----------------
IN: 
0xf6666237:  add    $0x10,%esp
0xf666623a:  cmp    $0xffffffff,%eax
0xf666623d:  je     0xf6666250

----------------
IN: 
0xf666623f:  mov    0x4(%ebx),%eax
0xf6666242:  lea    0x1(%eax),%edx
0xf6666245:  mov    %edx,0x4(%ebx)
0xf6666248:  movzbl (%eax),%eax
0xf666624b:  add    $0x8,%esp
0xf666624e:  pop    %ebx
0xf666624f:  ret    


ret [pc: f666602c, cc: f6766de4]
----------------
IN: 
0xf666602c:  add    $0x10,%esp
0xf666602f:  add    $0x4,%esp
0xf6666032:  pop    %ebx
0xf6666033:  pop    %esi
0xf6666034:  ret    


ret [pc: f6660c19, cc: 001061fd]
----------------
IN: 
0xf6660c19:  mov    %eax,%ecx
0xf6660c1b:  add    $0x10,%esp
0xf6660c1e:  jmp    0xf6660bb5

----------------
IN: 
0xf6660bb5:  testl  $0x8000,(%esi)
0xf6660bbb:  je     0xf6660bd0

----------------
IN: 
0xf6660bd0:  mov    0x48(%esi),%edx
0xf6660bd3:  subl   $0x1,0x4(%edx)
0xf6660bd7:  jne    0xf6660bbd

----------------
IN: 
0xf6660bd9:  movl   $0x0,0x8(%edx)
0xf6660be0:  cmpl   $0x0,%gs:0xc
0xf6660be8:  je     0xf6660beb

----------------
IN: 
0xf6660beb:  subl   $0x1,(%edx)
0xf6660bee:  je     0xf6660bf7

----------------
IN: 
0xf6660bf7:  lea    -0xc(%ebp),%esp
0xf6660bfa:  mov    %ecx,%eax
0xf6660bfc:  pop    %ebx
0xf6660bfd:  pop    %esi
0xf6660bfe:  pop    %edi
0xf6660bff:  pop    %ebp
0xf6660c00:  ret    


ret [pc: 080485eb, cc: 0814e416]
----------------
IN: main
0x080485eb:  mov    %al,0x17(%esp)
0x080485ef:  cmpb   $0xa,0x17(%esp)
0x080485f4:  je     0x80485fd

index: 00003355 [pc: 0000d743, cc: 0814e416]

index: 00003355
----------------
IN: main
0x080485fd:  movl   $0x3,0x8(%esp)
0x08048605:  lea    0x1c(%esp),%eax
0x08048609:  mov    %eax,0x4(%esp)
0x0804860d:  lea    0x24(%esp),%eax
0x08048611:  mov    %eax,(%esp)
0x08048614:  call   0x80483d0

index: 000000e6 [pc: 0000e4f0, cc: 0814e416]

index: 000000e6

call [pc: 08048619, cc: 0010620f]
----------------
IN: 
0x080483d0:  jmp    *0x804a014

index: 0000a09d [pc: 0000c292, cc: 0010620f]

index: 0000a09d
----------------
IN: 
0x080483d6:  push   $0x10
0x080483db:  jmp    0x80483a0

index: 0000b02c [pc: 0000d223, cc: 0010620f]

index: 0000b02c
index: 0000c52b [pc: 0000a724, cc: 0010620f]

index: 0000c52b

call [pc: f67eef10, cc: f66e8d1f]

call [pc: f67e86eb, cc: 00100bf4]

ret [pc: f67e86eb, cc: f66e8d1f]

call [pc: f67e87a2, cc: 00100abd]

call [pc: f67e3970, cc: f66e33cd]

ret [pc: f67e3970, cc: 00100abd]

call [pc: f67e3a4b, cc: f66e30f6]

call [pc: f67e2ec9, cc: 00101e3f]

ret [pc: f67e2ec9, cc: f66e30f6]

call [pc: f67e2ffb, cc: 00101f0d]

call [pc: f67ea16c, cc: f66ebe61]

ret [pc: f67ea16c, cc: 00101f0d]

call [pc: f67ea17e, cc: f66ebe73]

ret [pc: f67ea17e, cc: 00101f0d]

call [pc: f67ea1a2, cc: f66ebeaf]

ret [pc: f67ea1a2, cc: 00101f0d]

ret [pc: f67e2ffb, cc: f66e30f6]

call [pc: f67e353d, cc: 001005cb]

call [pc: f67e2d39, cc: f66e28f2]

ret [pc: f67e2d39, cc: 001005cb]

call [pc: f67e2da0, cc: f66e286b]

ret [pc: f67e2da0, cc: 001005cb]

call [pc: f67e2e60, cc: f66e2bab]

ret [pc: f67e2e60, cc: 001005cb]

ret [pc: f67e353d, cc: f66e30f6]

ret [pc: f67e3a4b, cc: 00100abd]

ret [pc: f67e87a2, cc: f66e8d1f]
----------------
IN: 
0xf67e8868:  call   *%eax


call [pc: f67e886a, cc: 00100575]
----------------
IN: 
0xf66724a0:  call   0xf671a99d


call [pc: f66724a5, cc: f67721d0]

ret [pc: f66724a5, cc: 00100575]
----------------
IN: 
0xf66724a5:  add    $0x13ab5b,%edx
0xf66724ab:  mov    -0xdc(%edx),%ecx
0xf66724b1:  lea    -0x13aaf0(%edx),%eax
0xf66724b7:  testl  $0x4000000,0x68(%ecx)
0xf66724be:  je     0xf66724f3

----------------
IN: 
0xf66724c0:  lea    -0x8b450(%edx),%eax
0xf66724c6:  testl  $0x10,0x94(%ecx)
0xf66724d0:  jne    0xf66724f3

----------------
IN: 
0xf66724d2:  testl  $0x200,0x64(%ecx)
0xf66724d9:  je     0xf66724f3

----------------
IN: 
0xf66724f3:  ret    


ret [pc: f67e886a, cc: f66e8d1f]
----------------
IN: 
0xf67e886a:  jmp    0xf67e87d2


ret [pc: f67eef10, cc: 0010620f]

ret [pc: f6721bb0, cc: f66279bf]
----------------
IN: 
0xf6721bb0:  push   %ebx
0xf6721bb1:  mov    0x10(%esp),%ecx
0xf6721bb5:  mov    0xc(%esp),%eax
0xf6721bb9:  mov    0x8(%esp),%edx
0xf6721bbd:  cmp    %edx,%eax
0xf6721bbf:  cmp    $0x10,%ecx
0xf6721bc2:  jbe    0xf6721e65

----------------
IN: 
0xf6721e65:  test   $0x18,%cl
0xf6721e68:  jne    0xf6721e8c

----------------
IN: 
0xf6721e6a:  test   $0x4,%cl
0xf6721e6d:  lea    0x0(%esi),%esi
0xf6721e70:  jne    0xf6721ea2

----------------
IN: 
0xf6721e72:  test   %ecx,%ecx
0xf6721e74:  je     0xf6721eae

----------------
IN: 
0xf6721e76:  movzbl (%eax),%ebx
0xf6721e79:  test   $0x2,%cl
0xf6721e7c:  mov    %bl,(%edx)
0xf6721e7e:  je     0xf6721eae

----------------
IN: 
0xf6721e80:  movzwl -0x2(%eax,%ecx,1),%ebx
0xf6721e85:  mov    %bx,-0x2(%edx,%ecx,1)
0xf6721e8a:  jmp    0xf6721eae

----------------
IN: 
0xf6721eae:  mov    %edx,%eax
0xf6721eb0:  pop    %ebx
0xf6721eb1:  ret    


ret [pc: 08048619, cc: fe66ffa6]
----------------
IN: main
0x08048619:  lea    0x24(%esp),%eax
0x0804861d:  mov    %eax,0x4(%esp)
0x08048621:  movl   $0x804874a,(%esp)
0x08048628:  call   0x804852d

index: 0000dada [pc: 0000257c, cc: fe66ffa6]

index: 0000dada

call [pc: 0804862d, cc: f662798b]
----------------
IN: a_strcmp
0x0804852d:  push   %ebp
0x0804852e:  mov    %esp,%ebp
0x08048530:  jmp    0x804854b

index: 00003469 [pc: 00004de2, cc: f662798b]

index: 00003469
----------------
IN: a_strcmp
0x0804854b:  mov    0x8(%ebp),%eax
0x0804854e:  movzbl (%eax),%edx
0x08048551:  mov    0xc(%ebp),%eax
0x08048554:  movzbl (%eax),%eax
0x08048557:  cmp    %al,%dl
0x08048559:  je     0x8048532

index: 00004876 [pc: 000031fd, cc: f662798b]

index: 00004876
----------------
IN: a_strcmp
0x08048532:  mov    0x8(%ebp),%eax
0x08048535:  movzbl (%eax),%eax
0x08048538:  test   %al,%al
0x0804853a:  jne    0x8048543

index: 00000272 [pc: 00007bf9, cc: f662798b]

index: 00000272
----------------
IN: a_strcmp
0x08048543:  addl   $0x1,0x8(%ebp)
0x08048547:  addl   $0x1,0xc(%ebp)
0x0804854b:  mov    0x8(%ebp),%eax
0x0804854e:  movzbl (%eax),%edx
0x08048551:  mov    0xc(%ebp),%eax
0x08048554:  movzbl (%eax),%eax
0x08048557:  cmp    %al,%dl
0x08048559:  je     0x8048532

index: 00004ff6 [pc: 0000367d, cc: f662798b]

index: 00004ff6
index: 00000672 [pc: 00007ff9, cc: f662798b]

index: 00000672
----------------
IN: a_strcmp
0x0804853c:  mov    $0x0,%eax
0x08048541:  jmp    0x8048577

index: 000030f1 [pc: 0000497a, cc: f662798b]

index: 000030f1
----------------
IN: a_strcmp
0x08048577:  pop    %ebp
0x08048578:  ret    

index: 00007cf5 [pc: 0000057e, cc: f662798b]

index: 00007cf5

ret [pc: 0804862d, cc: fe66ffa6]
----------------
IN: main
0x0804862d:  mov    %eax,0x18(%esp)
0x08048631:  cmpl   $0x0,0x18(%esp)
0x08048636:  jne    0x8048674

index: 0000856f [pc: 00007ac9, cc: fe66ffa6]

index: 0000856f
----------------
IN: main
0x08048638:  lea    0x1c(%esp),%eax
0x0804863c:  add    $0x3,%eax
0x0804863f:  mov    %eax,0x4(%esp)
0x08048643:  movl   $0x804874e,(%esp)
0x0804864a:  call   0x804852d

index: 0000bd74 [pc: 000042d2, cc: fe66ffa6]

index: 0000bd74

call [pc: 0804864f, cc: f66279e9]
index: 0000248a [pc: 00005d63, cc: f66279e9]

index: 0000248a

ret [pc: 0804864f, cc: fe66ffa6]
----------------
IN: main
0x0804864f:  mov    %eax,0x18(%esp)
0x08048653:  cmpl   $0x0,0x18(%esp)
0x08048658:  jne    0x8048680

index: 0000ca6b [pc: 000035cd, cc: fe66ffa6]

index: 0000ca6b
----------------
IN: main
0x0804865a:  movl   $0x8048752,(%esp)
0x08048661:  call   0x8048400

index: 0000ee71 [pc: 000011d7, cc: fe66ffa6]

index: 0000ee71

call [pc: 08048666, cc: f66279c0]
index: 000038b2 [pc: 00004172, cc: f66279c0]

index: 000038b2

call [pc: f665acab, cc: 0007d56b]

ret [pc: f665acab, cc: f66279c0]

call [pc: f665acbc, cc: 0007d57c]
----------------
IN: 
0xf667045d:  jp     0xf6670476

----------------
IN: 
0xf667045f:  cmp    %dh,(%eax)
0xf6670461:  je     0xf6670506

----------------
IN: 
0xf6670467:  inc    %eax
0xf6670468:  cmp    %dh,(%eax)
0xf667046a:  je     0xf6670506

----------------
IN: 
0xf6670470:  inc    %eax
0xf6670471:  xor    $0x2,%edx
0xf6670474:  je     0xf6670481

----------------
IN: 
0xf66704fc:  shr    $0x10,%ecx
0xf66704ff:  inc    %eax
0xf6670500:  cmp    $0x0,%cl
0xf6670503:  je     0xf6670506

----------------
IN: 
0xf6670505:  inc    %eax
0xf6670506:  sub    0x4(%esp),%eax
0xf667050a:  ret    


ret [pc: f665acbc, cc: f66279c0]
----------------
IN: 
0xf665ad3b:  cmp    $0xffffffff,%eax
0xf665ad3e:  jne    0xf665ae10

----------------
IN: 
0xf665ad44:  mov    0xdfc(%ebx),%edx
0xf665ad4a:  movsbl 0x46(%edx),%eax
0xf665ad4e:  mov    0x94(%edx,%eax,1),%eax
0xf665ad55:  sub    $0x4,%esp
0xf665ad58:  push   %esi
0xf665ad59:  pushl  0x8(%ebp)
0xf665ad5c:  push   %edx
0xf665ad5d:  call   *0x1c(%eax)


call [pc: f665ad60, cc: 0007d4a0]
----------------
IN: 
0xf66646d0:  mov    0x14(%ebx),%edx
0xf66646d3:  mov    0x20(%ebx),%ecx
0xf66646d6:  sub    %edx,%ecx
0xf66646d8:  cmp    %ecx,%esi
0xf66646da:  ja     0xf6664625

----------------
IN: 
0xf66646e0:  mov    0x24(%esp),%edi
0xf66646e4:  add    %esi,%edi
0xf66646e6:  cmp    %edi,0x24(%esp)
0xf66646ea:  jae    0xf666462d

----------------
IN: 
0xf66646f0:  cmpb   $0xa,-0x1(%edi)
0xf66646f4:  lea    -0x1(%edi),%eax
0xf66646f7:  je     0xf6664748

----------------
IN: 
0xf66646f9:  mov    0x24(%esp),%edi
0xf66646fd:  jmp    0xf6664708

----------------
IN: 
0xf6664708:  cmp    %edi,%eax
0xf666470a:  jne    0xf6664700

----------------
IN: 
0xf6664700:  sub    $0x1,%eax
0xf6664703:  cmpb   $0xa,(%eax)
0xf6664706:  je     0xf6664748

----------------
IN: 
0xf666470c:  jmp    0xf666462d

----------------
IN: 
0xf666462d:  xor    %ebp,%ebp
0xf666462f:  cmp    %ecx,%esi
0xf6664631:  cmovbe %esi,%ecx
0xf6664634:  sub    $0x4,%esp
0xf6664637:  push   %ecx
0xf6664638:  pushl  0x2c(%esp)
0xf666463c:  mov    %ecx,%edi
0xf666463e:  push   %edx
0xf666463f:  call   0xf6671f60


call [pc: f6664644, cc: f66192e4]
----------------
IN: 
0xf6671f60:  mov    0xc(%esp),%ecx
0xf6671f64:  mov    %edi,%eax
0xf6671f66:  mov    0x4(%esp),%edi
0xf6671f6a:  mov    %esi,%edx
0xf6671f6c:  mov    0x8(%esp),%esi
0xf6671f70:  cld    
0xf6671f71:  shr    %ecx
0xf6671f73:  jae    0xf6671f76

----------------
IN: 
0xf6671f75:  movsb  %ds:(%esi),%es:(%edi)
0xf6671f76:  shr    %ecx
0xf6671f78:  jae    0xf6671f7c

----------------
IN: 
0xf6671f7c:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0xf6671f7e:  xchg   %eax,%edi
0xf6671f7f:  mov    %edx,%esi
0xf6671f81:  ret    


ret [pc: f6664644, cc: 0007d4a0]
----------------
IN: 
0xf6664644:  mov    %eax,0x14(%ebx)
0xf6664647:  mov    %esi,%eax
0xf6664649:  add    %edi,0x34(%esp)
0xf666464d:  sub    %edi,%eax
0xf666464f:  add    $0x10,%esp
0xf6664652:  mov    %eax,%edi
0xf6664654:  add    %edi,%ebp
0xf6664656:  jne    0xf666478b


ret [pc: f665ad60, cc: f66279c0]

call [pc: f665adfb, cc: 0007d43b]

call [pc: f6665dd7, cc: f66189ec]

ret [pc: f6665dd7, cc: 0007d43b]

call [pc: f6665e12, cc: f6618a29]

call [pc: f66653ac, cc: 0007d985]

ret [pc: f66653ac, cc: f6618a29]

call [pc: f666547b, cc: 0007de52]

call [pc: f666512d, cc: f6618f7f]

call [pc: f66633e4, cc: 0007bc9b]

call [pc: f66640b1, cc: f661fc2a]

call [pc: f66d0a13, cc: 000cf639]

ret [pc: f66d0a13, cc: f661fc2a]

ret [pc: f66640b1, cc: 0007bc9b]

ret [pc: f66633e4, cc: f6618f7f]

ret [pc: f666512d, cc: 0007de52]

ret [pc: f666547b, cc: f6618a29]

ret [pc: f6665e12, cc: 0007d43b]

ret [pc: f665adfb, cc: f66279c0]

ret [pc: 08048666, cc: fe66ffa6]
----------------
IN: main
0x08048666:  movl   $0xb,(%esp)
0x0804866d:  call   0x80483b0

index: 0000f5e0 [pc: 00000a46, cc: fe66ffa6]

index: 0000f5e0

call [pc: 08048672, cc: f66279d4]
----------------
IN: 
0x080483b0:  jmp    *0x804a00c

index: 000096dc [pc: 0000ef08, cc: f66279d4]

index: 000096dc
----------------
IN: 
0x080483b6:  push   $0x0
0x080483bb:  jmp    0x80483a0

index: 0000fbf2 [pc: 00008226, cc: f66279d4]

index: 0000fbf2
index: 0000eef3 [pc: 00009727, cc: f66279d4]

index: 0000eef3

call [pc: f67eef10, cc: 001c96c4]

call [pc: f67e86eb, cc: f662102f]

ret [pc: f67e86eb, cc: 001c96c4]

call [pc: f67e87a2, cc: f6621166]

call [pc: f67e3970, cc: 001c2816]

ret [pc: f67e3970, cc: f6621166]

call [pc: f67e3a4b, cc: 001c2b2d]

call [pc: f67e2ec9, cc: f66205e4]

ret [pc: f67e2ec9, cc: 001c2b2d]

call [pc: f67e2ffb, cc: f66204d6]

call [pc: f67ea16c, cc: 001ca5ba]

ret [pc: f67ea16c, cc: f66204d6]

call [pc: f67ea17e, cc: 001ca5a8]

ret [pc: f67ea17e, cc: f66204d6]

call [pc: f67ea1a2, cc: 001ca574]

ret [pc: f67ea1a2, cc: f66204d6]

ret [pc: f67e2ffb, cc: 001c2b2d]

call [pc: f67e353d, cc: f6621e10]

call [pc: f67e2d39, cc: 001c3329]

ret [pc: f67e2d39, cc: f6621e10]

call [pc: f67e2da0, cc: 001c33b0]

ret [pc: f67e2da0, cc: f6621e10]

call [pc: f67e2e60, cc: 001c3070]

ret [pc: f67e2e60, cc: f6621e10]

ret [pc: f67e353d, cc: 001c2b2d]

ret [pc: f67e3a4b, cc: f6621166]

ret [pc: f67e87a2, cc: 001c96c4]

ret [pc: f67eef10, cc: f66279d4]

ret [pc: f6626e70, cc: 000017a4]
----------------
IN: 
0xf6626e70:  push   %ebx
0xf6626e71:  mov    0x8(%esp),%edx
0xf6626e75:  mov    %gs:0x6c,%ebx
0xf6626e7c:  mov    %gs:0x68,%ecx
0xf6626e83:  test   %ecx,%ecx
0xf6626e85:  jne    0xf6626eb8

----------------
IN: 
0xf6626e87:  mov    $0xe0,%eax
0xf6626e8c:  call   *%gs:0x10


call [pc: f6626e93, cc: f6627937]

ret [pc: f6626e93, cc: 000017a4]
----------------
IN: 
0xf6626e93:  mov    %eax,%ebx
0xf6626e95:  mov    %eax,%gs:0x68
0xf6626e9b:  mov    %eax,%ecx
0xf6626e9d:  mov    $0x10e,%eax
0xf6626ea2:  call   *%gs:0x10


call [pc: f6626ea9, cc: f662790d]
qemu: uncaught target signal 11 (Segmentation fault) - core dumped
